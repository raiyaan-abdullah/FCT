[03/27 13:56:18] detectron2 INFO: Rank of current process: 0. World size: 1
[03/27 13:56:19] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/27 13:56:19] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/27 13:56:19] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc_with_small",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/27 13:56:19] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc_with_small[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/27 13:56:19] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/27 13:56:19] d2.utils.env INFO: Using a generated random seed 20318550
[03/27 13:56:37] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/27 14:19:48] detectron2 INFO: Rank of current process: 0. World size: 1
[03/27 14:19:49] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/27 14:19:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/27 14:19:49] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/27 14:19:49] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/27 14:19:49] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/27 14:19:49] d2.utils.env INFO: Using a generated random seed 49874601
[03/27 14:19:51] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/27 14:37:41] detectron2 INFO: Rank of current process: 0. World size: 1
[03/27 14:37:41] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/27 14:37:41] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/27 14:37:42] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/27 14:37:42] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/27 14:37:42] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/27 14:37:42] d2.utils.env INFO: Using a generated random seed 42782660
[03/27 14:37:44] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/27 15:01:39] detectron2 INFO: Rank of current process: 0. World size: 1
[03/27 15:01:39] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/27 15:01:39] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/27 15:01:39] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/27 15:01:39] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/27 15:01:39] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/27 15:01:39] d2.utils.env INFO: Using a generated random seed 40291371
[03/27 15:01:42] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/27 15:12:49] detectron2 INFO: Rank of current process: 0. World size: 1
[03/27 15:12:50] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/27 15:12:50] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/27 15:12:50] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/27 15:12:50] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/27 15:12:50] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/27 15:12:50] d2.utils.env INFO: Using a generated random seed 50911993
[03/27 15:12:52] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 00:22:50] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 00:22:51] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 00:22:51] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 00:22:51] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 00:22:51] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 00:22:51] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 00:22:51] d2.utils.env INFO: Using a generated random seed 52175445
[03/30 00:22:54] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 00:52:08] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 00:52:10] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 00:52:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 00:52:10] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 00:52:10] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 00:52:10] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 00:52:11] d2.utils.env INFO: Using a generated random seed 12291626
[03/30 01:20:29] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 01:20:31] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 01:20:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 01:20:31] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 01:20:31] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 01:20:31] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 01:20:32] d2.utils.env INFO: Using a generated random seed 33122246
[03/30 01:21:34] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 01:21:34] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 01:21:34] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 01:21:34] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 01:21:34] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 01:21:34] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 01:21:34] d2.utils.env INFO: Using a generated random seed 35624684
[03/30 01:21:37] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 01:51:34] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 01:51:35] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 01:51:35] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 01:51:36] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 01:51:36] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 01:51:36] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 01:51:36] d2.utils.env INFO: Using a generated random seed 37571425
[03/30 03:13:49] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 03:13:49] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 03:13:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 03:13:49] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 03:13:49] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 03:13:49] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 03:13:49] d2.utils.env INFO: Using a generated random seed 50708295
[03/30 03:13:52] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 03:14:44] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 03:14:45] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 03:14:45] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 03:14:45] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 03:14:45] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 03:14:45] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 03:14:45] d2.utils.env INFO: Using a generated random seed 46303711
[03/30 03:14:48] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 03:14:48] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/30 03:14:48] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/30 03:14:48] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[03/30 03:14:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/30 03:14:48] d2.data.build INFO: Using training sampler TrainingSampler
[03/30 03:14:48] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/30 03:14:48] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/30 03:14:48] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/30 03:14:48] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/30 03:14:48] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/30 03:14:48] d2.engine.train_loop INFO: Starting training from iteration 0
[03/30 03:14:49] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 173, in forward
    x = x + self.drop_path(self.mlp(self.norm2(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 52, in forward
    x = self.fc1(x)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1848, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: CUDA out of memory. Tried to allocate 156.00 MiB (GPU 0; 23.70 GiB total capacity; 20.73 GiB already allocated; 92.69 MiB free; 20.87 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/30 03:14:49] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[03/30 03:14:49] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 21230M
[03/30 03:15:10] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 03:15:11] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 03:15:11] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 03:15:11] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 03:15:11] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 03:15:11] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 03:15:11] d2.utils.env INFO: Using a generated random seed 12196405
[03/30 03:15:14] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 03:15:14] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/30 03:15:14] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/30 03:15:14] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[03/30 03:15:14] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/30 03:15:14] d2.data.build INFO: Using training sampler TrainingSampler
[03/30 03:15:14] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/30 03:15:14] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/30 03:15:14] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/30 03:15:14] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/30 03:15:14] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/30 03:15:14] d2.engine.train_loop INFO: Starting training from iteration 0
[03/30 03:15:15] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 173, in forward
    x = x + self.drop_path(self.mlp(self.norm2(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 58, in forward
    x = self.fc2(x)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1848, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: CUDA out of memory. Tried to allocate 66.00 MiB (GPU 0; 23.70 GiB total capacity; 20.78 GiB already allocated; 102.69 MiB free; 20.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/30 03:15:15] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[03/30 03:15:15] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 21281M
[03/30 03:25:08] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 03:25:09] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 03:25:09] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 03:25:09] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 03:25:09] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 03:25:09] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 03:25:09] d2.utils.env INFO: Using a generated random seed 10052347
[03/30 03:25:11] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 03:25:11] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/30 03:25:11] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/30 03:25:11] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[03/30 03:25:11] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/30 03:25:11] d2.data.build INFO: Using training sampler TrainingSampler
[03/30 03:25:11] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/30 03:25:11] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/30 03:25:11] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/30 03:25:11] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/30 03:25:11] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/30 03:25:11] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/30 03:25:11] d2.engine.train_loop INFO: Starting training from iteration 0
[03/30 03:25:30] d2.utils.events INFO:  eta: 1:17:33  iter: 19  total_loss: 5.326  loss_cls: 4.398  loss_box_reg: 0.1336  loss_rpn_cls: 0.691  loss_rpn_loc: 0.07616  time: 0.8958  data_time: 0.0127  lr: 3.9962e-06  max_mem: 15125M
[03/30 03:25:47] d2.utils.events INFO:  eta: 1:15:57  iter: 39  total_loss: 4.934  loss_cls: 4.066  loss_box_reg: 0.1625  loss_rpn_cls: 0.6889  loss_rpn_loc: 0.08877  time: 0.8808  data_time: 0.0021  lr: 7.9922e-06  max_mem: 15386M
[03/30 03:26:05] d2.utils.events INFO:  eta: 1:15:00  iter: 59  total_loss: 4.075  loss_cls: 3.112  loss_box_reg: 0.1289  loss_rpn_cls: 0.6861  loss_rpn_loc: 0.0647  time: 0.8738  data_time: 0.0022  lr: 1.1988e-05  max_mem: 15386M
[03/30 03:26:23] d2.utils.events INFO:  eta: 1:15:14  iter: 79  total_loss: 1.707  loss_cls: 0.8744  loss_box_reg: 0.1021  loss_rpn_cls: 0.6831  loss_rpn_loc: 0.05193  time: 0.8810  data_time: 0.0023  lr: 1.5984e-05  max_mem: 15386M
[03/30 03:26:41] d2.utils.events INFO:  eta: 1:14:59  iter: 99  total_loss: 1.079  loss_cls: 0.2866  loss_box_reg: 0.06651  loss_rpn_cls: 0.6606  loss_rpn_loc: 0.05786  time: 0.8835  data_time: 0.0023  lr: 1.998e-05  max_mem: 15386M
[03/30 03:26:58] d2.utils.events INFO:  eta: 1:14:22  iter: 119  total_loss: 1.025  loss_cls: 0.2825  loss_box_reg: 0.09202  loss_rpn_cls: 0.587  loss_rpn_loc: 0.06743  time: 0.8800  data_time: 0.0024  lr: 2.3976e-05  max_mem: 15386M
[03/30 03:27:15] d2.utils.events INFO:  eta: 1:14:04  iter: 139  total_loss: 1.203  loss_cls: 0.4314  loss_box_reg: 0.3226  loss_rpn_cls: 0.3947  loss_rpn_loc: 0.06249  time: 0.8783  data_time: 0.0023  lr: 2.7972e-05  max_mem: 15386M
[03/30 03:27:33] d2.utils.events INFO:  eta: 1:13:22  iter: 159  total_loss: 1.123  loss_cls: 0.3973  loss_box_reg: 0.3903  loss_rpn_cls: 0.2845  loss_rpn_loc: 0.07041  time: 0.8789  data_time: 0.0025  lr: 3.1968e-05  max_mem: 15386M
[03/30 03:27:50] d2.utils.events INFO:  eta: 1:12:43  iter: 179  total_loss: 1.393  loss_cls: 0.58  loss_box_reg: 0.5047  loss_rpn_cls: 0.2567  loss_rpn_loc: 0.06782  time: 0.8751  data_time: 0.0024  lr: 3.5964e-05  max_mem: 15386M
[03/30 03:28:08] d2.utils.events INFO:  eta: 1:12:25  iter: 199  total_loss: 1.427  loss_cls: 0.5649  loss_box_reg: 0.5342  loss_rpn_cls: 0.2104  loss_rpn_loc: 0.07167  time: 0.8755  data_time: 0.0024  lr: 3.996e-05  max_mem: 15386M
[03/30 03:28:26] d2.utils.events INFO:  eta: 1:12:13  iter: 219  total_loss: 1.075  loss_cls: 0.4152  loss_box_reg: 0.4554  loss_rpn_cls: 0.1462  loss_rpn_loc: 0.04543  time: 0.8771  data_time: 0.0023  lr: 4.3956e-05  max_mem: 15386M
[03/30 03:28:43] d2.utils.events INFO:  eta: 1:11:47  iter: 239  total_loss: 1.29  loss_cls: 0.5017  loss_box_reg: 0.5397  loss_rpn_cls: 0.1363  loss_rpn_loc: 0.05764  time: 0.8769  data_time: 0.0024  lr: 4.7952e-05  max_mem: 15386M
[03/30 03:29:02] d2.utils.events INFO:  eta: 1:11:55  iter: 259  total_loss: 1.385  loss_cls: 0.5546  loss_box_reg: 0.6347  loss_rpn_cls: 0.1455  loss_rpn_loc: 0.06779  time: 0.8812  data_time: 0.0025  lr: 5.1948e-05  max_mem: 15386M
[03/30 03:29:21] d2.utils.events INFO:  eta: 1:11:57  iter: 279  total_loss: 1.329  loss_cls: 0.5295  loss_box_reg: 0.646  loss_rpn_cls: 0.1276  loss_rpn_loc: 0.06971  time: 0.8850  data_time: 0.0025  lr: 5.5944e-05  max_mem: 15386M
[03/30 03:29:38] d2.utils.events INFO:  eta: 1:11:39  iter: 299  total_loss: 1.553  loss_cls: 0.6145  loss_box_reg: 0.7391  loss_rpn_cls: 0.1313  loss_rpn_loc: 0.06136  time: 0.8831  data_time: 0.0024  lr: 5.994e-05  max_mem: 15386M
[03/30 03:29:55] d2.utils.events INFO:  eta: 1:11:12  iter: 319  total_loss: 1.402  loss_cls: 0.5039  loss_box_reg: 0.6966  loss_rpn_cls: 0.1211  loss_rpn_loc: 0.05722  time: 0.8807  data_time: 0.0024  lr: 6.3936e-05  max_mem: 15386M
[03/30 03:30:12] d2.utils.events INFO:  eta: 1:10:43  iter: 339  total_loss: 1.342  loss_cls: 0.4842  loss_box_reg: 0.7527  loss_rpn_cls: 0.1021  loss_rpn_loc: 0.06452  time: 0.8798  data_time: 0.0024  lr: 6.7932e-05  max_mem: 15386M
[03/30 03:30:29] d2.utils.events INFO:  eta: 1:10:15  iter: 359  total_loss: 1.54  loss_cls: 0.4939  loss_box_reg: 0.7963  loss_rpn_cls: 0.1245  loss_rpn_loc: 0.07199  time: 0.8787  data_time: 0.0024  lr: 7.1928e-05  max_mem: 15386M
[03/30 03:30:47] d2.utils.events INFO:  eta: 1:09:51  iter: 379  total_loss: 1.416  loss_cls: 0.4252  loss_box_reg: 0.7959  loss_rpn_cls: 0.08348  loss_rpn_loc: 0.06578  time: 0.8780  data_time: 0.0025  lr: 7.5924e-05  max_mem: 15386M
[03/30 03:31:04] d2.utils.events INFO:  eta: 1:09:33  iter: 399  total_loss: 1.267  loss_cls: 0.3935  loss_box_reg: 0.6423  loss_rpn_cls: 0.08258  loss_rpn_loc: 0.05571  time: 0.8776  data_time: 0.0024  lr: 7.992e-05  max_mem: 15386M
[03/30 03:31:21] d2.utils.events INFO:  eta: 1:09:10  iter: 419  total_loss: 1.232  loss_cls: 0.4044  loss_box_reg: 0.6962  loss_rpn_cls: 0.08982  loss_rpn_loc: 0.04881  time: 0.8760  data_time: 0.0023  lr: 8.3916e-05  max_mem: 15386M
[03/30 03:31:40] d2.utils.events INFO:  eta: 1:08:58  iter: 439  total_loss: 1.265  loss_cls: 0.434  loss_box_reg: 0.7298  loss_rpn_cls: 0.07591  loss_rpn_loc: 0.0634  time: 0.8784  data_time: 0.0025  lr: 8.7912e-05  max_mem: 15386M
[03/30 03:31:58] d2.utils.events INFO:  eta: 1:08:44  iter: 459  total_loss: 1.342  loss_cls: 0.4388  loss_box_reg: 0.7265  loss_rpn_cls: 0.07728  loss_rpn_loc: 0.06785  time: 0.8789  data_time: 0.0024  lr: 9.1908e-05  max_mem: 15386M
[03/30 03:32:14] d2.utils.events INFO:  eta: 1:08:21  iter: 479  total_loss: 1.362  loss_cls: 0.4334  loss_box_reg: 0.6721  loss_rpn_cls: 0.08939  loss_rpn_loc: 0.06845  time: 0.8776  data_time: 0.0022  lr: 9.5904e-05  max_mem: 15386M
[03/30 03:32:32] d2.utils.events INFO:  eta: 1:08:03  iter: 499  total_loss: 1.136  loss_cls: 0.377  loss_box_reg: 0.639  loss_rpn_cls: 0.1121  loss_rpn_loc: 0.05642  time: 0.8779  data_time: 0.0023  lr: 9.99e-05  max_mem: 15386M
[03/30 03:32:50] d2.utils.events INFO:  eta: 1:07:49  iter: 519  total_loss: 1.212  loss_cls: 0.393  loss_box_reg: 0.7082  loss_rpn_cls: 0.05537  loss_rpn_loc: 0.04751  time: 0.8783  data_time: 0.0025  lr: 0.0001039  max_mem: 15386M
[03/30 03:33:08] d2.utils.events INFO:  eta: 1:07:31  iter: 539  total_loss: 1.011  loss_cls: 0.3837  loss_box_reg: 0.5596  loss_rpn_cls: 0.06241  loss_rpn_loc: 0.04927  time: 0.8791  data_time: 0.0023  lr: 0.00010789  max_mem: 15386M
[03/30 03:33:26] d2.utils.events INFO:  eta: 1:07:09  iter: 559  total_loss: 1.038  loss_cls: 0.3349  loss_box_reg: 0.5683  loss_rpn_cls: 0.05563  loss_rpn_loc: 0.04052  time: 0.8787  data_time: 0.0023  lr: 0.00011189  max_mem: 15386M
[03/30 03:33:43] d2.utils.events INFO:  eta: 1:06:51  iter: 579  total_loss: 0.8507  loss_cls: 0.2752  loss_box_reg: 0.4944  loss_rpn_cls: 0.04291  loss_rpn_loc: 0.04376  time: 0.8792  data_time: 0.0027  lr: 0.00011588  max_mem: 15386M
[03/30 03:34:01] d2.utils.events INFO:  eta: 1:06:33  iter: 599  total_loss: 1.101  loss_cls: 0.3824  loss_box_reg: 0.6163  loss_rpn_cls: 0.05804  loss_rpn_loc: 0.04899  time: 0.8798  data_time: 0.0023  lr: 0.00011988  max_mem: 15386M
[03/30 03:34:19] d2.utils.events INFO:  eta: 1:06:15  iter: 619  total_loss: 1.052  loss_cls: 0.3297  loss_box_reg: 0.5821  loss_rpn_cls: 0.04866  loss_rpn_loc: 0.04848  time: 0.8805  data_time: 0.0025  lr: 0.00012388  max_mem: 15386M
[03/30 03:34:37] d2.utils.events INFO:  eta: 1:05:57  iter: 639  total_loss: 1.027  loss_cls: 0.3606  loss_box_reg: 0.5651  loss_rpn_cls: 0.06161  loss_rpn_loc: 0.05253  time: 0.8805  data_time: 0.0025  lr: 0.00012787  max_mem: 15386M
[03/30 03:34:55] d2.utils.events INFO:  eta: 1:05:39  iter: 659  total_loss: 1.127  loss_cls: 0.3616  loss_box_reg: 0.6339  loss_rpn_cls: 0.06211  loss_rpn_loc: 0.06066  time: 0.8807  data_time: 0.0025  lr: 0.00013187  max_mem: 15386M
[03/30 03:35:13] d2.utils.events INFO:  eta: 1:05:27  iter: 679  total_loss: 0.9047  loss_cls: 0.2855  loss_box_reg: 0.5066  loss_rpn_cls: 0.04737  loss_rpn_loc: 0.05192  time: 0.8810  data_time: 0.0025  lr: 0.00013586  max_mem: 15386M
[03/30 03:35:31] d2.utils.events INFO:  eta: 1:05:11  iter: 699  total_loss: 0.8192  loss_cls: 0.2533  loss_box_reg: 0.4459  loss_rpn_cls: 0.05637  loss_rpn_loc: 0.04491  time: 0.8811  data_time: 0.0025  lr: 0.00013986  max_mem: 15386M
[03/30 03:35:47] d2.utils.events INFO:  eta: 1:04:44  iter: 719  total_loss: 0.9752  loss_cls: 0.3111  loss_box_reg: 0.5512  loss_rpn_cls: 0.05996  loss_rpn_loc: 0.05852  time: 0.8798  data_time: 0.0024  lr: 0.00014386  max_mem: 15386M
[03/30 03:36:05] d2.utils.events INFO:  eta: 1:04:25  iter: 739  total_loss: 0.8506  loss_cls: 0.2934  loss_box_reg: 0.4738  loss_rpn_cls: 0.04518  loss_rpn_loc: 0.04341  time: 0.8795  data_time: 0.0025  lr: 0.00014785  max_mem: 15386M
[03/30 03:36:22] d2.utils.events INFO:  eta: 1:04:06  iter: 759  total_loss: 0.9201  loss_cls: 0.3103  loss_box_reg: 0.4699  loss_rpn_cls: 0.04801  loss_rpn_loc: 0.05087  time: 0.8789  data_time: 0.0025  lr: 0.00015185  max_mem: 15386M
[03/30 03:36:40] d2.utils.events INFO:  eta: 1:03:48  iter: 779  total_loss: 0.7245  loss_cls: 0.2674  loss_box_reg: 0.4082  loss_rpn_cls: 0.03241  loss_rpn_loc: 0.02819  time: 0.8790  data_time: 0.0026  lr: 0.00015584  max_mem: 15386M
[03/30 03:36:57] d2.utils.events INFO:  eta: 1:03:30  iter: 799  total_loss: 1.105  loss_cls: 0.3868  loss_box_reg: 0.6001  loss_rpn_cls: 0.06015  loss_rpn_loc: 0.06349  time: 0.8789  data_time: 0.0026  lr: 0.00015984  max_mem: 15386M
[03/30 03:37:15] d2.utils.events INFO:  eta: 1:03:11  iter: 819  total_loss: 0.836  loss_cls: 0.2995  loss_box_reg: 0.4833  loss_rpn_cls: 0.03644  loss_rpn_loc: 0.04522  time: 0.8790  data_time: 0.0027  lr: 0.00016384  max_mem: 15386M
[03/30 03:37:33] d2.utils.events INFO:  eta: 1:02:54  iter: 839  total_loss: 0.9859  loss_cls: 0.3922  loss_box_reg: 0.5124  loss_rpn_cls: 0.04194  loss_rpn_loc: 0.04595  time: 0.8796  data_time: 0.0025  lr: 0.00016783  max_mem: 15386M
[03/30 03:37:50] d2.utils.events INFO:  eta: 1:02:36  iter: 859  total_loss: 0.9471  loss_cls: 0.3167  loss_box_reg: 0.5102  loss_rpn_cls: 0.05793  loss_rpn_loc: 0.04854  time: 0.8788  data_time: 0.0024  lr: 0.00017183  max_mem: 15386M
[03/30 03:38:08] d2.utils.events INFO:  eta: 1:02:21  iter: 879  total_loss: 0.868  loss_cls: 0.2884  loss_box_reg: 0.4627  loss_rpn_cls: 0.05748  loss_rpn_loc: 0.0585  time: 0.8794  data_time: 0.0025  lr: 0.00017582  max_mem: 15386M
[03/30 03:38:25] d2.utils.events INFO:  eta: 1:02:00  iter: 899  total_loss: 0.7401  loss_cls: 0.258  loss_box_reg: 0.4035  loss_rpn_cls: 0.03545  loss_rpn_loc: 0.03532  time: 0.8786  data_time: 0.0025  lr: 0.00017982  max_mem: 15386M
[03/30 03:38:43] d2.utils.events INFO:  eta: 1:01:43  iter: 919  total_loss: 0.8659  loss_cls: 0.3093  loss_box_reg: 0.5057  loss_rpn_cls: 0.03294  loss_rpn_loc: 0.03147  time: 0.8788  data_time: 0.0026  lr: 0.00018382  max_mem: 15386M
[03/30 03:39:00] d2.utils.events INFO:  eta: 1:01:25  iter: 939  total_loss: 0.8555  loss_cls: 0.32  loss_box_reg: 0.4614  loss_rpn_cls: 0.03957  loss_rpn_loc: 0.04812  time: 0.8787  data_time: 0.0025  lr: 0.00018781  max_mem: 15386M
[03/30 03:39:18] d2.utils.events INFO:  eta: 1:01:06  iter: 959  total_loss: 0.7792  loss_cls: 0.289  loss_box_reg: 0.4076  loss_rpn_cls: 0.0437  loss_rpn_loc: 0.0457  time: 0.8787  data_time: 0.0026  lr: 0.00019181  max_mem: 15386M
[03/30 03:39:35] d2.utils.events INFO:  eta: 1:00:47  iter: 979  total_loss: 0.9401  loss_cls: 0.3071  loss_box_reg: 0.4966  loss_rpn_cls: 0.04804  loss_rpn_loc: 0.05929  time: 0.8785  data_time: 0.0025  lr: 0.0001958  max_mem: 15386M
[03/30 03:39:53] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0000999.pth
[03/30 03:39:53] d2.utils.events INFO:  eta: 1:00:29  iter: 999  total_loss: 0.8787  loss_cls: 0.3315  loss_box_reg: 0.4811  loss_rpn_cls: 0.04146  loss_rpn_loc: 0.04714  time: 0.8785  data_time: 0.0026  lr: 0.0001998  max_mem: 15386M
[03/30 03:40:12] d2.utils.events INFO:  eta: 1:00:11  iter: 1019  total_loss: 0.8918  loss_cls: 0.3  loss_box_reg: 0.508  loss_rpn_cls: 0.03913  loss_rpn_loc: 0.05103  time: 0.8796  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:40:29] d2.utils.events INFO:  eta: 0:59:53  iter: 1039  total_loss: 0.8031  loss_cls: 0.281  loss_box_reg: 0.4237  loss_rpn_cls: 0.03795  loss_rpn_loc: 0.04493  time: 0.8795  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:40:46] d2.utils.events INFO:  eta: 0:59:33  iter: 1059  total_loss: 0.8417  loss_cls: 0.2934  loss_box_reg: 0.4267  loss_rpn_cls: 0.05224  loss_rpn_loc: 0.04977  time: 0.8790  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:41:05] d2.utils.events INFO:  eta: 0:59:16  iter: 1079  total_loss: 0.7767  loss_cls: 0.2666  loss_box_reg: 0.4519  loss_rpn_cls: 0.03902  loss_rpn_loc: 0.04964  time: 0.8797  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:41:23] d2.utils.events INFO:  eta: 0:58:58  iter: 1099  total_loss: 0.7306  loss_cls: 0.2451  loss_box_reg: 0.393  loss_rpn_cls: 0.02433  loss_rpn_loc: 0.04089  time: 0.8801  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:41:40] d2.utils.events INFO:  eta: 0:58:46  iter: 1119  total_loss: 0.7763  loss_cls: 0.2481  loss_box_reg: 0.4724  loss_rpn_cls: 0.0302  loss_rpn_loc: 0.03707  time: 0.8800  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:41:58] d2.utils.events INFO:  eta: 0:58:31  iter: 1139  total_loss: 0.7943  loss_cls: 0.2708  loss_box_reg: 0.3958  loss_rpn_cls: 0.05128  loss_rpn_loc: 0.05279  time: 0.8803  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:42:15] d2.utils.events INFO:  eta: 0:58:11  iter: 1159  total_loss: 0.8497  loss_cls: 0.2792  loss_box_reg: 0.4398  loss_rpn_cls: 0.02908  loss_rpn_loc: 0.05471  time: 0.8796  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:42:33] d2.utils.events INFO:  eta: 0:57:56  iter: 1179  total_loss: 0.8053  loss_cls: 0.2691  loss_box_reg: 0.4357  loss_rpn_cls: 0.02724  loss_rpn_loc: 0.05348  time: 0.8800  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:42:50] d2.utils.events INFO:  eta: 0:57:36  iter: 1199  total_loss: 0.6692  loss_cls: 0.2394  loss_box_reg: 0.3584  loss_rpn_cls: 0.0264  loss_rpn_loc: 0.03928  time: 0.8793  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:43:08] d2.utils.events INFO:  eta: 0:57:18  iter: 1219  total_loss: 0.8388  loss_cls: 0.2787  loss_box_reg: 0.4824  loss_rpn_cls: 0.02928  loss_rpn_loc: 0.04689  time: 0.8793  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:43:26] d2.utils.events INFO:  eta: 0:57:05  iter: 1239  total_loss: 0.7044  loss_cls: 0.279  loss_box_reg: 0.3755  loss_rpn_cls: 0.04225  loss_rpn_loc: 0.03495  time: 0.8798  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:43:44] d2.utils.events INFO:  eta: 0:56:44  iter: 1259  total_loss: 0.6986  loss_cls: 0.2461  loss_box_reg: 0.3662  loss_rpn_cls: 0.02886  loss_rpn_loc: 0.03512  time: 0.8802  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:44:01] d2.utils.events INFO:  eta: 0:56:19  iter: 1279  total_loss: 0.8225  loss_cls: 0.2565  loss_box_reg: 0.4188  loss_rpn_cls: 0.03754  loss_rpn_loc: 0.04517  time: 0.8796  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:44:19] d2.utils.events INFO:  eta: 0:56:02  iter: 1299  total_loss: 0.7068  loss_cls: 0.2092  loss_box_reg: 0.3803  loss_rpn_cls: 0.02757  loss_rpn_loc: 0.0495  time: 0.8799  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:44:37] d2.utils.events INFO:  eta: 0:55:48  iter: 1319  total_loss: 0.7161  loss_cls: 0.2212  loss_box_reg: 0.3667  loss_rpn_cls: 0.03822  loss_rpn_loc: 0.0483  time: 0.8801  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:44:54] d2.utils.events INFO:  eta: 0:55:30  iter: 1339  total_loss: 0.6734  loss_cls: 0.2357  loss_box_reg: 0.378  loss_rpn_cls: 0.02545  loss_rpn_loc: 0.03522  time: 0.8799  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:45:12] d2.utils.events INFO:  eta: 0:55:14  iter: 1359  total_loss: 0.5762  loss_cls: 0.2115  loss_box_reg: 0.3362  loss_rpn_cls: 0.02695  loss_rpn_loc: 0.02522  time: 0.8800  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:45:30] d2.utils.events INFO:  eta: 0:54:59  iter: 1379  total_loss: 0.6473  loss_cls: 0.2026  loss_box_reg: 0.3844  loss_rpn_cls: 0.01768  loss_rpn_loc: 0.03292  time: 0.8799  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:45:48] d2.utils.events INFO:  eta: 0:54:44  iter: 1399  total_loss: 0.8071  loss_cls: 0.2706  loss_box_reg: 0.4673  loss_rpn_cls: 0.01912  loss_rpn_loc: 0.04518  time: 0.8804  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:46:05] d2.utils.events INFO:  eta: 0:54:25  iter: 1419  total_loss: 0.7469  loss_cls: 0.2353  loss_box_reg: 0.4091  loss_rpn_cls: 0.02161  loss_rpn_loc: 0.04754  time: 0.8797  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:46:21] d2.utils.events INFO:  eta: 0:53:55  iter: 1439  total_loss: 0.8314  loss_cls: 0.2869  loss_box_reg: 0.4471  loss_rpn_cls: 0.02982  loss_rpn_loc: 0.04619  time: 0.8792  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:46:39] d2.utils.events INFO:  eta: 0:53:39  iter: 1459  total_loss: 0.6085  loss_cls: 0.2141  loss_box_reg: 0.3916  loss_rpn_cls: 0.02471  loss_rpn_loc: 0.0342  time: 0.8793  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:46:56] d2.utils.events INFO:  eta: 0:53:23  iter: 1479  total_loss: 0.7313  loss_cls: 0.2656  loss_box_reg: 0.3741  loss_rpn_cls: 0.0365  loss_rpn_loc: 0.05459  time: 0.8789  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:47:14] d2.utils.events INFO:  eta: 0:53:05  iter: 1499  total_loss: 0.7407  loss_cls: 0.2758  loss_box_reg: 0.3671  loss_rpn_cls: 0.03598  loss_rpn_loc: 0.05218  time: 0.8788  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:47:32] d2.utils.events INFO:  eta: 0:52:46  iter: 1519  total_loss: 0.706  loss_cls: 0.2511  loss_box_reg: 0.3829  loss_rpn_cls: 0.02687  loss_rpn_loc: 0.04899  time: 0.8790  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:47:50] d2.utils.events INFO:  eta: 0:52:31  iter: 1539  total_loss: 0.7701  loss_cls: 0.2553  loss_box_reg: 0.4127  loss_rpn_cls: 0.02254  loss_rpn_loc: 0.04775  time: 0.8794  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:48:09] d2.utils.events INFO:  eta: 0:52:22  iter: 1559  total_loss: 0.6205  loss_cls: 0.2032  loss_box_reg: 0.3487  loss_rpn_cls: 0.025  loss_rpn_loc: 0.03726  time: 0.8803  data_time: 0.0028  lr: 0.0002  max_mem: 15386M
[03/30 03:48:27] d2.utils.events INFO:  eta: 0:52:06  iter: 1579  total_loss: 0.5979  loss_cls: 0.2233  loss_box_reg: 0.3577  loss_rpn_cls: 0.02193  loss_rpn_loc: 0.02796  time: 0.8806  data_time: 0.0028  lr: 0.0002  max_mem: 15386M
[03/30 03:48:45] d2.utils.events INFO:  eta: 0:51:50  iter: 1599  total_loss: 0.6336  loss_cls: 0.2327  loss_box_reg: 0.3795  loss_rpn_cls: 0.02286  loss_rpn_loc: 0.04149  time: 0.8810  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:49:02] d2.utils.events INFO:  eta: 0:51:29  iter: 1619  total_loss: 0.6315  loss_cls: 0.1955  loss_box_reg: 0.3896  loss_rpn_cls: 0.02121  loss_rpn_loc: 0.03267  time: 0.8806  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:49:20] d2.utils.events INFO:  eta: 0:51:08  iter: 1639  total_loss: 0.6777  loss_cls: 0.2147  loss_box_reg: 0.3464  loss_rpn_cls: 0.03002  loss_rpn_loc: 0.04245  time: 0.8806  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 03:49:37] d2.utils.events INFO:  eta: 0:50:50  iter: 1659  total_loss: 0.6775  loss_cls: 0.2093  loss_box_reg: 0.3526  loss_rpn_cls: 0.02901  loss_rpn_loc: 0.03754  time: 0.8804  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:49:56] d2.utils.events INFO:  eta: 0:50:36  iter: 1679  total_loss: 0.6016  loss_cls: 0.1798  loss_box_reg: 0.3518  loss_rpn_cls: 0.01766  loss_rpn_loc: 0.03406  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:50:13] d2.utils.events INFO:  eta: 0:50:11  iter: 1699  total_loss: 0.5848  loss_cls: 0.1879  loss_box_reg: 0.3478  loss_rpn_cls: 0.02092  loss_rpn_loc: 0.03081  time: 0.8806  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:50:31] d2.utils.events INFO:  eta: 0:50:00  iter: 1719  total_loss: 0.6327  loss_cls: 0.201  loss_box_reg: 0.3389  loss_rpn_cls: 0.01715  loss_rpn_loc: 0.04001  time: 0.8806  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:50:49] d2.utils.events INFO:  eta: 0:49:44  iter: 1739  total_loss: 0.6113  loss_cls: 0.1814  loss_box_reg: 0.3742  loss_rpn_cls: 0.01613  loss_rpn_loc: 0.03315  time: 0.8810  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:51:06] d2.utils.events INFO:  eta: 0:49:26  iter: 1759  total_loss: 0.6592  loss_cls: 0.1843  loss_box_reg: 0.3851  loss_rpn_cls: 0.01995  loss_rpn_loc: 0.04358  time: 0.8806  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:51:23] d2.utils.events INFO:  eta: 0:49:07  iter: 1779  total_loss: 0.5549  loss_cls: 0.1711  loss_box_reg: 0.3295  loss_rpn_cls: 0.02253  loss_rpn_loc: 0.0448  time: 0.8803  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:51:41] d2.utils.events INFO:  eta: 0:48:49  iter: 1799  total_loss: 0.6354  loss_cls: 0.2247  loss_box_reg: 0.3441  loss_rpn_cls: 0.02164  loss_rpn_loc: 0.04175  time: 0.8804  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:51:59] d2.utils.events INFO:  eta: 0:48:33  iter: 1819  total_loss: 0.5708  loss_cls: 0.1741  loss_box_reg: 0.3372  loss_rpn_cls: 0.0232  loss_rpn_loc: 0.03927  time: 0.8804  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:52:16] d2.utils.events INFO:  eta: 0:48:13  iter: 1839  total_loss: 0.5307  loss_cls: 0.1722  loss_box_reg: 0.3076  loss_rpn_cls: 0.01672  loss_rpn_loc: 0.03686  time: 0.8805  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:52:34] d2.utils.events INFO:  eta: 0:47:58  iter: 1859  total_loss: 0.5991  loss_cls: 0.2085  loss_box_reg: 0.3364  loss_rpn_cls: 0.02002  loss_rpn_loc: 0.04127  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:52:52] d2.utils.events INFO:  eta: 0:47:35  iter: 1879  total_loss: 0.5427  loss_cls: 0.2097  loss_box_reg: 0.3009  loss_rpn_cls: 0.01515  loss_rpn_loc: 0.03318  time: 0.8806  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:53:09] d2.utils.events INFO:  eta: 0:47:21  iter: 1899  total_loss: 0.5781  loss_cls: 0.1947  loss_box_reg: 0.3451  loss_rpn_cls: 0.01728  loss_rpn_loc: 0.03357  time: 0.8805  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:53:27] d2.utils.events INFO:  eta: 0:47:04  iter: 1919  total_loss: 0.5811  loss_cls: 0.1775  loss_box_reg: 0.3048  loss_rpn_cls: 0.01827  loss_rpn_loc: 0.03596  time: 0.8806  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:53:45] d2.utils.events INFO:  eta: 0:46:47  iter: 1939  total_loss: 0.6673  loss_cls: 0.2288  loss_box_reg: 0.3686  loss_rpn_cls: 0.02029  loss_rpn_loc: 0.03729  time: 0.8807  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:54:03] d2.utils.events INFO:  eta: 0:46:29  iter: 1959  total_loss: 0.5933  loss_cls: 0.1732  loss_box_reg: 0.3663  loss_rpn_cls: 0.02057  loss_rpn_loc: 0.03746  time: 0.8807  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:54:19] d2.utils.events INFO:  eta: 0:46:08  iter: 1979  total_loss: 0.6174  loss_cls: 0.1907  loss_box_reg: 0.3809  loss_rpn_cls: 0.02007  loss_rpn_loc: 0.04566  time: 0.8799  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 03:54:37] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0001999.pth
[03/30 03:54:37] d2.utils.events INFO:  eta: 0:45:51  iter: 1999  total_loss: 0.6037  loss_cls: 0.2094  loss_box_reg: 0.3549  loss_rpn_cls: 0.01944  loss_rpn_loc: 0.03261  time: 0.8803  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:54:55] d2.utils.events INFO:  eta: 0:45:32  iter: 2019  total_loss: 0.5434  loss_cls: 0.1523  loss_box_reg: 0.3252  loss_rpn_cls: 0.02024  loss_rpn_loc: 0.0312  time: 0.8804  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 03:55:13] d2.utils.events INFO:  eta: 0:45:15  iter: 2039  total_loss: 0.4557  loss_cls: 0.1347  loss_box_reg: 0.2881  loss_rpn_cls: 0.01228  loss_rpn_loc: 0.02568  time: 0.8805  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:55:31] d2.utils.events INFO:  eta: 0:45:00  iter: 2059  total_loss: 0.5395  loss_cls: 0.1691  loss_box_reg: 0.3313  loss_rpn_cls: 0.01468  loss_rpn_loc: 0.02661  time: 0.8805  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:55:48] d2.utils.events INFO:  eta: 0:44:38  iter: 2079  total_loss: 0.5958  loss_cls: 0.1895  loss_box_reg: 0.3717  loss_rpn_cls: 0.0189  loss_rpn_loc: 0.03805  time: 0.8803  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:56:06] d2.utils.events INFO:  eta: 0:44:18  iter: 2099  total_loss: 0.6756  loss_cls: 0.1901  loss_box_reg: 0.3727  loss_rpn_cls: 0.02115  loss_rpn_loc: 0.0372  time: 0.8806  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:56:25] d2.utils.events INFO:  eta: 0:44:00  iter: 2119  total_loss: 0.655  loss_cls: 0.2017  loss_box_reg: 0.3735  loss_rpn_cls: 0.01905  loss_rpn_loc: 0.03323  time: 0.8809  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:56:42] d2.utils.events INFO:  eta: 0:43:42  iter: 2139  total_loss: 0.5775  loss_cls: 0.1823  loss_box_reg: 0.3192  loss_rpn_cls: 0.01994  loss_rpn_loc: 0.034  time: 0.8810  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:57:00] d2.utils.events INFO:  eta: 0:43:24  iter: 2159  total_loss: 0.5935  loss_cls: 0.2173  loss_box_reg: 0.3132  loss_rpn_cls: 0.02344  loss_rpn_loc: 0.03588  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:57:18] d2.utils.events INFO:  eta: 0:43:06  iter: 2179  total_loss: 0.4751  loss_cls: 0.1565  loss_box_reg: 0.3013  loss_rpn_cls: 0.01379  loss_rpn_loc: 0.03137  time: 0.8809  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:57:36] d2.utils.events INFO:  eta: 0:42:48  iter: 2199  total_loss: 0.5532  loss_cls: 0.1747  loss_box_reg: 0.3163  loss_rpn_cls: 0.01611  loss_rpn_loc: 0.03965  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:57:54] d2.utils.events INFO:  eta: 0:42:30  iter: 2219  total_loss: 0.5555  loss_cls: 0.1731  loss_box_reg: 0.3203  loss_rpn_cls: 0.01573  loss_rpn_loc: 0.04039  time: 0.8813  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:58:11] d2.utils.events INFO:  eta: 0:42:11  iter: 2239  total_loss: 0.658  loss_cls: 0.1996  loss_box_reg: 0.3626  loss_rpn_cls: 0.01901  loss_rpn_loc: 0.04137  time: 0.8812  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:58:29] d2.utils.events INFO:  eta: 0:41:52  iter: 2259  total_loss: 0.5244  loss_cls: 0.1682  loss_box_reg: 0.2942  loss_rpn_cls: 0.02198  loss_rpn_loc: 0.03851  time: 0.8812  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:58:46] d2.utils.events INFO:  eta: 0:41:34  iter: 2279  total_loss: 0.5078  loss_cls: 0.1455  loss_box_reg: 0.2902  loss_rpn_cls: 0.01427  loss_rpn_loc: 0.02804  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 03:59:04] d2.utils.events INFO:  eta: 0:41:15  iter: 2299  total_loss: 0.4843  loss_cls: 0.1666  loss_box_reg: 0.269  loss_rpn_cls: 0.01802  loss_rpn_loc: 0.03409  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:59:21] d2.utils.events INFO:  eta: 0:40:56  iter: 2319  total_loss: 0.6331  loss_cls: 0.2131  loss_box_reg: 0.3536  loss_rpn_cls: 0.01561  loss_rpn_loc: 0.0378  time: 0.8810  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 03:59:39] d2.utils.events INFO:  eta: 0:40:38  iter: 2339  total_loss: 0.6132  loss_cls: 0.1977  loss_box_reg: 0.3845  loss_rpn_cls: 0.01538  loss_rpn_loc: 0.02862  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 03:59:55] d2.utils.events INFO:  eta: 0:40:19  iter: 2359  total_loss: 0.5152  loss_cls: 0.1819  loss_box_reg: 0.3039  loss_rpn_cls: 0.0186  loss_rpn_loc: 0.03957  time: 0.8804  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:00:14] d2.utils.events INFO:  eta: 0:40:01  iter: 2379  total_loss: 0.4962  loss_cls: 0.1466  loss_box_reg: 0.3  loss_rpn_cls: 0.0154  loss_rpn_loc: 0.02873  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:00:32] d2.utils.events INFO:  eta: 0:39:41  iter: 2399  total_loss: 0.4801  loss_cls: 0.1459  loss_box_reg: 0.2781  loss_rpn_cls: 0.01139  loss_rpn_loc: 0.0333  time: 0.8808  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:00:50] d2.utils.events INFO:  eta: 0:39:25  iter: 2419  total_loss: 0.5212  loss_cls: 0.1701  loss_box_reg: 0.3236  loss_rpn_cls: 0.02048  loss_rpn_loc: 0.03126  time: 0.8810  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:01:07] d2.utils.events INFO:  eta: 0:39:07  iter: 2439  total_loss: 0.5341  loss_cls: 0.1814  loss_box_reg: 0.3162  loss_rpn_cls: 0.01507  loss_rpn_loc: 0.02524  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:01:26] d2.utils.events INFO:  eta: 0:38:49  iter: 2459  total_loss: 0.4938  loss_cls: 0.185  loss_box_reg: 0.2838  loss_rpn_cls: 0.01418  loss_rpn_loc: 0.03287  time: 0.8813  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:01:43] d2.utils.events INFO:  eta: 0:38:31  iter: 2479  total_loss: 0.5516  loss_cls: 0.1682  loss_box_reg: 0.334  loss_rpn_cls: 0.01161  loss_rpn_loc: 0.0318  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:02:01] d2.utils.events INFO:  eta: 0:38:13  iter: 2499  total_loss: 0.5833  loss_cls: 0.1897  loss_box_reg: 0.3379  loss_rpn_cls: 0.01873  loss_rpn_loc: 0.03096  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:02:19] d2.utils.events INFO:  eta: 0:37:54  iter: 2519  total_loss: 0.5069  loss_cls: 0.1725  loss_box_reg: 0.2876  loss_rpn_cls: 0.01537  loss_rpn_loc: 0.03177  time: 0.8814  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:02:36] d2.utils.events INFO:  eta: 0:37:35  iter: 2539  total_loss: 0.5881  loss_cls: 0.1978  loss_box_reg: 0.352  loss_rpn_cls: 0.0183  loss_rpn_loc: 0.03509  time: 0.8810  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:02:54] d2.utils.events INFO:  eta: 0:37:14  iter: 2559  total_loss: 0.4502  loss_cls: 0.1477  loss_box_reg: 0.2713  loss_rpn_cls: 0.01271  loss_rpn_loc: 0.03283  time: 0.8810  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:03:11] d2.utils.events INFO:  eta: 0:36:53  iter: 2579  total_loss: 0.5911  loss_cls: 0.1869  loss_box_reg: 0.3297  loss_rpn_cls: 0.0193  loss_rpn_loc: 0.04036  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:03:28] d2.utils.events INFO:  eta: 0:36:32  iter: 2599  total_loss: 0.494  loss_cls: 0.1535  loss_box_reg: 0.3049  loss_rpn_cls: 0.0126  loss_rpn_loc: 0.028  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:03:46] d2.utils.events INFO:  eta: 0:36:20  iter: 2619  total_loss: 0.5111  loss_cls: 0.1454  loss_box_reg: 0.2826  loss_rpn_cls: 0.01174  loss_rpn_loc: 0.02701  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:04:03] d2.utils.events INFO:  eta: 0:36:00  iter: 2639  total_loss: 0.5273  loss_cls: 0.1712  loss_box_reg: 0.3118  loss_rpn_cls: 0.0133  loss_rpn_loc: 0.04102  time: 0.8805  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:04:21] d2.utils.events INFO:  eta: 0:35:43  iter: 2659  total_loss: 0.5416  loss_cls: 0.1604  loss_box_reg: 0.3343  loss_rpn_cls: 0.01076  loss_rpn_loc: 0.03445  time: 0.8806  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:04:39] d2.utils.events INFO:  eta: 0:35:23  iter: 2679  total_loss: 0.5239  loss_cls: 0.1634  loss_box_reg: 0.3275  loss_rpn_cls: 0.0129  loss_rpn_loc: 0.02708  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:04:56] d2.utils.events INFO:  eta: 0:35:05  iter: 2699  total_loss: 0.4644  loss_cls: 0.1585  loss_box_reg: 0.2833  loss_rpn_cls: 0.01784  loss_rpn_loc: 0.03454  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:05:14] d2.utils.events INFO:  eta: 0:34:47  iter: 2719  total_loss: 0.5161  loss_cls: 0.1683  loss_box_reg: 0.3023  loss_rpn_cls: 0.01503  loss_rpn_loc: 0.03113  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:05:33] d2.utils.events INFO:  eta: 0:34:30  iter: 2739  total_loss: 0.5177  loss_cls: 0.1575  loss_box_reg: 0.3072  loss_rpn_cls: 0.01042  loss_rpn_loc: 0.02988  time: 0.8810  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:05:50] d2.utils.events INFO:  eta: 0:34:13  iter: 2759  total_loss: 0.5615  loss_cls: 0.2099  loss_box_reg: 0.3054  loss_rpn_cls: 0.01057  loss_rpn_loc: 0.03096  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:06:08] d2.utils.events INFO:  eta: 0:33:54  iter: 2779  total_loss: 0.5192  loss_cls: 0.1699  loss_box_reg: 0.315  loss_rpn_cls: 0.01189  loss_rpn_loc: 0.0296  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:06:26] d2.utils.events INFO:  eta: 0:33:36  iter: 2799  total_loss: 0.4943  loss_cls: 0.1549  loss_box_reg: 0.3005  loss_rpn_cls: 0.01225  loss_rpn_loc: 0.02643  time: 0.8811  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:06:42] d2.utils.events INFO:  eta: 0:33:17  iter: 2819  total_loss: 0.5249  loss_cls: 0.1603  loss_box_reg: 0.3078  loss_rpn_cls: 0.0126  loss_rpn_loc: 0.03952  time: 0.8807  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:07:00] d2.utils.events INFO:  eta: 0:32:57  iter: 2839  total_loss: 0.4939  loss_cls: 0.1547  loss_box_reg: 0.2938  loss_rpn_cls: 0.01241  loss_rpn_loc: 0.03381  time: 0.8806  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:07:18] d2.utils.events INFO:  eta: 0:32:39  iter: 2859  total_loss: 0.5056  loss_cls: 0.1567  loss_box_reg: 0.3142  loss_rpn_cls: 0.009859  loss_rpn_loc: 0.0338  time: 0.8807  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:07:36] d2.utils.events INFO:  eta: 0:32:22  iter: 2879  total_loss: 0.4668  loss_cls: 0.1599  loss_box_reg: 0.2826  loss_rpn_cls: 0.009563  loss_rpn_loc: 0.02999  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:07:54] d2.utils.events INFO:  eta: 0:32:03  iter: 2899  total_loss: 0.4509  loss_cls: 0.134  loss_box_reg: 0.2786  loss_rpn_cls: 0.01029  loss_rpn_loc: 0.02869  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:08:11] d2.utils.events INFO:  eta: 0:31:45  iter: 2919  total_loss: 0.4731  loss_cls: 0.1511  loss_box_reg: 0.2855  loss_rpn_cls: 0.0106  loss_rpn_loc: 0.0239  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:08:30] d2.utils.events INFO:  eta: 0:31:27  iter: 2939  total_loss: 0.5301  loss_cls: 0.1595  loss_box_reg: 0.2875  loss_rpn_cls: 0.008854  loss_rpn_loc: 0.03676  time: 0.8812  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:08:48] d2.utils.events INFO:  eta: 0:31:09  iter: 2959  total_loss: 0.4501  loss_cls: 0.1234  loss_box_reg: 0.2752  loss_rpn_cls: 0.01088  loss_rpn_loc: 0.02699  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:09:05] d2.utils.events INFO:  eta: 0:30:52  iter: 2979  total_loss: 0.4597  loss_cls: 0.1462  loss_box_reg: 0.2682  loss_rpn_cls: 0.009397  loss_rpn_loc: 0.032  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:09:22] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0002999.pth
[03/30 04:09:22] d2.utils.events INFO:  eta: 0:30:30  iter: 2999  total_loss: 0.4917  loss_cls: 0.1387  loss_box_reg: 0.316  loss_rpn_cls: 0.01039  loss_rpn_loc: 0.02859  time: 0.8811  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:09:39] d2.utils.events INFO:  eta: 0:30:08  iter: 3019  total_loss: 0.5692  loss_cls: 0.1721  loss_box_reg: 0.3074  loss_rpn_cls: 0.01133  loss_rpn_loc: 0.02654  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:09:57] d2.utils.events INFO:  eta: 0:29:50  iter: 3039  total_loss: 0.4543  loss_cls: 0.1204  loss_box_reg: 0.2793  loss_rpn_cls: 0.008763  loss_rpn_loc: 0.02328  time: 0.8808  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:10:15] d2.utils.events INFO:  eta: 0:29:32  iter: 3059  total_loss: 0.5372  loss_cls: 0.1589  loss_box_reg: 0.3241  loss_rpn_cls: 0.01131  loss_rpn_loc: 0.03078  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:10:33] d2.utils.events INFO:  eta: 0:29:18  iter: 3079  total_loss: 0.3727  loss_cls: 0.1038  loss_box_reg: 0.2293  loss_rpn_cls: 0.006682  loss_rpn_loc: 0.02617  time: 0.8812  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:10:52] d2.utils.events INFO:  eta: 0:29:00  iter: 3099  total_loss: 0.4902  loss_cls: 0.1439  loss_box_reg: 0.2902  loss_rpn_cls: 0.008948  loss_rpn_loc: 0.03444  time: 0.8814  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:11:09] d2.utils.events INFO:  eta: 0:28:39  iter: 3119  total_loss: 0.4991  loss_cls: 0.1611  loss_box_reg: 0.3012  loss_rpn_cls: 0.01133  loss_rpn_loc: 0.03264  time: 0.8813  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:11:26] d2.utils.events INFO:  eta: 0:28:20  iter: 3139  total_loss: 0.445  loss_cls: 0.1363  loss_box_reg: 0.2744  loss_rpn_cls: 0.007216  loss_rpn_loc: 0.02682  time: 0.8811  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:11:44] d2.utils.events INFO:  eta: 0:28:02  iter: 3159  total_loss: 0.455  loss_cls: 0.1357  loss_box_reg: 0.2786  loss_rpn_cls: 0.007949  loss_rpn_loc: 0.02789  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:12:02] d2.utils.events INFO:  eta: 0:27:45  iter: 3179  total_loss: 0.4653  loss_cls: 0.15  loss_box_reg: 0.279  loss_rpn_cls: 0.01154  loss_rpn_loc: 0.02977  time: 0.8813  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:12:21] d2.utils.events INFO:  eta: 0:27:28  iter: 3199  total_loss: 0.5054  loss_cls: 0.1569  loss_box_reg: 0.2938  loss_rpn_cls: 0.01501  loss_rpn_loc: 0.02916  time: 0.8816  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:12:39] d2.utils.events INFO:  eta: 0:27:09  iter: 3219  total_loss: 0.5525  loss_cls: 0.1544  loss_box_reg: 0.3362  loss_rpn_cls: 0.01572  loss_rpn_loc: 0.03321  time: 0.8817  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:12:56] d2.utils.events INFO:  eta: 0:26:52  iter: 3239  total_loss: 0.5403  loss_cls: 0.1339  loss_box_reg: 0.3021  loss_rpn_cls: 0.009103  loss_rpn_loc: 0.02968  time: 0.8816  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:13:13] d2.utils.events INFO:  eta: 0:26:32  iter: 3259  total_loss: 0.4686  loss_cls: 0.1441  loss_box_reg: 0.2762  loss_rpn_cls: 0.01244  loss_rpn_loc: 0.03077  time: 0.8815  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:13:31] d2.utils.events INFO:  eta: 0:26:13  iter: 3279  total_loss: 0.4022  loss_cls: 0.1074  loss_box_reg: 0.2653  loss_rpn_cls: 0.009278  loss_rpn_loc: 0.02879  time: 0.8815  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:13:49] d2.utils.events INFO:  eta: 0:25:58  iter: 3299  total_loss: 0.3821  loss_cls: 0.1163  loss_box_reg: 0.2373  loss_rpn_cls: 0.00609  loss_rpn_loc: 0.02087  time: 0.8816  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:14:06] d2.utils.events INFO:  eta: 0:25:39  iter: 3319  total_loss: 0.4451  loss_cls: 0.145  loss_box_reg: 0.2681  loss_rpn_cls: 0.01428  loss_rpn_loc: 0.02799  time: 0.8814  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:14:24] d2.utils.events INFO:  eta: 0:25:20  iter: 3339  total_loss: 0.4498  loss_cls: 0.1192  loss_box_reg: 0.2555  loss_rpn_cls: 0.01189  loss_rpn_loc: 0.02757  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:14:42] d2.utils.events INFO:  eta: 0:25:04  iter: 3359  total_loss: 0.6232  loss_cls: 0.2014  loss_box_reg: 0.3329  loss_rpn_cls: 0.01587  loss_rpn_loc: 0.04299  time: 0.8814  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:14:59] d2.utils.events INFO:  eta: 0:24:44  iter: 3379  total_loss: 0.5236  loss_cls: 0.1674  loss_box_reg: 0.3091  loss_rpn_cls: 0.01228  loss_rpn_loc: 0.03039  time: 0.8814  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:15:17] d2.utils.events INFO:  eta: 0:24:27  iter: 3399  total_loss: 0.4215  loss_cls: 0.1223  loss_box_reg: 0.2483  loss_rpn_cls: 0.009819  loss_rpn_loc: 0.02887  time: 0.8814  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:15:34] d2.utils.events INFO:  eta: 0:24:09  iter: 3419  total_loss: 0.4822  loss_cls: 0.1427  loss_box_reg: 0.3249  loss_rpn_cls: 0.01131  loss_rpn_loc: 0.02729  time: 0.8814  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:15:50] d2.utils.events INFO:  eta: 0:23:47  iter: 3439  total_loss: 0.4752  loss_cls: 0.1414  loss_box_reg: 0.2828  loss_rpn_cls: 0.0115  loss_rpn_loc: 0.02579  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:16:08] d2.utils.events INFO:  eta: 0:23:27  iter: 3459  total_loss: 0.4101  loss_cls: 0.1044  loss_box_reg: 0.2773  loss_rpn_cls: 0.00638  loss_rpn_loc: 0.03235  time: 0.8808  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:16:25] d2.utils.events INFO:  eta: 0:23:09  iter: 3479  total_loss: 0.474  loss_cls: 0.1228  loss_box_reg: 0.3094  loss_rpn_cls: 0.01131  loss_rpn_loc: 0.03685  time: 0.8806  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:16:43] d2.utils.events INFO:  eta: 0:22:50  iter: 3499  total_loss: 0.4428  loss_cls: 0.1206  loss_box_reg: 0.2629  loss_rpn_cls: 0.009734  loss_rpn_loc: 0.02702  time: 0.8808  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:17:01] d2.utils.events INFO:  eta: 0:22:32  iter: 3519  total_loss: 0.3741  loss_cls: 0.1102  loss_box_reg: 0.2212  loss_rpn_cls: 0.007615  loss_rpn_loc: 0.02488  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:17:18] d2.utils.events INFO:  eta: 0:22:14  iter: 3539  total_loss: 0.4867  loss_cls: 0.1445  loss_box_reg: 0.311  loss_rpn_cls: 0.008787  loss_rpn_loc: 0.03331  time: 0.8807  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:17:36] d2.utils.events INFO:  eta: 0:21:55  iter: 3559  total_loss: 0.4891  loss_cls: 0.1423  loss_box_reg: 0.261  loss_rpn_cls: 0.01475  loss_rpn_loc: 0.03107  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:17:54] d2.utils.events INFO:  eta: 0:21:39  iter: 3579  total_loss: 0.45  loss_cls: 0.1276  loss_box_reg: 0.278  loss_rpn_cls: 0.009431  loss_rpn_loc: 0.03523  time: 0.8808  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:18:12] d2.utils.events INFO:  eta: 0:21:23  iter: 3599  total_loss: 0.3804  loss_cls: 0.101  loss_box_reg: 0.2762  loss_rpn_cls: 0.006832  loss_rpn_loc: 0.02415  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:18:30] d2.utils.events INFO:  eta: 0:21:02  iter: 3619  total_loss: 0.5222  loss_cls: 0.1721  loss_box_reg: 0.3086  loss_rpn_cls: 0.0157  loss_rpn_loc: 0.04402  time: 0.8809  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:18:47] d2.utils.events INFO:  eta: 0:20:47  iter: 3639  total_loss: 0.4122  loss_cls: 0.1142  loss_box_reg: 0.2512  loss_rpn_cls: 0.01003  loss_rpn_loc: 0.02896  time: 0.8809  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:19:05] d2.utils.events INFO:  eta: 0:20:29  iter: 3659  total_loss: 0.4513  loss_cls: 0.1528  loss_box_reg: 0.2763  loss_rpn_cls: 0.01328  loss_rpn_loc: 0.0252  time: 0.8810  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:19:23] d2.utils.events INFO:  eta: 0:20:11  iter: 3679  total_loss: 0.3923  loss_cls: 0.1196  loss_box_reg: 0.2383  loss_rpn_cls: 0.006256  loss_rpn_loc: 0.02234  time: 0.8810  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:19:40] d2.utils.events INFO:  eta: 0:19:52  iter: 3699  total_loss: 0.3889  loss_cls: 0.1173  loss_box_reg: 0.2564  loss_rpn_cls: 0.01027  loss_rpn_loc: 0.02767  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:19:58] d2.utils.events INFO:  eta: 0:19:34  iter: 3719  total_loss: 0.48  loss_cls: 0.1626  loss_box_reg: 0.279  loss_rpn_cls: 0.01218  loss_rpn_loc: 0.02689  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:20:16] d2.utils.events INFO:  eta: 0:19:14  iter: 3739  total_loss: 0.385  loss_cls: 0.1124  loss_box_reg: 0.2273  loss_rpn_cls: 0.008243  loss_rpn_loc: 0.02058  time: 0.8810  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:20:33] d2.utils.events INFO:  eta: 0:18:55  iter: 3759  total_loss: 0.4437  loss_cls: 0.1193  loss_box_reg: 0.2812  loss_rpn_cls: 0.007793  loss_rpn_loc: 0.02799  time: 0.8810  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:20:50] d2.utils.events INFO:  eta: 0:18:36  iter: 3779  total_loss: 0.414  loss_cls: 0.138  loss_box_reg: 0.2667  loss_rpn_cls: 0.006864  loss_rpn_loc: 0.02862  time: 0.8806  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:21:08] d2.utils.events INFO:  eta: 0:18:18  iter: 3799  total_loss: 0.4687  loss_cls: 0.1273  loss_box_reg: 0.2992  loss_rpn_cls: 0.01069  loss_rpn_loc: 0.03802  time: 0.8807  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:21:26] d2.utils.events INFO:  eta: 0:18:03  iter: 3819  total_loss: 0.4933  loss_cls: 0.1549  loss_box_reg: 0.2936  loss_rpn_cls: 0.009436  loss_rpn_loc: 0.03084  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:21:44] d2.utils.events INFO:  eta: 0:17:45  iter: 3839  total_loss: 0.4761  loss_cls: 0.1339  loss_box_reg: 0.2708  loss_rpn_cls: 0.008457  loss_rpn_loc: 0.03102  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:22:01] d2.utils.events INFO:  eta: 0:17:26  iter: 3859  total_loss: 0.4792  loss_cls: 0.1378  loss_box_reg: 0.2983  loss_rpn_cls: 0.01458  loss_rpn_loc: 0.03386  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:22:19] d2.utils.events INFO:  eta: 0:17:07  iter: 3879  total_loss: 0.3584  loss_cls: 0.1046  loss_box_reg: 0.2214  loss_rpn_cls: 0.006988  loss_rpn_loc: 0.01938  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:22:36] d2.utils.events INFO:  eta: 0:16:48  iter: 3899  total_loss: 0.4856  loss_cls: 0.1467  loss_box_reg: 0.2935  loss_rpn_cls: 0.0125  loss_rpn_loc: 0.03056  time: 0.8807  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:22:54] d2.utils.events INFO:  eta: 0:16:29  iter: 3919  total_loss: 0.3894  loss_cls: 0.09808  loss_box_reg: 0.2552  loss_rpn_cls: 0.005919  loss_rpn_loc: 0.02815  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:23:12] d2.utils.events INFO:  eta: 0:16:09  iter: 3939  total_loss: 0.3959  loss_cls: 0.1029  loss_box_reg: 0.258  loss_rpn_cls: 0.009742  loss_rpn_loc: 0.02751  time: 0.8808  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:23:30] d2.utils.events INFO:  eta: 0:15:51  iter: 3959  total_loss: 0.4285  loss_cls: 0.1281  loss_box_reg: 0.282  loss_rpn_cls: 0.008795  loss_rpn_loc: 0.02521  time: 0.8808  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:23:48] d2.utils.events INFO:  eta: 0:15:33  iter: 3979  total_loss: 0.4237  loss_cls: 0.1266  loss_box_reg: 0.2665  loss_rpn_cls: 0.0068  loss_rpn_loc: 0.02646  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:24:06] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0003999.pth
[03/30 04:24:06] d2.utils.events INFO:  eta: 0:15:17  iter: 3999  total_loss: 0.4016  loss_cls: 0.09638  loss_box_reg: 0.2497  loss_rpn_cls: 0.009734  loss_rpn_loc: 0.02568  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:24:24] d2.utils.events INFO:  eta: 0:14:59  iter: 4019  total_loss: 0.4351  loss_cls: 0.1148  loss_box_reg: 0.2824  loss_rpn_cls: 0.008111  loss_rpn_loc: 0.03051  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:24:41] d2.utils.events INFO:  eta: 0:14:40  iter: 4039  total_loss: 0.4548  loss_cls: 0.1461  loss_box_reg: 0.2673  loss_rpn_cls: 0.009048  loss_rpn_loc: 0.03051  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:24:58] d2.utils.events INFO:  eta: 0:14:21  iter: 4059  total_loss: 0.4349  loss_cls: 0.131  loss_box_reg: 0.2675  loss_rpn_cls: 0.009358  loss_rpn_loc: 0.02421  time: 0.8809  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:25:16] d2.utils.events INFO:  eta: 0:14:01  iter: 4079  total_loss: 0.4499  loss_cls: 0.1449  loss_box_reg: 0.2535  loss_rpn_cls: 0.01114  loss_rpn_loc: 0.02568  time: 0.8809  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:25:34] d2.utils.events INFO:  eta: 0:13:42  iter: 4099  total_loss: 0.4197  loss_cls: 0.1132  loss_box_reg: 0.2548  loss_rpn_cls: 0.007652  loss_rpn_loc: 0.02849  time: 0.8809  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:25:52] d2.utils.events INFO:  eta: 0:13:25  iter: 4119  total_loss: 0.4413  loss_cls: 0.1201  loss_box_reg: 0.2701  loss_rpn_cls: 0.007433  loss_rpn_loc: 0.02737  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:26:10] d2.utils.events INFO:  eta: 0:13:07  iter: 4139  total_loss: 0.3444  loss_cls: 0.08863  loss_box_reg: 0.2329  loss_rpn_cls: 0.009439  loss_rpn_loc: 0.02187  time: 0.8812  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:26:27] d2.utils.events INFO:  eta: 0:12:48  iter: 4159  total_loss: 0.3982  loss_cls: 0.09568  loss_box_reg: 0.2502  loss_rpn_cls: 0.006605  loss_rpn_loc: 0.02879  time: 0.8811  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:26:45] d2.utils.events INFO:  eta: 0:12:29  iter: 4179  total_loss: 0.347  loss_cls: 0.08573  loss_box_reg: 0.2469  loss_rpn_cls: 0.004428  loss_rpn_loc: 0.01754  time: 0.8811  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:27:03] d2.utils.events INFO:  eta: 0:12:11  iter: 4199  total_loss: 0.3414  loss_cls: 0.09893  loss_box_reg: 0.2262  loss_rpn_cls: 0.003804  loss_rpn_loc: 0.02073  time: 0.8812  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:27:19] d2.utils.events INFO:  eta: 0:11:52  iter: 4219  total_loss: 0.498  loss_cls: 0.1342  loss_box_reg: 0.3011  loss_rpn_cls: 0.01229  loss_rpn_loc: 0.03293  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:27:37] d2.utils.events INFO:  eta: 0:11:33  iter: 4239  total_loss: 0.4393  loss_cls: 0.115  loss_box_reg: 0.262  loss_rpn_cls: 0.006706  loss_rpn_loc: 0.02871  time: 0.8808  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:27:56] d2.utils.events INFO:  eta: 0:11:16  iter: 4259  total_loss: 0.4427  loss_cls: 0.123  loss_box_reg: 0.283  loss_rpn_cls: 0.01016  loss_rpn_loc: 0.02763  time: 0.8811  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:28:14] d2.utils.events INFO:  eta: 0:10:58  iter: 4279  total_loss: 0.3671  loss_cls: 0.1161  loss_box_reg: 0.2233  loss_rpn_cls: 0.007342  loss_rpn_loc: 0.02601  time: 0.8812  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:28:32] d2.utils.events INFO:  eta: 0:10:39  iter: 4299  total_loss: 0.4277  loss_cls: 0.1303  loss_box_reg: 0.2628  loss_rpn_cls: 0.008605  loss_rpn_loc: 0.03563  time: 0.8813  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:28:50] d2.utils.events INFO:  eta: 0:10:21  iter: 4319  total_loss: 0.4387  loss_cls: 0.1222  loss_box_reg: 0.2692  loss_rpn_cls: 0.008102  loss_rpn_loc: 0.02894  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:29:07] d2.utils.events INFO:  eta: 0:10:04  iter: 4339  total_loss: 0.3702  loss_cls: 0.09106  loss_box_reg: 0.2537  loss_rpn_cls: 0.007181  loss_rpn_loc: 0.02675  time: 0.8813  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:29:25] d2.utils.events INFO:  eta: 0:09:45  iter: 4359  total_loss: 0.399  loss_cls: 0.1112  loss_box_reg: 0.2391  loss_rpn_cls: 0.006984  loss_rpn_loc: 0.0268  time: 0.8812  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:29:43] d2.utils.events INFO:  eta: 0:09:27  iter: 4379  total_loss: 0.431  loss_cls: 0.1233  loss_box_reg: 0.2742  loss_rpn_cls: 0.007325  loss_rpn_loc: 0.02818  time: 0.8814  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:30:02] d2.utils.events INFO:  eta: 0:09:09  iter: 4399  total_loss: 0.3248  loss_cls: 0.08952  loss_box_reg: 0.2094  loss_rpn_cls: 0.004536  loss_rpn_loc: 0.01829  time: 0.8815  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:30:19] d2.utils.events INFO:  eta: 0:08:51  iter: 4419  total_loss: 0.3824  loss_cls: 0.1092  loss_box_reg: 0.2325  loss_rpn_cls: 0.007904  loss_rpn_loc: 0.02842  time: 0.8814  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:30:37] d2.utils.events INFO:  eta: 0:08:34  iter: 4439  total_loss: 0.3884  loss_cls: 0.1074  loss_box_reg: 0.2364  loss_rpn_cls: 0.005783  loss_rpn_loc: 0.02686  time: 0.8815  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:30:55] d2.utils.events INFO:  eta: 0:08:16  iter: 4459  total_loss: 0.3959  loss_cls: 0.1101  loss_box_reg: 0.2459  loss_rpn_cls: 0.006249  loss_rpn_loc: 0.02486  time: 0.8816  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:31:12] d2.utils.events INFO:  eta: 0:07:57  iter: 4479  total_loss: 0.4311  loss_cls: 0.1272  loss_box_reg: 0.2593  loss_rpn_cls: 0.007546  loss_rpn_loc: 0.02952  time: 0.8815  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:31:30] d2.utils.events INFO:  eta: 0:07:39  iter: 4499  total_loss: 0.4269  loss_cls: 0.1072  loss_box_reg: 0.2579  loss_rpn_cls: 0.006964  loss_rpn_loc: 0.02896  time: 0.8816  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:31:48] d2.utils.events INFO:  eta: 0:07:20  iter: 4519  total_loss: 0.4512  loss_cls: 0.1374  loss_box_reg: 0.2721  loss_rpn_cls: 0.008704  loss_rpn_loc: 0.03534  time: 0.8816  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:32:06] d2.utils.events INFO:  eta: 0:07:02  iter: 4539  total_loss: 0.3839  loss_cls: 0.1018  loss_box_reg: 0.2395  loss_rpn_cls: 0.008401  loss_rpn_loc: 0.02459  time: 0.8817  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:32:24] d2.utils.events INFO:  eta: 0:06:44  iter: 4559  total_loss: 0.4149  loss_cls: 0.114  loss_box_reg: 0.2588  loss_rpn_cls: 0.005064  loss_rpn_loc: 0.02911  time: 0.8817  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:32:41] d2.utils.events INFO:  eta: 0:06:25  iter: 4579  total_loss: 0.401  loss_cls: 0.1069  loss_box_reg: 0.252  loss_rpn_cls: 0.006383  loss_rpn_loc: 0.0234  time: 0.8817  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:32:59] d2.utils.events INFO:  eta: 0:06:07  iter: 4599  total_loss: 0.48  loss_cls: 0.1126  loss_box_reg: 0.2953  loss_rpn_cls: 0.007466  loss_rpn_loc: 0.03133  time: 0.8818  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:33:16] d2.utils.events INFO:  eta: 0:05:48  iter: 4619  total_loss: 0.4036  loss_cls: 0.1087  loss_box_reg: 0.2523  loss_rpn_cls: 0.006664  loss_rpn_loc: 0.02811  time: 0.8815  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:33:34] d2.utils.events INFO:  eta: 0:05:30  iter: 4639  total_loss: 0.3517  loss_cls: 0.08693  loss_box_reg: 0.2363  loss_rpn_cls: 0.004508  loss_rpn_loc: 0.02508  time: 0.8816  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:33:52] d2.utils.events INFO:  eta: 0:05:12  iter: 4659  total_loss: 0.3494  loss_cls: 0.09358  loss_box_reg: 0.2138  loss_rpn_cls: 0.004462  loss_rpn_loc: 0.02462  time: 0.8818  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:34:10] d2.utils.events INFO:  eta: 0:04:54  iter: 4679  total_loss: 0.3077  loss_cls: 0.08008  loss_box_reg: 0.1916  loss_rpn_cls: 0.005852  loss_rpn_loc: 0.01941  time: 0.8817  data_time: 0.0023  lr: 0.0002  max_mem: 15386M
[03/30 04:34:28] d2.utils.events INFO:  eta: 0:04:35  iter: 4699  total_loss: 0.344  loss_cls: 0.07758  loss_box_reg: 0.2322  loss_rpn_cls: 0.005723  loss_rpn_loc: 0.0178  time: 0.8817  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:34:45] d2.utils.events INFO:  eta: 0:04:17  iter: 4719  total_loss: 0.4611  loss_cls: 0.1264  loss_box_reg: 0.2637  loss_rpn_cls: 0.009348  loss_rpn_loc: 0.03047  time: 0.8817  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:35:04] d2.utils.events INFO:  eta: 0:03:58  iter: 4739  total_loss: 0.3779  loss_cls: 0.09734  loss_box_reg: 0.2227  loss_rpn_cls: 0.00797  loss_rpn_loc: 0.02761  time: 0.8819  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:35:22] d2.utils.events INFO:  eta: 0:03:40  iter: 4759  total_loss: 0.354  loss_cls: 0.09788  loss_box_reg: 0.212  loss_rpn_cls: 0.007388  loss_rpn_loc: 0.02397  time: 0.8819  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:35:41] d2.utils.events INFO:  eta: 0:03:22  iter: 4779  total_loss: 0.3778  loss_cls: 0.1039  loss_box_reg: 0.2613  loss_rpn_cls: 0.006445  loss_rpn_loc: 0.02964  time: 0.8822  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:35:58] d2.utils.events INFO:  eta: 0:03:03  iter: 4799  total_loss: 0.3828  loss_cls: 0.08894  loss_box_reg: 0.2455  loss_rpn_cls: 0.003824  loss_rpn_loc: 0.02528  time: 0.8822  data_time: 0.0027  lr: 0.0002  max_mem: 15386M
[03/30 04:36:16] d2.utils.events INFO:  eta: 0:02:45  iter: 4819  total_loss: 0.4052  loss_cls: 0.09675  loss_box_reg: 0.2666  loss_rpn_cls: 0.005679  loss_rpn_loc: 0.02386  time: 0.8821  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:36:34] d2.utils.events INFO:  eta: 0:02:27  iter: 4839  total_loss: 0.4049  loss_cls: 0.1078  loss_box_reg: 0.2394  loss_rpn_cls: 0.006  loss_rpn_loc: 0.02793  time: 0.8822  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:36:51] d2.utils.events INFO:  eta: 0:02:08  iter: 4859  total_loss: 0.4101  loss_cls: 0.1169  loss_box_reg: 0.2592  loss_rpn_cls: 0.00861  loss_rpn_loc: 0.022  time: 0.8822  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:37:09] d2.utils.events INFO:  eta: 0:01:50  iter: 4879  total_loss: 0.4574  loss_cls: 0.1229  loss_box_reg: 0.2879  loss_rpn_cls: 0.007901  loss_rpn_loc: 0.03235  time: 0.8823  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:37:27] d2.utils.events INFO:  eta: 0:01:32  iter: 4899  total_loss: 0.4171  loss_cls: 0.1145  loss_box_reg: 0.2495  loss_rpn_cls: 0.005244  loss_rpn_loc: 0.0297  time: 0.8823  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:37:45] d2.utils.events INFO:  eta: 0:01:13  iter: 4919  total_loss: 0.3692  loss_cls: 0.1095  loss_box_reg: 0.2329  loss_rpn_cls: 0.00814  loss_rpn_loc: 0.03047  time: 0.8823  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:38:03] d2.utils.events INFO:  eta: 0:00:55  iter: 4939  total_loss: 0.3818  loss_cls: 0.1032  loss_box_reg: 0.2222  loss_rpn_cls: 0.005312  loss_rpn_loc: 0.02094  time: 0.8823  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:38:20] d2.utils.events INFO:  eta: 0:00:36  iter: 4959  total_loss: 0.4487  loss_cls: 0.1193  loss_box_reg: 0.2656  loss_rpn_cls: 0.005426  loss_rpn_loc: 0.03369  time: 0.8822  data_time: 0.0024  lr: 0.0002  max_mem: 15386M
[03/30 04:38:38] d2.utils.events INFO:  eta: 0:00:18  iter: 4979  total_loss: 0.3377  loss_cls: 0.09995  loss_box_reg: 0.2137  loss_rpn_cls: 0.006041  loss_rpn_loc: 0.02369  time: 0.8822  data_time: 0.0025  lr: 0.0002  max_mem: 15386M
[03/30 04:38:56] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0004999.pth
[03/30 04:38:56] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[03/30 04:38:56] d2.utils.events INFO:  eta: 0:00:00  iter: 4999  total_loss: 0.3412  loss_cls: 0.09388  loss_box_reg: 0.212  loss_rpn_cls: 0.003729  loss_rpn_loc: 0.02467  time: 0.8824  data_time: 0.0026  lr: 0.0002  max_mem: 15386M
[03/30 04:38:56] d2.engine.hooks INFO: Overall training speed: 4998 iterations in 1:13:30 (0.8824 s / it)
[03/30 04:38:56] d2.engine.hooks INFO: Total training time: 1:13:42 (0:00:12 on hooks)
[03/30 11:10:29] detectron2 INFO: Rank of current process: 0. World size: 1
[03/30 11:10:29] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/30 11:10:29] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/30 11:10:29] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/30 11:10:29] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/30 11:10:29] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/30 11:10:29] d2.utils.env INFO: Using a generated random seed 30654397
[03/30 11:10:32] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/30 11:10:32] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/30 11:10:32] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/30 11:10:32] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[03/30 11:10:32] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/30 11:10:32] d2.data.build INFO: Using training sampler TrainingSampler
[03/30 11:10:32] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/30 11:10:32] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/30 11:10:32] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/30 11:10:32] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/30 11:10:32] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/30 11:10:32] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/30 11:10:32] d2.engine.train_loop INFO: Starting training from iteration 0
[03/30 11:10:50] d2.utils.events INFO:  eta: 1:10:52  iter: 19  total_loss: 5.17  loss_cls: 4.273  loss_box_reg: 0.1187  loss_rpn_cls: 0.6956  loss_rpn_loc: 0.05801  time: 0.8303  data_time: 0.0147  lr: 3.9962e-06  max_mem: 15130M
[03/30 11:11:07] d2.utils.events INFO:  eta: 1:11:00  iter: 39  total_loss: 4.908  loss_cls: 3.979  loss_box_reg: 0.1395  loss_rpn_cls: 0.6937  loss_rpn_loc: 0.07147  time: 0.8421  data_time: 0.0024  lr: 7.9922e-06  max_mem: 15130M
[03/30 11:11:24] d2.utils.events INFO:  eta: 1:10:43  iter: 59  total_loss: 3.849  loss_cls: 3.019  loss_box_reg: 0.1508  loss_rpn_cls: 0.6888  loss_rpn_loc: 0.05132  time: 0.8466  data_time: 0.0023  lr: 1.1988e-05  max_mem: 15130M
[03/30 11:11:42] d2.utils.events INFO:  eta: 1:11:40  iter: 79  total_loss: 1.902  loss_cls: 0.9055  loss_box_reg: 0.2074  loss_rpn_cls: 0.6845  loss_rpn_loc: 0.07304  time: 0.8638  data_time: 0.0023  lr: 1.5984e-05  max_mem: 15384M
[03/30 11:11:59] d2.utils.events INFO:  eta: 1:10:52  iter: 99  total_loss: 1.335  loss_cls: 0.4331  loss_box_reg: 0.1486  loss_rpn_cls: 0.6708  loss_rpn_loc: 0.08862  time: 0.8623  data_time: 0.0024  lr: 1.998e-05  max_mem: 15384M
[03/30 11:12:17] d2.utils.events INFO:  eta: 1:11:05  iter: 119  total_loss: 0.972  loss_cls: 0.2195  loss_box_reg: 0.07429  loss_rpn_cls: 0.6162  loss_rpn_loc: 0.04218  time: 0.8669  data_time: 0.0024  lr: 2.3976e-05  max_mem: 15384M
[03/30 11:12:34] d2.utils.events INFO:  eta: 1:10:09  iter: 139  total_loss: 1.154  loss_cls: 0.346  loss_box_reg: 0.1687  loss_rpn_cls: 0.4843  loss_rpn_loc: 0.08016  time: 0.8626  data_time: 0.0024  lr: 2.7972e-05  max_mem: 15384M
[03/30 11:12:51] d2.utils.events INFO:  eta: 1:09:36  iter: 159  total_loss: 1.273  loss_cls: 0.4727  loss_box_reg: 0.3864  loss_rpn_cls: 0.325  loss_rpn_loc: 0.07576  time: 0.8597  data_time: 0.0024  lr: 3.1968e-05  max_mem: 15384M
[03/30 11:13:08] d2.utils.events INFO:  eta: 1:09:51  iter: 179  total_loss: 1.359  loss_cls: 0.5683  loss_box_reg: 0.5156  loss_rpn_cls: 0.2684  loss_rpn_loc: 0.06711  time: 0.8625  data_time: 0.0024  lr: 3.5964e-05  max_mem: 15384M
[03/30 11:13:27] d2.utils.events INFO:  eta: 1:10:08  iter: 199  total_loss: 1.15  loss_cls: 0.4359  loss_box_reg: 0.4947  loss_rpn_cls: 0.2144  loss_rpn_loc: 0.0702  time: 0.8664  data_time: 0.0025  lr: 3.996e-05  max_mem: 15384M
[03/30 11:13:45] d2.utils.events INFO:  eta: 1:09:55  iter: 219  total_loss: 1.437  loss_cls: 0.5641  loss_box_reg: 0.5296  loss_rpn_cls: 0.2044  loss_rpn_loc: 0.07145  time: 0.8698  data_time: 0.0026  lr: 4.3956e-05  max_mem: 15384M
[03/30 11:14:01] d2.utils.events INFO:  eta: 1:09:33  iter: 239  total_loss: 1.45  loss_cls: 0.5348  loss_box_reg: 0.6337  loss_rpn_cls: 0.1771  loss_rpn_loc: 0.06294  time: 0.8673  data_time: 0.0025  lr: 4.7952e-05  max_mem: 15384M
[03/30 11:14:19] d2.utils.events INFO:  eta: 1:09:19  iter: 259  total_loss: 1.555  loss_cls: 0.6184  loss_box_reg: 0.6354  loss_rpn_cls: 0.1623  loss_rpn_loc: 0.06864  time: 0.8682  data_time: 0.0024  lr: 5.1948e-05  max_mem: 15384M
[03/30 11:14:37] d2.utils.events INFO:  eta: 1:09:09  iter: 279  total_loss: 1.545  loss_cls: 0.5107  loss_box_reg: 0.7188  loss_rpn_cls: 0.1355  loss_rpn_loc: 0.05882  time: 0.8706  data_time: 0.0027  lr: 5.5944e-05  max_mem: 15384M
[03/30 11:14:55] d2.utils.events INFO:  eta: 1:08:45  iter: 299  total_loss: 1.445  loss_cls: 0.5544  loss_box_reg: 0.7121  loss_rpn_cls: 0.1254  loss_rpn_loc: 0.06264  time: 0.8705  data_time: 0.0026  lr: 5.994e-05  max_mem: 15384M
[03/30 11:15:12] d2.utils.events INFO:  eta: 1:08:27  iter: 319  total_loss: 1.404  loss_cls: 0.4814  loss_box_reg: 0.6696  loss_rpn_cls: 0.1107  loss_rpn_loc: 0.06565  time: 0.8690  data_time: 0.0024  lr: 6.3936e-05  max_mem: 15384M
[03/30 11:15:28] d2.utils.events INFO:  eta: 1:07:59  iter: 339  total_loss: 1.386  loss_cls: 0.4855  loss_box_reg: 0.7105  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.06016  time: 0.8668  data_time: 0.0024  lr: 6.7932e-05  max_mem: 15384M
[03/30 11:15:45] d2.utils.events INFO:  eta: 1:07:37  iter: 359  total_loss: 1.357  loss_cls: 0.4629  loss_box_reg: 0.7528  loss_rpn_cls: 0.08681  loss_rpn_loc: 0.05579  time: 0.8661  data_time: 0.0025  lr: 7.1928e-05  max_mem: 15384M
[03/30 11:16:02] d2.utils.events INFO:  eta: 1:07:14  iter: 379  total_loss: 1.226  loss_cls: 0.4686  loss_box_reg: 0.6798  loss_rpn_cls: 0.08942  loss_rpn_loc: 0.05633  time: 0.8640  data_time: 0.0026  lr: 7.5924e-05  max_mem: 15384M
[03/30 11:16:19] d2.utils.events INFO:  eta: 1:06:56  iter: 399  total_loss: 1.378  loss_cls: 0.4774  loss_box_reg: 0.7333  loss_rpn_cls: 0.09022  loss_rpn_loc: 0.06671  time: 0.8639  data_time: 0.0026  lr: 7.992e-05  max_mem: 15384M
[03/30 11:16:36] d2.utils.events INFO:  eta: 1:06:38  iter: 419  total_loss: 1.387  loss_cls: 0.4211  loss_box_reg: 0.7097  loss_rpn_cls: 0.1027  loss_rpn_loc: 0.06391  time: 0.8630  data_time: 0.0024  lr: 8.3916e-05  max_mem: 15384M
[03/30 11:16:54] d2.utils.events INFO:  eta: 1:06:25  iter: 439  total_loss: 1.068  loss_cls: 0.3576  loss_box_reg: 0.6021  loss_rpn_cls: 0.06242  loss_rpn_loc: 0.0466  time: 0.8640  data_time: 0.0027  lr: 8.7912e-05  max_mem: 15384M
[03/30 11:17:11] d2.utils.events INFO:  eta: 1:06:07  iter: 459  total_loss: 1.123  loss_cls: 0.3663  loss_box_reg: 0.6507  loss_rpn_cls: 0.06479  loss_rpn_loc: 0.0474  time: 0.8628  data_time: 0.0024  lr: 9.1908e-05  max_mem: 15384M
[03/30 11:17:28] d2.utils.events INFO:  eta: 1:05:51  iter: 479  total_loss: 1.281  loss_cls: 0.3665  loss_box_reg: 0.6392  loss_rpn_cls: 0.06598  loss_rpn_loc: 0.05644  time: 0.8637  data_time: 0.0024  lr: 9.5904e-05  max_mem: 15384M
[03/30 11:17:45] d2.utils.events INFO:  eta: 1:05:29  iter: 499  total_loss: 1.187  loss_cls: 0.3767  loss_box_reg: 0.7123  loss_rpn_cls: 0.07949  loss_rpn_loc: 0.05244  time: 0.8625  data_time: 0.0023  lr: 9.99e-05  max_mem: 15384M
[03/30 11:18:02] d2.utils.events INFO:  eta: 1:05:06  iter: 519  total_loss: 1.399  loss_cls: 0.4016  loss_box_reg: 0.7615  loss_rpn_cls: 0.06393  loss_rpn_loc: 0.06332  time: 0.8619  data_time: 0.0024  lr: 0.0001039  max_mem: 15384M
[03/30 11:18:20] d2.utils.events INFO:  eta: 1:04:53  iter: 539  total_loss: 1.27  loss_cls: 0.4384  loss_box_reg: 0.6439  loss_rpn_cls: 0.06662  loss_rpn_loc: 0.05851  time: 0.8624  data_time: 0.0025  lr: 0.00010789  max_mem: 15384M
[03/30 11:18:37] d2.utils.events INFO:  eta: 1:04:37  iter: 559  total_loss: 1.266  loss_cls: 0.4244  loss_box_reg: 0.6739  loss_rpn_cls: 0.05467  loss_rpn_loc: 0.05269  time: 0.8624  data_time: 0.0026  lr: 0.00011189  max_mem: 15384M
[03/30 11:18:55] d2.utils.events INFO:  eta: 1:04:20  iter: 579  total_loss: 1.11  loss_cls: 0.3782  loss_box_reg: 0.5202  loss_rpn_cls: 0.05722  loss_rpn_loc: 0.04472  time: 0.8635  data_time: 0.0024  lr: 0.00011588  max_mem: 15384M
[03/30 11:19:12] d2.utils.events INFO:  eta: 1:04:00  iter: 599  total_loss: 1.238  loss_cls: 0.4092  loss_box_reg: 0.6572  loss_rpn_cls: 0.07787  loss_rpn_loc: 0.0532  time: 0.8624  data_time: 0.0024  lr: 0.00011988  max_mem: 15384M
[03/30 11:19:29] d2.utils.events INFO:  eta: 1:03:47  iter: 619  total_loss: 1.129  loss_cls: 0.3676  loss_box_reg: 0.6114  loss_rpn_cls: 0.0555  loss_rpn_loc: 0.04782  time: 0.8633  data_time: 0.0024  lr: 0.00012388  max_mem: 15384M
[03/30 11:19:47] d2.utils.events INFO:  eta: 1:03:31  iter: 639  total_loss: 1.057  loss_cls: 0.3499  loss_box_reg: 0.533  loss_rpn_cls: 0.07124  loss_rpn_loc: 0.05636  time: 0.8644  data_time: 0.0026  lr: 0.00012787  max_mem: 15384M
[03/30 11:20:06] d2.utils.events INFO:  eta: 1:03:15  iter: 659  total_loss: 1.054  loss_cls: 0.3539  loss_box_reg: 0.5675  loss_rpn_cls: 0.05687  loss_rpn_loc: 0.05451  time: 0.8657  data_time: 0.0025  lr: 0.00013187  max_mem: 15384M
[03/30 11:20:23] d2.utils.events INFO:  eta: 1:03:03  iter: 679  total_loss: 1.058  loss_cls: 0.3536  loss_box_reg: 0.5795  loss_rpn_cls: 0.05459  loss_rpn_loc: 0.05023  time: 0.8664  data_time: 0.0025  lr: 0.00013586  max_mem: 15384M
[03/30 11:20:40] d2.utils.events INFO:  eta: 1:02:45  iter: 699  total_loss: 1.059  loss_cls: 0.3593  loss_box_reg: 0.5722  loss_rpn_cls: 0.0455  loss_rpn_loc: 0.04164  time: 0.8656  data_time: 0.0024  lr: 0.00013986  max_mem: 15384M
[03/30 11:20:58] d2.utils.events INFO:  eta: 1:02:31  iter: 719  total_loss: 0.9521  loss_cls: 0.3315  loss_box_reg: 0.589  loss_rpn_cls: 0.05436  loss_rpn_loc: 0.0441  time: 0.8661  data_time: 0.0024  lr: 0.00014386  max_mem: 15384M
[03/30 11:21:16] d2.utils.events INFO:  eta: 1:02:17  iter: 739  total_loss: 1.09  loss_cls: 0.3713  loss_box_reg: 0.5792  loss_rpn_cls: 0.06937  loss_rpn_loc: 0.05982  time: 0.8665  data_time: 0.0025  lr: 0.00014785  max_mem: 15384M
[03/30 11:21:33] d2.utils.events INFO:  eta: 1:02:01  iter: 759  total_loss: 0.959  loss_cls: 0.2863  loss_box_reg: 0.4707  loss_rpn_cls: 0.04539  loss_rpn_loc: 0.04056  time: 0.8670  data_time: 0.0025  lr: 0.00015185  max_mem: 15384M
[03/30 11:21:51] d2.utils.events INFO:  eta: 1:01:43  iter: 779  total_loss: 0.8401  loss_cls: 0.2995  loss_box_reg: 0.4338  loss_rpn_cls: 0.05398  loss_rpn_loc: 0.04273  time: 0.8673  data_time: 0.0024  lr: 0.00015584  max_mem: 15384M
[03/30 11:22:10] d2.utils.events INFO:  eta: 1:01:29  iter: 799  total_loss: 0.9154  loss_cls: 0.3186  loss_box_reg: 0.515  loss_rpn_cls: 0.04277  loss_rpn_loc: 0.04468  time: 0.8688  data_time: 0.0026  lr: 0.00015984  max_mem: 15384M
[03/30 11:22:26] d2.utils.events INFO:  eta: 1:01:08  iter: 819  total_loss: 0.9813  loss_cls: 0.3262  loss_box_reg: 0.5116  loss_rpn_cls: 0.04107  loss_rpn_loc: 0.05615  time: 0.8678  data_time: 0.0024  lr: 0.00016384  max_mem: 15384M
[03/30 11:22:44] d2.utils.events INFO:  eta: 1:00:51  iter: 839  total_loss: 0.882  loss_cls: 0.3033  loss_box_reg: 0.4627  loss_rpn_cls: 0.03535  loss_rpn_loc: 0.04287  time: 0.8678  data_time: 0.0026  lr: 0.00016783  max_mem: 15384M
[03/30 11:23:02] d2.utils.events INFO:  eta: 1:00:35  iter: 859  total_loss: 0.8842  loss_cls: 0.2858  loss_box_reg: 0.4617  loss_rpn_cls: 0.05758  loss_rpn_loc: 0.05842  time: 0.8689  data_time: 0.0025  lr: 0.00017183  max_mem: 15384M
[03/30 11:23:19] d2.utils.events INFO:  eta: 1:00:18  iter: 879  total_loss: 0.8237  loss_cls: 0.2602  loss_box_reg: 0.4687  loss_rpn_cls: 0.04314  loss_rpn_loc: 0.0458  time: 0.8690  data_time: 0.0024  lr: 0.00017582  max_mem: 15384M
[03/30 11:23:37] d2.utils.events INFO:  eta: 1:00:03  iter: 899  total_loss: 0.8015  loss_cls: 0.2618  loss_box_reg: 0.4294  loss_rpn_cls: 0.05015  loss_rpn_loc: 0.04294  time: 0.8688  data_time: 0.0025  lr: 0.00017982  max_mem: 15384M
[03/30 11:23:55] d2.utils.events INFO:  eta: 0:59:46  iter: 919  total_loss: 0.767  loss_cls: 0.2478  loss_box_reg: 0.4292  loss_rpn_cls: 0.03455  loss_rpn_loc: 0.04312  time: 0.8694  data_time: 0.0025  lr: 0.00018382  max_mem: 15384M
[03/30 11:24:12] d2.utils.events INFO:  eta: 0:59:29  iter: 939  total_loss: 0.9056  loss_cls: 0.3046  loss_box_reg: 0.4924  loss_rpn_cls: 0.04467  loss_rpn_loc: 0.04685  time: 0.8697  data_time: 0.0025  lr: 0.00018781  max_mem: 15384M
[03/30 11:24:31] d2.utils.events INFO:  eta: 0:59:14  iter: 959  total_loss: 0.8843  loss_cls: 0.2887  loss_box_reg: 0.4737  loss_rpn_cls: 0.03589  loss_rpn_loc: 0.05183  time: 0.8711  data_time: 0.0024  lr: 0.00019181  max_mem: 15384M
[03/30 11:24:49] d2.utils.events INFO:  eta: 0:58:59  iter: 979  total_loss: 0.9037  loss_cls: 0.3107  loss_box_reg: 0.5033  loss_rpn_cls: 0.05082  loss_rpn_loc: 0.04784  time: 0.8717  data_time: 0.0023  lr: 0.0001958  max_mem: 15384M
[03/30 11:25:08] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0000999.pth
[03/30 11:25:08] d2.utils.events INFO:  eta: 0:58:45  iter: 999  total_loss: 0.9526  loss_cls: 0.3433  loss_box_reg: 0.4775  loss_rpn_cls: 0.06006  loss_rpn_loc: 0.05472  time: 0.8726  data_time: 0.0024  lr: 0.0001998  max_mem: 15384M
[03/30 11:25:26] d2.utils.events INFO:  eta: 0:58:28  iter: 1019  total_loss: 0.8876  loss_cls: 0.2965  loss_box_reg: 0.4442  loss_rpn_cls: 0.05435  loss_rpn_loc: 0.06183  time: 0.8725  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:25:43] d2.utils.events INFO:  eta: 0:58:10  iter: 1039  total_loss: 0.7676  loss_cls: 0.2716  loss_box_reg: 0.4544  loss_rpn_cls: 0.04156  loss_rpn_loc: 0.04349  time: 0.8719  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:25:59] d2.utils.events INFO:  eta: 0:57:50  iter: 1059  total_loss: 0.9255  loss_cls: 0.3144  loss_box_reg: 0.5115  loss_rpn_cls: 0.05747  loss_rpn_loc: 0.05767  time: 0.8711  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:26:16] d2.utils.events INFO:  eta: 0:57:28  iter: 1079  total_loss: 0.7411  loss_cls: 0.2488  loss_box_reg: 0.4178  loss_rpn_cls: 0.02943  loss_rpn_loc: 0.03571  time: 0.8704  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:26:34] d2.utils.events INFO:  eta: 0:57:12  iter: 1099  total_loss: 0.7853  loss_cls: 0.2241  loss_box_reg: 0.4448  loss_rpn_cls: 0.04223  loss_rpn_loc: 0.05118  time: 0.8706  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:26:51] d2.utils.events INFO:  eta: 0:56:52  iter: 1119  total_loss: 0.943  loss_cls: 0.3187  loss_box_reg: 0.5575  loss_rpn_cls: 0.04201  loss_rpn_loc: 0.05033  time: 0.8703  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:27:09] d2.utils.events INFO:  eta: 0:56:37  iter: 1139  total_loss: 0.7692  loss_cls: 0.2494  loss_box_reg: 0.4196  loss_rpn_cls: 0.03502  loss_rpn_loc: 0.0467  time: 0.8706  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:27:25] d2.utils.events INFO:  eta: 0:56:18  iter: 1159  total_loss: 0.8562  loss_cls: 0.2775  loss_box_reg: 0.4582  loss_rpn_cls: 0.02924  loss_rpn_loc: 0.04829  time: 0.8701  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:27:43] d2.utils.events INFO:  eta: 0:56:00  iter: 1179  total_loss: 0.8783  loss_cls: 0.3122  loss_box_reg: 0.4881  loss_rpn_cls: 0.04821  loss_rpn_loc: 0.05108  time: 0.8701  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:28:00] d2.utils.events INFO:  eta: 0:55:41  iter: 1199  total_loss: 0.8915  loss_cls: 0.3007  loss_box_reg: 0.472  loss_rpn_cls: 0.03991  loss_rpn_loc: 0.04932  time: 0.8696  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:28:17] d2.utils.events INFO:  eta: 0:55:24  iter: 1219  total_loss: 0.6878  loss_cls: 0.2556  loss_box_reg: 0.3595  loss_rpn_cls: 0.03346  loss_rpn_loc: 0.04215  time: 0.8696  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:28:34] d2.utils.events INFO:  eta: 0:55:08  iter: 1239  total_loss: 0.6936  loss_cls: 0.2356  loss_box_reg: 0.3842  loss_rpn_cls: 0.02389  loss_rpn_loc: 0.04008  time: 0.8693  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:28:51] d2.utils.events INFO:  eta: 0:54:48  iter: 1259  total_loss: 0.6673  loss_cls: 0.2228  loss_box_reg: 0.3608  loss_rpn_cls: 0.02678  loss_rpn_loc: 0.03699  time: 0.8688  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:29:08] d2.utils.events INFO:  eta: 0:54:28  iter: 1279  total_loss: 0.6601  loss_cls: 0.2156  loss_box_reg: 0.3837  loss_rpn_cls: 0.02864  loss_rpn_loc: 0.03116  time: 0.8685  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:29:26] d2.utils.events INFO:  eta: 0:54:12  iter: 1299  total_loss: 0.6505  loss_cls: 0.2078  loss_box_reg: 0.406  loss_rpn_cls: 0.03048  loss_rpn_loc: 0.04368  time: 0.8685  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:29:42] d2.utils.events INFO:  eta: 0:53:53  iter: 1319  total_loss: 0.7409  loss_cls: 0.2203  loss_box_reg: 0.4207  loss_rpn_cls: 0.02565  loss_rpn_loc: 0.04196  time: 0.8680  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:30:00] d2.utils.events INFO:  eta: 0:53:38  iter: 1339  total_loss: 0.7813  loss_cls: 0.2593  loss_box_reg: 0.4387  loss_rpn_cls: 0.03477  loss_rpn_loc: 0.04477  time: 0.8682  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:30:17] d2.utils.events INFO:  eta: 0:53:19  iter: 1359  total_loss: 0.826  loss_cls: 0.2939  loss_box_reg: 0.471  loss_rpn_cls: 0.03289  loss_rpn_loc: 0.04691  time: 0.8678  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:30:34] d2.utils.events INFO:  eta: 0:53:02  iter: 1379  total_loss: 0.654  loss_cls: 0.2082  loss_box_reg: 0.3726  loss_rpn_cls: 0.02855  loss_rpn_loc: 0.04237  time: 0.8677  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:30:51] d2.utils.events INFO:  eta: 0:52:45  iter: 1399  total_loss: 0.9018  loss_cls: 0.2954  loss_box_reg: 0.4338  loss_rpn_cls: 0.03298  loss_rpn_loc: 0.05286  time: 0.8676  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:31:08] d2.utils.events INFO:  eta: 0:52:27  iter: 1419  total_loss: 0.6864  loss_cls: 0.2401  loss_box_reg: 0.3931  loss_rpn_cls: 0.03195  loss_rpn_loc: 0.03804  time: 0.8673  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:31:26] d2.utils.events INFO:  eta: 0:52:09  iter: 1439  total_loss: 0.6358  loss_cls: 0.2302  loss_box_reg: 0.3496  loss_rpn_cls: 0.02627  loss_rpn_loc: 0.03019  time: 0.8672  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:31:43] d2.utils.events INFO:  eta: 0:51:52  iter: 1459  total_loss: 0.6721  loss_cls: 0.2317  loss_box_reg: 0.3885  loss_rpn_cls: 0.02082  loss_rpn_loc: 0.04216  time: 0.8670  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:31:59] d2.utils.events INFO:  eta: 0:51:34  iter: 1479  total_loss: 0.631  loss_cls: 0.2116  loss_box_reg: 0.3582  loss_rpn_cls: 0.02135  loss_rpn_loc: 0.03302  time: 0.8666  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:32:17] d2.utils.events INFO:  eta: 0:51:17  iter: 1499  total_loss: 0.6867  loss_cls: 0.2213  loss_box_reg: 0.3814  loss_rpn_cls: 0.01836  loss_rpn_loc: 0.04688  time: 0.8664  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:32:33] d2.utils.events INFO:  eta: 0:50:59  iter: 1519  total_loss: 0.7091  loss_cls: 0.2421  loss_box_reg: 0.4017  loss_rpn_cls: 0.03061  loss_rpn_loc: 0.04725  time: 0.8660  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:32:51] d2.utils.events INFO:  eta: 0:50:42  iter: 1539  total_loss: 0.7003  loss_cls: 0.2295  loss_box_reg: 0.3838  loss_rpn_cls: 0.02817  loss_rpn_loc: 0.03902  time: 0.8662  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:33:08] d2.utils.events INFO:  eta: 0:50:24  iter: 1559  total_loss: 0.5902  loss_cls: 0.1838  loss_box_reg: 0.319  loss_rpn_cls: 0.01896  loss_rpn_loc: 0.02572  time: 0.8660  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:33:24] d2.utils.events INFO:  eta: 0:50:05  iter: 1579  total_loss: 0.6334  loss_cls: 0.2021  loss_box_reg: 0.3868  loss_rpn_cls: 0.02708  loss_rpn_loc: 0.0364  time: 0.8654  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:33:42] d2.utils.events INFO:  eta: 0:49:48  iter: 1599  total_loss: 0.6372  loss_cls: 0.2046  loss_box_reg: 0.3449  loss_rpn_cls: 0.02342  loss_rpn_loc: 0.03991  time: 0.8655  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:33:58] d2.utils.events INFO:  eta: 0:49:29  iter: 1619  total_loss: 0.7458  loss_cls: 0.2546  loss_box_reg: 0.4276  loss_rpn_cls: 0.02489  loss_rpn_loc: 0.04629  time: 0.8649  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:34:15] d2.utils.events INFO:  eta: 0:49:11  iter: 1639  total_loss: 0.5784  loss_cls: 0.1896  loss_box_reg: 0.3103  loss_rpn_cls: 0.02215  loss_rpn_loc: 0.03856  time: 0.8647  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:34:32] d2.utils.events INFO:  eta: 0:48:52  iter: 1659  total_loss: 0.6782  loss_cls: 0.2157  loss_box_reg: 0.3674  loss_rpn_cls: 0.02051  loss_rpn_loc: 0.03802  time: 0.8643  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:34:49] d2.utils.events INFO:  eta: 0:48:33  iter: 1679  total_loss: 0.6161  loss_cls: 0.2152  loss_box_reg: 0.3518  loss_rpn_cls: 0.01814  loss_rpn_loc: 0.03454  time: 0.8639  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:35:06] d2.utils.events INFO:  eta: 0:48:15  iter: 1699  total_loss: 0.8273  loss_cls: 0.2713  loss_box_reg: 0.4355  loss_rpn_cls: 0.02721  loss_rpn_loc: 0.05072  time: 0.8639  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:35:23] d2.utils.events INFO:  eta: 0:47:57  iter: 1719  total_loss: 0.6464  loss_cls: 0.2208  loss_box_reg: 0.3713  loss_rpn_cls: 0.01792  loss_rpn_loc: 0.03619  time: 0.8638  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:35:39] d2.utils.events INFO:  eta: 0:47:37  iter: 1739  total_loss: 0.6399  loss_cls: 0.2075  loss_box_reg: 0.3651  loss_rpn_cls: 0.02346  loss_rpn_loc: 0.03574  time: 0.8632  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:35:56] d2.utils.events INFO:  eta: 0:47:17  iter: 1759  total_loss: 0.6635  loss_cls: 0.2103  loss_box_reg: 0.3672  loss_rpn_cls: 0.02848  loss_rpn_loc: 0.04094  time: 0.8627  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:36:13] d2.utils.events INFO:  eta: 0:47:01  iter: 1779  total_loss: 0.5665  loss_cls: 0.1912  loss_box_reg: 0.3233  loss_rpn_cls: 0.01807  loss_rpn_loc: 0.03353  time: 0.8628  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:36:30] d2.utils.events INFO:  eta: 0:46:40  iter: 1799  total_loss: 0.6591  loss_cls: 0.2116  loss_box_reg: 0.3808  loss_rpn_cls: 0.01801  loss_rpn_loc: 0.03049  time: 0.8627  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:36:47] d2.utils.events INFO:  eta: 0:46:23  iter: 1819  total_loss: 0.5742  loss_cls: 0.1843  loss_box_reg: 0.325  loss_rpn_cls: 0.01856  loss_rpn_loc: 0.03628  time: 0.8625  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:37:05] d2.utils.events INFO:  eta: 0:46:05  iter: 1839  total_loss: 0.6614  loss_cls: 0.2243  loss_box_reg: 0.3994  loss_rpn_cls: 0.01643  loss_rpn_loc: 0.02742  time: 0.8626  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:37:22] d2.utils.events INFO:  eta: 0:45:43  iter: 1859  total_loss: 0.6551  loss_cls: 0.2326  loss_box_reg: 0.3797  loss_rpn_cls: 0.01827  loss_rpn_loc: 0.03522  time: 0.8624  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:37:39] d2.utils.events INFO:  eta: 0:45:25  iter: 1879  total_loss: 0.6484  loss_cls: 0.2176  loss_box_reg: 0.343  loss_rpn_cls: 0.01724  loss_rpn_loc: 0.03623  time: 0.8621  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:37:56] d2.utils.events INFO:  eta: 0:45:05  iter: 1899  total_loss: 0.5579  loss_cls: 0.1857  loss_box_reg: 0.315  loss_rpn_cls: 0.01363  loss_rpn_loc: 0.03809  time: 0.8620  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:38:13] d2.utils.events INFO:  eta: 0:44:47  iter: 1919  total_loss: 0.6687  loss_cls: 0.2224  loss_box_reg: 0.3376  loss_rpn_cls: 0.02084  loss_rpn_loc: 0.04178  time: 0.8621  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:38:30] d2.utils.events INFO:  eta: 0:44:29  iter: 1939  total_loss: 0.542  loss_cls: 0.1729  loss_box_reg: 0.3176  loss_rpn_cls: 0.01844  loss_rpn_loc: 0.04127  time: 0.8618  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:38:47] d2.utils.events INFO:  eta: 0:44:08  iter: 1959  total_loss: 0.5196  loss_cls: 0.1712  loss_box_reg: 0.315  loss_rpn_cls: 0.01776  loss_rpn_loc: 0.02898  time: 0.8618  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:39:04] d2.utils.events INFO:  eta: 0:43:50  iter: 1979  total_loss: 0.6298  loss_cls: 0.232  loss_box_reg: 0.3471  loss_rpn_cls: 0.02682  loss_rpn_loc: 0.04069  time: 0.8616  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:39:22] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0001999.pth
[03/30 11:39:22] d2.utils.events INFO:  eta: 0:43:33  iter: 1999  total_loss: 0.6603  loss_cls: 0.2425  loss_box_reg: 0.3739  loss_rpn_cls: 0.01561  loss_rpn_loc: 0.03571  time: 0.8617  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:39:39] d2.utils.events INFO:  eta: 0:43:14  iter: 2019  total_loss: 0.6208  loss_cls: 0.1967  loss_box_reg: 0.3382  loss_rpn_cls: 0.01978  loss_rpn_loc: 0.04269  time: 0.8613  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:39:56] d2.utils.events INFO:  eta: 0:42:57  iter: 2039  total_loss: 0.6243  loss_cls: 0.2077  loss_box_reg: 0.3625  loss_rpn_cls: 0.02239  loss_rpn_loc: 0.04338  time: 0.8612  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:40:12] d2.utils.events INFO:  eta: 0:42:41  iter: 2059  total_loss: 0.6167  loss_cls: 0.197  loss_box_reg: 0.3508  loss_rpn_cls: 0.01449  loss_rpn_loc: 0.04451  time: 0.8609  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:40:29] d2.utils.events INFO:  eta: 0:42:23  iter: 2079  total_loss: 0.5816  loss_cls: 0.1798  loss_box_reg: 0.3354  loss_rpn_cls: 0.02051  loss_rpn_loc: 0.03724  time: 0.8605  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:40:46] d2.utils.events INFO:  eta: 0:42:05  iter: 2099  total_loss: 0.5769  loss_cls: 0.1877  loss_box_reg: 0.3466  loss_rpn_cls: 0.01522  loss_rpn_loc: 0.03169  time: 0.8603  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:41:03] d2.utils.events INFO:  eta: 0:41:47  iter: 2119  total_loss: 0.531  loss_cls: 0.1737  loss_box_reg: 0.2832  loss_rpn_cls: 0.01439  loss_rpn_loc: 0.03384  time: 0.8602  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:41:19] d2.utils.events INFO:  eta: 0:41:27  iter: 2139  total_loss: 0.6357  loss_cls: 0.2049  loss_box_reg: 0.356  loss_rpn_cls: 0.02168  loss_rpn_loc: 0.04578  time: 0.8598  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:41:36] d2.utils.events INFO:  eta: 0:41:11  iter: 2159  total_loss: 0.4993  loss_cls: 0.14  loss_box_reg: 0.2953  loss_rpn_cls: 0.01284  loss_rpn_loc: 0.0253  time: 0.8598  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:41:54] d2.utils.events INFO:  eta: 0:40:54  iter: 2179  total_loss: 0.5312  loss_cls: 0.1545  loss_box_reg: 0.3224  loss_rpn_cls: 0.0173  loss_rpn_loc: 0.03743  time: 0.8599  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:42:10] d2.utils.events INFO:  eta: 0:40:35  iter: 2199  total_loss: 0.5489  loss_cls: 0.154  loss_box_reg: 0.3273  loss_rpn_cls: 0.01424  loss_rpn_loc: 0.03085  time: 0.8595  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:42:27] d2.utils.events INFO:  eta: 0:40:14  iter: 2219  total_loss: 0.6263  loss_cls: 0.1845  loss_box_reg: 0.3868  loss_rpn_cls: 0.01554  loss_rpn_loc: 0.03421  time: 0.8594  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:42:44] d2.utils.events INFO:  eta: 0:39:57  iter: 2239  total_loss: 0.4729  loss_cls: 0.1355  loss_box_reg: 0.3159  loss_rpn_cls: 0.009366  loss_rpn_loc: 0.02998  time: 0.8594  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:43:02] d2.utils.events INFO:  eta: 0:39:43  iter: 2259  total_loss: 0.5289  loss_cls: 0.1674  loss_box_reg: 0.3161  loss_rpn_cls: 0.01202  loss_rpn_loc: 0.03014  time: 0.8594  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:43:19] d2.utils.events INFO:  eta: 0:39:25  iter: 2279  total_loss: 0.5861  loss_cls: 0.1815  loss_box_reg: 0.3406  loss_rpn_cls: 0.02169  loss_rpn_loc: 0.03467  time: 0.8594  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:43:35] d2.utils.events INFO:  eta: 0:39:04  iter: 2299  total_loss: 0.5853  loss_cls: 0.2015  loss_box_reg: 0.3336  loss_rpn_cls: 0.01816  loss_rpn_loc: 0.0382  time: 0.8592  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:43:52] d2.utils.events INFO:  eta: 0:38:47  iter: 2319  total_loss: 0.675  loss_cls: 0.241  loss_box_reg: 0.357  loss_rpn_cls: 0.02109  loss_rpn_loc: 0.03617  time: 0.8590  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:44:09] d2.utils.events INFO:  eta: 0:38:26  iter: 2339  total_loss: 0.5353  loss_cls: 0.1726  loss_box_reg: 0.3089  loss_rpn_cls: 0.0118  loss_rpn_loc: 0.0284  time: 0.8588  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:44:26] d2.utils.events INFO:  eta: 0:38:09  iter: 2359  total_loss: 0.7513  loss_cls: 0.2656  loss_box_reg: 0.409  loss_rpn_cls: 0.02767  loss_rpn_loc: 0.05072  time: 0.8588  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:44:43] d2.utils.events INFO:  eta: 0:37:51  iter: 2379  total_loss: 0.6342  loss_cls: 0.2177  loss_box_reg: 0.351  loss_rpn_cls: 0.01906  loss_rpn_loc: 0.03737  time: 0.8587  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:45:00] d2.utils.events INFO:  eta: 0:37:31  iter: 2399  total_loss: 0.4793  loss_cls: 0.1396  loss_box_reg: 0.291  loss_rpn_cls: 0.01383  loss_rpn_loc: 0.03117  time: 0.8586  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:45:17] d2.utils.events INFO:  eta: 0:37:13  iter: 2419  total_loss: 0.4461  loss_cls: 0.1369  loss_box_reg: 0.3131  loss_rpn_cls: 0.01893  loss_rpn_loc: 0.0269  time: 0.8585  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:45:34] d2.utils.events INFO:  eta: 0:36:54  iter: 2439  total_loss: 0.5332  loss_cls: 0.174  loss_box_reg: 0.3128  loss_rpn_cls: 0.02122  loss_rpn_loc: 0.03545  time: 0.8585  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:45:51] d2.utils.events INFO:  eta: 0:36:37  iter: 2459  total_loss: 0.5036  loss_cls: 0.1681  loss_box_reg: 0.3043  loss_rpn_cls: 0.01223  loss_rpn_loc: 0.02732  time: 0.8584  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:46:08] d2.utils.events INFO:  eta: 0:36:20  iter: 2479  total_loss: 0.5165  loss_cls: 0.1692  loss_box_reg: 0.3018  loss_rpn_cls: 0.0156  loss_rpn_loc: 0.03456  time: 0.8582  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:46:24] d2.utils.events INFO:  eta: 0:36:00  iter: 2499  total_loss: 0.5564  loss_cls: 0.1654  loss_box_reg: 0.3249  loss_rpn_cls: 0.0181  loss_rpn_loc: 0.03259  time: 0.8577  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:46:42] d2.utils.events INFO:  eta: 0:35:45  iter: 2519  total_loss: 0.5372  loss_cls: 0.1694  loss_box_reg: 0.3144  loss_rpn_cls: 0.01332  loss_rpn_loc: 0.03836  time: 0.8578  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:46:59] d2.utils.events INFO:  eta: 0:35:27  iter: 2539  total_loss: 0.5267  loss_cls: 0.1653  loss_box_reg: 0.315  loss_rpn_cls: 0.01764  loss_rpn_loc: 0.03233  time: 0.8579  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:47:16] d2.utils.events INFO:  eta: 0:35:10  iter: 2559  total_loss: 0.4122  loss_cls: 0.1185  loss_box_reg: 0.2387  loss_rpn_cls: 0.01601  loss_rpn_loc: 0.02919  time: 0.8579  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:47:33] d2.utils.events INFO:  eta: 0:34:51  iter: 2579  total_loss: 0.5305  loss_cls: 0.152  loss_box_reg: 0.2938  loss_rpn_cls: 0.01624  loss_rpn_loc: 0.04549  time: 0.8577  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:47:51] d2.utils.events INFO:  eta: 0:34:35  iter: 2599  total_loss: 0.511  loss_cls: 0.1489  loss_box_reg: 0.3342  loss_rpn_cls: 0.01265  loss_rpn_loc: 0.03241  time: 0.8580  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:48:09] d2.utils.events INFO:  eta: 0:34:21  iter: 2619  total_loss: 0.5322  loss_cls: 0.1849  loss_box_reg: 0.304  loss_rpn_cls: 0.01326  loss_rpn_loc: 0.02738  time: 0.8583  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:48:27] d2.utils.events INFO:  eta: 0:34:05  iter: 2639  total_loss: 0.5682  loss_cls: 0.201  loss_box_reg: 0.3296  loss_rpn_cls: 0.01514  loss_rpn_loc: 0.04664  time: 0.8586  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:48:45] d2.utils.events INFO:  eta: 0:33:49  iter: 2659  total_loss: 0.5369  loss_cls: 0.1758  loss_box_reg: 0.2982  loss_rpn_cls: 0.01763  loss_rpn_loc: 0.03224  time: 0.8589  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:49:03] d2.utils.events INFO:  eta: 0:33:37  iter: 2679  total_loss: 0.4873  loss_cls: 0.1717  loss_box_reg: 0.2975  loss_rpn_cls: 0.009224  loss_rpn_loc: 0.02409  time: 0.8592  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:49:20] d2.utils.events INFO:  eta: 0:33:15  iter: 2699  total_loss: 0.5787  loss_cls: 0.1813  loss_box_reg: 0.2929  loss_rpn_cls: 0.01832  loss_rpn_loc: 0.03607  time: 0.8590  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:49:37] d2.utils.events INFO:  eta: 0:33:00  iter: 2719  total_loss: 0.4931  loss_cls: 0.1499  loss_box_reg: 0.2914  loss_rpn_cls: 0.01319  loss_rpn_loc: 0.03695  time: 0.8591  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:49:54] d2.utils.events INFO:  eta: 0:32:46  iter: 2739  total_loss: 0.5848  loss_cls: 0.1792  loss_box_reg: 0.3375  loss_rpn_cls: 0.01813  loss_rpn_loc: 0.03551  time: 0.8592  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:50:11] d2.utils.events INFO:  eta: 0:32:29  iter: 2759  total_loss: 0.5045  loss_cls: 0.1605  loss_box_reg: 0.3107  loss_rpn_cls: 0.01889  loss_rpn_loc: 0.02877  time: 0.8591  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:50:28] d2.utils.events INFO:  eta: 0:32:11  iter: 2779  total_loss: 0.4444  loss_cls: 0.1423  loss_box_reg: 0.2521  loss_rpn_cls: 0.012  loss_rpn_loc: 0.0236  time: 0.8590  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:50:45] d2.utils.events INFO:  eta: 0:31:54  iter: 2799  total_loss: 0.4714  loss_cls: 0.1379  loss_box_reg: 0.2658  loss_rpn_cls: 0.01191  loss_rpn_loc: 0.02629  time: 0.8589  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:51:02] d2.utils.events INFO:  eta: 0:31:36  iter: 2819  total_loss: 0.5228  loss_cls: 0.1635  loss_box_reg: 0.3025  loss_rpn_cls: 0.01533  loss_rpn_loc: 0.0328  time: 0.8588  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 11:51:19] d2.utils.events INFO:  eta: 0:31:18  iter: 2839  total_loss: 0.4536  loss_cls: 0.1265  loss_box_reg: 0.2862  loss_rpn_cls: 0.01172  loss_rpn_loc: 0.02794  time: 0.8586  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:51:36] d2.utils.events INFO:  eta: 0:31:01  iter: 2859  total_loss: 0.4265  loss_cls: 0.1541  loss_box_reg: 0.2663  loss_rpn_cls: 0.01185  loss_rpn_loc: 0.02851  time: 0.8586  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:51:53] d2.utils.events INFO:  eta: 0:30:44  iter: 2879  total_loss: 0.4807  loss_cls: 0.1483  loss_box_reg: 0.3137  loss_rpn_cls: 0.01278  loss_rpn_loc: 0.02914  time: 0.8584  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:52:10] d2.utils.events INFO:  eta: 0:30:27  iter: 2899  total_loss: 0.5216  loss_cls: 0.1649  loss_box_reg: 0.2973  loss_rpn_cls: 0.01148  loss_rpn_loc: 0.02825  time: 0.8584  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:52:27] d2.utils.events INFO:  eta: 0:30:09  iter: 2919  total_loss: 0.5724  loss_cls: 0.1871  loss_box_reg: 0.3274  loss_rpn_cls: 0.01304  loss_rpn_loc: 0.03458  time: 0.8584  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:52:44] d2.utils.events INFO:  eta: 0:29:52  iter: 2939  total_loss: 0.4999  loss_cls: 0.1566  loss_box_reg: 0.3022  loss_rpn_cls: 0.01403  loss_rpn_loc: 0.03238  time: 0.8583  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:53:01] d2.utils.events INFO:  eta: 0:29:34  iter: 2959  total_loss: 0.4771  loss_cls: 0.1382  loss_box_reg: 0.2991  loss_rpn_cls: 0.01158  loss_rpn_loc: 0.03213  time: 0.8582  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:53:19] d2.utils.events INFO:  eta: 0:29:17  iter: 2979  total_loss: 0.4697  loss_cls: 0.1509  loss_box_reg: 0.2987  loss_rpn_cls: 0.01003  loss_rpn_loc: 0.03519  time: 0.8583  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:53:36] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0002999.pth
[03/30 11:53:37] d2.utils.events INFO:  eta: 0:29:00  iter: 2999  total_loss: 0.4079  loss_cls: 0.1375  loss_box_reg: 0.25  loss_rpn_cls: 0.01359  loss_rpn_loc: 0.02984  time: 0.8584  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:53:54] d2.utils.events INFO:  eta: 0:28:42  iter: 3019  total_loss: 0.4346  loss_cls: 0.1283  loss_box_reg: 0.2739  loss_rpn_cls: 0.01321  loss_rpn_loc: 0.02446  time: 0.8583  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:54:11] d2.utils.events INFO:  eta: 0:28:25  iter: 3039  total_loss: 0.5037  loss_cls: 0.1342  loss_box_reg: 0.3002  loss_rpn_cls: 0.0106  loss_rpn_loc: 0.02941  time: 0.8584  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:54:29] d2.utils.events INFO:  eta: 0:28:07  iter: 3059  total_loss: 0.54  loss_cls: 0.1508  loss_box_reg: 0.3259  loss_rpn_cls: 0.0153  loss_rpn_loc: 0.03618  time: 0.8584  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:54:47] d2.utils.events INFO:  eta: 0:27:50  iter: 3079  total_loss: 0.4142  loss_cls: 0.1158  loss_box_reg: 0.2812  loss_rpn_cls: 0.008149  loss_rpn_loc: 0.03075  time: 0.8586  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:55:04] d2.utils.events INFO:  eta: 0:27:34  iter: 3099  total_loss: 0.4318  loss_cls: 0.1312  loss_box_reg: 0.2543  loss_rpn_cls: 0.009417  loss_rpn_loc: 0.02248  time: 0.8589  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:55:22] d2.utils.events INFO:  eta: 0:27:20  iter: 3119  total_loss: 0.4411  loss_cls: 0.1383  loss_box_reg: 0.2965  loss_rpn_cls: 0.01263  loss_rpn_loc: 0.02442  time: 0.8591  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:55:39] d2.utils.events INFO:  eta: 0:27:03  iter: 3139  total_loss: 0.48  loss_cls: 0.1544  loss_box_reg: 0.2707  loss_rpn_cls: 0.01374  loss_rpn_loc: 0.03412  time: 0.8590  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:55:56] d2.utils.events INFO:  eta: 0:26:45  iter: 3159  total_loss: 0.4294  loss_cls: 0.1472  loss_box_reg: 0.2529  loss_rpn_cls: 0.01029  loss_rpn_loc: 0.03256  time: 0.8590  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:56:13] d2.utils.events INFO:  eta: 0:26:28  iter: 3179  total_loss: 0.4869  loss_cls: 0.1481  loss_box_reg: 0.3029  loss_rpn_cls: 0.009155  loss_rpn_loc: 0.03403  time: 0.8588  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:56:31] d2.utils.events INFO:  eta: 0:26:11  iter: 3199  total_loss: 0.3864  loss_cls: 0.0968  loss_box_reg: 0.2407  loss_rpn_cls: 0.01033  loss_rpn_loc: 0.0197  time: 0.8590  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 11:56:48] d2.utils.events INFO:  eta: 0:25:54  iter: 3219  total_loss: 0.4888  loss_cls: 0.1299  loss_box_reg: 0.2895  loss_rpn_cls: 0.01224  loss_rpn_loc: 0.03821  time: 0.8590  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:57:06] d2.utils.events INFO:  eta: 0:25:37  iter: 3239  total_loss: 0.5386  loss_cls: 0.1727  loss_box_reg: 0.3437  loss_rpn_cls: 0.01283  loss_rpn_loc: 0.0351  time: 0.8592  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:57:24] d2.utils.events INFO:  eta: 0:25:19  iter: 3259  total_loss: 0.53  loss_cls: 0.1555  loss_box_reg: 0.2976  loss_rpn_cls: 0.009544  loss_rpn_loc: 0.0304  time: 0.8594  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:57:42] d2.utils.events INFO:  eta: 0:25:03  iter: 3279  total_loss: 0.4185  loss_cls: 0.1092  loss_box_reg: 0.2623  loss_rpn_cls: 0.009036  loss_rpn_loc: 0.02876  time: 0.8596  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 11:58:00] d2.utils.events INFO:  eta: 0:24:47  iter: 3299  total_loss: 0.4537  loss_cls: 0.1287  loss_box_reg: 0.2677  loss_rpn_cls: 0.007903  loss_rpn_loc: 0.02893  time: 0.8598  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:58:18] d2.utils.events INFO:  eta: 0:24:31  iter: 3319  total_loss: 0.4115  loss_cls: 0.1371  loss_box_reg: 0.2598  loss_rpn_cls: 0.009169  loss_rpn_loc: 0.02878  time: 0.8600  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:58:36] d2.utils.events INFO:  eta: 0:24:16  iter: 3339  total_loss: 0.4115  loss_cls: 0.1281  loss_box_reg: 0.2761  loss_rpn_cls: 0.00598  loss_rpn_loc: 0.03184  time: 0.8602  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:58:54] d2.utils.events INFO:  eta: 0:23:59  iter: 3359  total_loss: 0.426  loss_cls: 0.1223  loss_box_reg: 0.2589  loss_rpn_cls: 0.01043  loss_rpn_loc: 0.02766  time: 0.8605  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:59:12] d2.utils.events INFO:  eta: 0:23:43  iter: 3379  total_loss: 0.4628  loss_cls: 0.1368  loss_box_reg: 0.2806  loss_rpn_cls: 0.01344  loss_rpn_loc: 0.02833  time: 0.8607  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 11:59:30] d2.utils.events INFO:  eta: 0:23:26  iter: 3399  total_loss: 0.5163  loss_cls: 0.1418  loss_box_reg: 0.3242  loss_rpn_cls: 0.009772  loss_rpn_loc: 0.02843  time: 0.8610  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 11:59:48] d2.utils.events INFO:  eta: 0:23:11  iter: 3419  total_loss: 0.4567  loss_cls: 0.1389  loss_box_reg: 0.2811  loss_rpn_cls: 0.009724  loss_rpn_loc: 0.03383  time: 0.8611  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:00:06] d2.utils.events INFO:  eta: 0:22:54  iter: 3439  total_loss: 0.4487  loss_cls: 0.1334  loss_box_reg: 0.2932  loss_rpn_cls: 0.01146  loss_rpn_loc: 0.03141  time: 0.8612  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:00:22] d2.utils.events INFO:  eta: 0:22:36  iter: 3459  total_loss: 0.4888  loss_cls: 0.1416  loss_box_reg: 0.2836  loss_rpn_cls: 0.009076  loss_rpn_loc: 0.0321  time: 0.8611  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:00:40] d2.utils.events INFO:  eta: 0:22:19  iter: 3479  total_loss: 0.5316  loss_cls: 0.1544  loss_box_reg: 0.2985  loss_rpn_cls: 0.01295  loss_rpn_loc: 0.02989  time: 0.8613  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:00:58] d2.utils.events INFO:  eta: 0:22:02  iter: 3499  total_loss: 0.6032  loss_cls: 0.2009  loss_box_reg: 0.3297  loss_rpn_cls: 0.01656  loss_rpn_loc: 0.04176  time: 0.8613  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:01:16] d2.utils.events INFO:  eta: 0:21:46  iter: 3519  total_loss: 0.4314  loss_cls: 0.1118  loss_box_reg: 0.2657  loss_rpn_cls: 0.007641  loss_rpn_loc: 0.0246  time: 0.8616  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:01:33] d2.utils.events INFO:  eta: 0:21:28  iter: 3539  total_loss: 0.4727  loss_cls: 0.1272  loss_box_reg: 0.2858  loss_rpn_cls: 0.009133  loss_rpn_loc: 0.0279  time: 0.8616  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[03/30 12:01:52] d2.utils.events INFO:  eta: 0:21:11  iter: 3559  total_loss: 0.475  loss_cls: 0.1473  loss_box_reg: 0.2745  loss_rpn_cls: 0.01031  loss_rpn_loc: 0.02479  time: 0.8618  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:02:10] d2.utils.events INFO:  eta: 0:20:56  iter: 3579  total_loss: 0.4549  loss_cls: 0.1463  loss_box_reg: 0.2612  loss_rpn_cls: 0.01269  loss_rpn_loc: 0.02316  time: 0.8621  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:02:28] d2.utils.events INFO:  eta: 0:20:37  iter: 3599  total_loss: 0.4665  loss_cls: 0.1318  loss_box_reg: 0.2855  loss_rpn_cls: 0.009649  loss_rpn_loc: 0.02329  time: 0.8622  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:02:45] d2.utils.events INFO:  eta: 0:20:18  iter: 3619  total_loss: 0.421  loss_cls: 0.1088  loss_box_reg: 0.2511  loss_rpn_cls: 0.01071  loss_rpn_loc: 0.02644  time: 0.8623  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:03:03] d2.utils.events INFO:  eta: 0:20:01  iter: 3639  total_loss: 0.4047  loss_cls: 0.112  loss_box_reg: 0.2659  loss_rpn_cls: 0.01004  loss_rpn_loc: 0.02577  time: 0.8625  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:03:21] d2.utils.events INFO:  eta: 0:19:43  iter: 3659  total_loss: 0.4081  loss_cls: 0.1164  loss_box_reg: 0.23  loss_rpn_cls: 0.006288  loss_rpn_loc: 0.02955  time: 0.8627  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:03:39] d2.utils.events INFO:  eta: 0:19:26  iter: 3679  total_loss: 0.3516  loss_cls: 0.1017  loss_box_reg: 0.2236  loss_rpn_cls: 0.005137  loss_rpn_loc: 0.02554  time: 0.8628  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:03:57] d2.utils.events INFO:  eta: 0:19:09  iter: 3699  total_loss: 0.4773  loss_cls: 0.1393  loss_box_reg: 0.3037  loss_rpn_cls: 0.007454  loss_rpn_loc: 0.02968  time: 0.8629  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:04:15] d2.utils.events INFO:  eta: 0:18:52  iter: 3719  total_loss: 0.4412  loss_cls: 0.1211  loss_box_reg: 0.2747  loss_rpn_cls: 0.01454  loss_rpn_loc: 0.0295  time: 0.8631  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:04:32] d2.utils.events INFO:  eta: 0:18:34  iter: 3739  total_loss: 0.5486  loss_cls: 0.1681  loss_box_reg: 0.3153  loss_rpn_cls: 0.01001  loss_rpn_loc: 0.03676  time: 0.8631  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:04:50] d2.utils.events INFO:  eta: 0:18:18  iter: 3759  total_loss: 0.4372  loss_cls: 0.1124  loss_box_reg: 0.2873  loss_rpn_cls: 0.006319  loss_rpn_loc: 0.03037  time: 0.8633  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:05:08] d2.utils.events INFO:  eta: 0:18:01  iter: 3779  total_loss: 0.4294  loss_cls: 0.1254  loss_box_reg: 0.2577  loss_rpn_cls: 0.0103  loss_rpn_loc: 0.03098  time: 0.8633  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:05:24] d2.utils.events INFO:  eta: 0:17:43  iter: 3799  total_loss: 0.4361  loss_cls: 0.1376  loss_box_reg: 0.2856  loss_rpn_cls: 0.009025  loss_rpn_loc: 0.0262  time: 0.8631  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:05:41] d2.utils.events INFO:  eta: 0:17:26  iter: 3819  total_loss: 0.4771  loss_cls: 0.1434  loss_box_reg: 0.2711  loss_rpn_cls: 0.006766  loss_rpn_loc: 0.03213  time: 0.8631  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:05:59] d2.utils.events INFO:  eta: 0:17:09  iter: 3839  total_loss: 0.38  loss_cls: 0.1083  loss_box_reg: 0.22  loss_rpn_cls: 0.00661  loss_rpn_loc: 0.02461  time: 0.8631  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:06:16] d2.utils.events INFO:  eta: 0:16:52  iter: 3859  total_loss: 0.4527  loss_cls: 0.1368  loss_box_reg: 0.2842  loss_rpn_cls: 0.0107  loss_rpn_loc: 0.02709  time: 0.8630  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:06:33] d2.utils.events INFO:  eta: 0:16:35  iter: 3879  total_loss: 0.3843  loss_cls: 0.1082  loss_box_reg: 0.2528  loss_rpn_cls: 0.009389  loss_rpn_loc: 0.03073  time: 0.8630  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 12:06:50] d2.utils.events INFO:  eta: 0:16:17  iter: 3899  total_loss: 0.4444  loss_cls: 0.1342  loss_box_reg: 0.287  loss_rpn_cls: 0.008934  loss_rpn_loc: 0.02717  time: 0.8630  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:07:07] d2.utils.events INFO:  eta: 0:15:58  iter: 3919  total_loss: 0.4057  loss_cls: 0.1176  loss_box_reg: 0.2597  loss_rpn_cls: 0.00489  loss_rpn_loc: 0.02849  time: 0.8630  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:07:25] d2.utils.events INFO:  eta: 0:15:40  iter: 3939  total_loss: 0.4137  loss_cls: 0.1351  loss_box_reg: 0.2557  loss_rpn_cls: 0.01088  loss_rpn_loc: 0.03219  time: 0.8630  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:07:41] d2.utils.events INFO:  eta: 0:15:23  iter: 3959  total_loss: 0.4628  loss_cls: 0.1336  loss_box_reg: 0.2831  loss_rpn_cls: 0.01188  loss_rpn_loc: 0.03505  time: 0.8628  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:07:58] d2.utils.events INFO:  eta: 0:15:04  iter: 3979  total_loss: 0.414  loss_cls: 0.1115  loss_box_reg: 0.2539  loss_rpn_cls: 0.00808  loss_rpn_loc: 0.0279  time: 0.8627  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:08:15] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0003999.pth
[03/30 12:08:16] d2.utils.events INFO:  eta: 0:14:46  iter: 3999  total_loss: 0.3924  loss_cls: 0.1181  loss_box_reg: 0.2594  loss_rpn_cls: 0.006694  loss_rpn_loc: 0.02836  time: 0.8627  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:08:33] d2.utils.events INFO:  eta: 0:14:28  iter: 4019  total_loss: 0.4585  loss_cls: 0.1163  loss_box_reg: 0.3006  loss_rpn_cls: 0.009052  loss_rpn_loc: 0.02641  time: 0.8625  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:08:50] d2.utils.events INFO:  eta: 0:14:10  iter: 4039  total_loss: 0.3638  loss_cls: 0.0974  loss_box_reg: 0.2271  loss_rpn_cls: 0.008596  loss_rpn_loc: 0.02501  time: 0.8625  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:09:07] d2.utils.events INFO:  eta: 0:13:53  iter: 4059  total_loss: 0.3728  loss_cls: 0.108  loss_box_reg: 0.227  loss_rpn_cls: 0.005302  loss_rpn_loc: 0.02299  time: 0.8625  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:09:24] d2.utils.events INFO:  eta: 0:13:35  iter: 4079  total_loss: 0.4735  loss_cls: 0.1373  loss_box_reg: 0.2952  loss_rpn_cls: 0.006916  loss_rpn_loc: 0.03302  time: 0.8624  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:09:41] d2.utils.events INFO:  eta: 0:13:17  iter: 4099  total_loss: 0.4607  loss_cls: 0.1176  loss_box_reg: 0.2923  loss_rpn_cls: 0.00582  loss_rpn_loc: 0.0263  time: 0.8624  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:09:59] d2.utils.events INFO:  eta: 0:12:58  iter: 4119  total_loss: 0.4037  loss_cls: 0.1077  loss_box_reg: 0.2396  loss_rpn_cls: 0.007326  loss_rpn_loc: 0.03333  time: 0.8624  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:10:16] d2.utils.events INFO:  eta: 0:12:41  iter: 4139  total_loss: 0.3803  loss_cls: 0.1062  loss_box_reg: 0.2469  loss_rpn_cls: 0.006909  loss_rpn_loc: 0.02544  time: 0.8625  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:10:34] d2.utils.events INFO:  eta: 0:12:24  iter: 4159  total_loss: 0.3527  loss_cls: 0.09126  loss_box_reg: 0.2345  loss_rpn_cls: 0.007082  loss_rpn_loc: 0.02643  time: 0.8625  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:10:51] d2.utils.events INFO:  eta: 0:12:06  iter: 4179  total_loss: 0.3334  loss_cls: 0.09092  loss_box_reg: 0.2434  loss_rpn_cls: 0.004137  loss_rpn_loc: 0.01819  time: 0.8625  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:11:08] d2.utils.events INFO:  eta: 0:11:47  iter: 4199  total_loss: 0.4515  loss_cls: 0.1239  loss_box_reg: 0.2695  loss_rpn_cls: 0.008683  loss_rpn_loc: 0.03417  time: 0.8623  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:11:25] d2.utils.events INFO:  eta: 0:11:30  iter: 4219  total_loss: 0.367  loss_cls: 0.1155  loss_box_reg: 0.231  loss_rpn_cls: 0.007823  loss_rpn_loc: 0.02931  time: 0.8624  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:11:42] d2.utils.events INFO:  eta: 0:11:12  iter: 4239  total_loss: 0.4874  loss_cls: 0.1229  loss_box_reg: 0.3013  loss_rpn_cls: 0.01017  loss_rpn_loc: 0.03592  time: 0.8624  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:11:59] d2.utils.events INFO:  eta: 0:10:54  iter: 4259  total_loss: 0.4136  loss_cls: 0.1129  loss_box_reg: 0.2466  loss_rpn_cls: 0.006187  loss_rpn_loc: 0.02882  time: 0.8623  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:12:16] d2.utils.events INFO:  eta: 0:10:35  iter: 4279  total_loss: 0.3705  loss_cls: 0.08598  loss_box_reg: 0.2586  loss_rpn_cls: 0.004422  loss_rpn_loc: 0.02433  time: 0.8622  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:12:34] d2.utils.events INFO:  eta: 0:10:17  iter: 4299  total_loss: 0.4412  loss_cls: 0.1254  loss_box_reg: 0.2519  loss_rpn_cls: 0.009913  loss_rpn_loc: 0.03799  time: 0.8622  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:12:50] d2.utils.events INFO:  eta: 0:09:59  iter: 4319  total_loss: 0.4026  loss_cls: 0.08987  loss_box_reg: 0.2311  loss_rpn_cls: 0.006876  loss_rpn_loc: 0.02144  time: 0.8621  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:13:07] d2.utils.events INFO:  eta: 0:09:40  iter: 4339  total_loss: 0.4611  loss_cls: 0.1345  loss_box_reg: 0.2664  loss_rpn_cls: 0.01034  loss_rpn_loc: 0.0357  time: 0.8619  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:13:24] d2.utils.events INFO:  eta: 0:09:23  iter: 4359  total_loss: 0.3341  loss_cls: 0.09757  loss_box_reg: 0.2167  loss_rpn_cls: 0.009201  loss_rpn_loc: 0.02314  time: 0.8619  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:13:41] d2.utils.events INFO:  eta: 0:09:05  iter: 4379  total_loss: 0.4721  loss_cls: 0.1252  loss_box_reg: 0.3027  loss_rpn_cls: 0.006285  loss_rpn_loc: 0.02659  time: 0.8619  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:13:59] d2.utils.events INFO:  eta: 0:08:47  iter: 4399  total_loss: 0.4686  loss_cls: 0.1333  loss_box_reg: 0.2733  loss_rpn_cls: 0.01026  loss_rpn_loc: 0.03008  time: 0.8620  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:14:16] d2.utils.events INFO:  eta: 0:08:29  iter: 4419  total_loss: 0.401  loss_cls: 0.1124  loss_box_reg: 0.2393  loss_rpn_cls: 0.009078  loss_rpn_loc: 0.02217  time: 0.8620  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:14:33] d2.utils.events INFO:  eta: 0:08:11  iter: 4439  total_loss: 0.4284  loss_cls: 0.1233  loss_box_reg: 0.2691  loss_rpn_cls: 0.007471  loss_rpn_loc: 0.0235  time: 0.8619  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:14:50] d2.utils.events INFO:  eta: 0:07:53  iter: 4459  total_loss: 0.404  loss_cls: 0.1077  loss_box_reg: 0.2467  loss_rpn_cls: 0.005682  loss_rpn_loc: 0.02361  time: 0.8619  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:15:07] d2.utils.events INFO:  eta: 0:07:36  iter: 4479  total_loss: 0.3364  loss_cls: 0.08111  loss_box_reg: 0.2396  loss_rpn_cls: 0.004329  loss_rpn_loc: 0.02428  time: 0.8618  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:15:24] d2.utils.events INFO:  eta: 0:07:18  iter: 4499  total_loss: 0.4291  loss_cls: 0.118  loss_box_reg: 0.2599  loss_rpn_cls: 0.005332  loss_rpn_loc: 0.02991  time: 0.8618  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:15:41] d2.utils.events INFO:  eta: 0:07:00  iter: 4519  total_loss: 0.3626  loss_cls: 0.1011  loss_box_reg: 0.2457  loss_rpn_cls: 0.005358  loss_rpn_loc: 0.02742  time: 0.8617  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:15:58] d2.utils.events INFO:  eta: 0:06:42  iter: 4539  total_loss: 0.4124  loss_cls: 0.1028  loss_box_reg: 0.2725  loss_rpn_cls: 0.009751  loss_rpn_loc: 0.0234  time: 0.8616  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:16:15] d2.utils.events INFO:  eta: 0:06:25  iter: 4559  total_loss: 0.4288  loss_cls: 0.1226  loss_box_reg: 0.2726  loss_rpn_cls: 0.007492  loss_rpn_loc: 0.03472  time: 0.8615  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:16:32] d2.utils.events INFO:  eta: 0:06:07  iter: 4579  total_loss: 0.3757  loss_cls: 0.09647  loss_box_reg: 0.2438  loss_rpn_cls: 0.005152  loss_rpn_loc: 0.03017  time: 0.8614  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 12:16:49] d2.utils.events INFO:  eta: 0:05:50  iter: 4599  total_loss: 0.4505  loss_cls: 0.116  loss_box_reg: 0.2933  loss_rpn_cls: 0.006941  loss_rpn_loc: 0.02533  time: 0.8614  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:17:06] d2.utils.events INFO:  eta: 0:05:32  iter: 4619  total_loss: 0.3681  loss_cls: 0.1016  loss_box_reg: 0.2217  loss_rpn_cls: 0.004252  loss_rpn_loc: 0.02691  time: 0.8614  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:17:24] d2.utils.events INFO:  eta: 0:05:14  iter: 4639  total_loss: 0.4162  loss_cls: 0.1127  loss_box_reg: 0.2552  loss_rpn_cls: 0.007877  loss_rpn_loc: 0.02658  time: 0.8614  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:17:40] d2.utils.events INFO:  eta: 0:04:56  iter: 4659  total_loss: 0.3598  loss_cls: 0.08076  loss_box_reg: 0.243  loss_rpn_cls: 0.004272  loss_rpn_loc: 0.01844  time: 0.8613  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[03/30 12:17:58] d2.utils.events INFO:  eta: 0:04:39  iter: 4679  total_loss: 0.369  loss_cls: 0.1105  loss_box_reg: 0.232  loss_rpn_cls: 0.00735  loss_rpn_loc: 0.0285  time: 0.8613  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:18:15] d2.utils.events INFO:  eta: 0:04:21  iter: 4699  total_loss: 0.3682  loss_cls: 0.08289  loss_box_reg: 0.242  loss_rpn_cls: 0.004971  loss_rpn_loc: 0.02525  time: 0.8612  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:18:31] d2.utils.events INFO:  eta: 0:04:03  iter: 4719  total_loss: 0.4274  loss_cls: 0.105  loss_box_reg: 0.2702  loss_rpn_cls: 0.00849  loss_rpn_loc: 0.03399  time: 0.8611  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:18:48] d2.utils.events INFO:  eta: 0:03:46  iter: 4739  total_loss: 0.4201  loss_cls: 0.1311  loss_box_reg: 0.2542  loss_rpn_cls: 0.006746  loss_rpn_loc: 0.03084  time: 0.8610  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:19:05] d2.utils.events INFO:  eta: 0:03:28  iter: 4759  total_loss: 0.3939  loss_cls: 0.1103  loss_box_reg: 0.2633  loss_rpn_cls: 0.006326  loss_rpn_loc: 0.02141  time: 0.8610  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:19:22] d2.utils.events INFO:  eta: 0:03:10  iter: 4779  total_loss: 0.3972  loss_cls: 0.1024  loss_box_reg: 0.2431  loss_rpn_cls: 0.006542  loss_rpn_loc: 0.03038  time: 0.8610  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 12:19:39] d2.utils.events INFO:  eta: 0:02:53  iter: 4799  total_loss: 0.4629  loss_cls: 0.1245  loss_box_reg: 0.2681  loss_rpn_cls: 0.007383  loss_rpn_loc: 0.03536  time: 0.8608  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 12:19:56] d2.utils.events INFO:  eta: 0:02:36  iter: 4819  total_loss: 0.4162  loss_cls: 0.1316  loss_box_reg: 0.2598  loss_rpn_cls: 0.006575  loss_rpn_loc: 0.02256  time: 0.8608  data_time: 0.0028  lr: 0.0002  max_mem: 15384M
[03/30 12:20:13] d2.utils.events INFO:  eta: 0:02:19  iter: 4839  total_loss: 0.3129  loss_cls: 0.09234  loss_box_reg: 0.1977  loss_rpn_cls: 0.005555  loss_rpn_loc: 0.02253  time: 0.8608  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:20:30] d2.utils.events INFO:  eta: 0:02:01  iter: 4859  total_loss: 0.3719  loss_cls: 0.1075  loss_box_reg: 0.2358  loss_rpn_cls: 0.005893  loss_rpn_loc: 0.02078  time: 0.8607  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:20:47] d2.utils.events INFO:  eta: 0:01:44  iter: 4879  total_loss: 0.4053  loss_cls: 0.1101  loss_box_reg: 0.2544  loss_rpn_cls: 0.00806  loss_rpn_loc: 0.02967  time: 0.8607  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[03/30 12:21:05] d2.utils.events INFO:  eta: 0:01:26  iter: 4899  total_loss: 0.422  loss_cls: 0.1068  loss_box_reg: 0.2588  loss_rpn_cls: 0.006407  loss_rpn_loc: 0.0256  time: 0.8607  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:21:22] d2.utils.events INFO:  eta: 0:01:09  iter: 4919  total_loss: 0.4282  loss_cls: 0.131  loss_box_reg: 0.2719  loss_rpn_cls: 0.007436  loss_rpn_loc: 0.03262  time: 0.8606  data_time: 0.0027  lr: 0.0002  max_mem: 15384M
[03/30 12:21:39] d2.utils.events INFO:  eta: 0:00:52  iter: 4939  total_loss: 0.3705  loss_cls: 0.1043  loss_box_reg: 0.2519  loss_rpn_cls: 0.005448  loss_rpn_loc: 0.0241  time: 0.8606  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:21:56] d2.utils.events INFO:  eta: 0:00:34  iter: 4959  total_loss: 0.4161  loss_cls: 0.1097  loss_box_reg: 0.2629  loss_rpn_cls: 0.0043  loss_rpn_loc: 0.01993  time: 0.8605  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:22:13] d2.utils.events INFO:  eta: 0:00:17  iter: 4979  total_loss: 0.3339  loss_cls: 0.08497  loss_box_reg: 0.1998  loss_rpn_cls: 0.005899  loss_rpn_loc: 0.02054  time: 0.8606  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:22:30] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0004999.pth
[03/30 12:22:31] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[03/30 12:22:32] d2.utils.events INFO:  eta: 0:00:00  iter: 4999  total_loss: 0.443  loss_cls: 0.1157  loss_box_reg: 0.2889  loss_rpn_cls: 0.008058  loss_rpn_loc: 0.0281  time: 0.8606  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[03/30 12:22:32] d2.engine.hooks INFO: Overall training speed: 4998 iterations in 1:11:41 (0.8606 s / it)
[03/30 12:22:32] d2.engine.hooks INFO: Total training time: 1:11:57 (0:00:16 on hooks)
[03/31 10:18:56] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 10:18:56] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 10:18:56] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 10:18:56] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/31 10:18:56] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 10:18:56] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 10:18:56] d2.utils.env INFO: Using a generated random seed 57875833
[03/31 10:18:59] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 10:18:59] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 10:18:59] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/31 10:18:59] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/31 10:21:03] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 10:21:03] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 10:21:03] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 10:21:03] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/31 10:21:03] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 10:21:03] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 10:21:03] d2.utils.env INFO: Using a generated random seed 4766013
[03/31 10:21:06] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 10:21:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 10:21:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/31 10:21:06] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/31 10:21:06] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 10:21:06] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |[0m
[03/31 10:21:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/31 10:21:06] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 10:21:06] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 10:21:06] FCT.evaluation.visdrone_evaluation INFO: 'visdrone_val' is not registered by `register_coco_instances`. Therefore trying to convert it to COCO format ...
[03/31 10:21:06] d2.data.datasets.coco INFO: Converting annotations of dataset 'visdrone_val' to COCO format ...)
[03/31 10:21:06] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 10:21:07] d2.data.datasets.coco INFO: Converting dataset dicts into COCO format
[03/31 10:21:09] d2.data.datasets.coco INFO: Conversion finished, #images: 548, #annotations: 38791
[03/31 10:21:09] d2.data.datasets.coco INFO: Caching COCO format annotations at './output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_val_coco_format.json' ...
[03/31 10:21:09] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 13:31:40] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:31:41] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:31:41] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:31:41] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/31 13:31:41] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:31:41] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:31:41] d2.utils.env INFO: Using a generated random seed 42353787
[03/31 13:31:44] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:31:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:31:44] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/31 13:31:44] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/31 13:31:44] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 13:31:44] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |[0m
[03/31 13:31:44] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[03/31 13:31:44] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 13:31:44] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 13:31:44] FCT.evaluation.visdrone_evaluation INFO: 'visdrone_val' is not registered by `register_coco_instances`. Therefore trying to convert it to COCO format ...
[03/31 13:31:44] d2.data.datasets.coco WARNING: Using previously cached COCO format annotations at './output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_val_coco_format.json'. You need to clear the cache file if your dataset has been modified.
[03/31 13:31:44] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 13:32:17] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:32:18] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:32:18] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:32:18] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/31 13:32:18] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:32:18] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:32:18] d2.utils.env INFO: Using a generated random seed 19384939
[03/31 13:32:21] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:32:21] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/31 13:32:21] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/31 13:32:21] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[03/31 13:32:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/31 13:32:21] d2.data.build INFO: Using training sampler TrainingSampler
[03/31 13:32:21] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/31 13:32:21] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/31 13:32:21] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/31 13:32:21] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:32:21] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[03/31 13:32:21] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[03/31 13:32:21] d2.engine.train_loop INFO: Starting training from iteration 0
[03/31 13:32:22] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 173, in forward
    x = x + self.drop_path(self.mlp(self.norm2(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 52, in forward
    x = self.fc1(x)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1848, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: CUDA out of memory. Tried to allocate 192.00 MiB (GPU 0; 23.70 GiB total capacity; 1.05 GiB already allocated; 59.81 MiB free; 1.07 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/31 13:32:22] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/31 13:32:22] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1072M
[03/31 13:34:33] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:34:33] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:34:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:34:33] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[03/31 13:34:33] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:34:33] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:34:33] d2.utils.env INFO: Using a generated random seed 34575164
[03/31 13:34:36] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:34:36] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/31 13:34:36] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/31 13:34:36] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[03/31 13:34:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[03/31 13:34:36] d2.data.build INFO: Using training sampler TrainingSampler
[03/31 13:34:36] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/31 13:34:36] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/31 13:34:36] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/31 13:34:36] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:34:36] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[03/31 13:34:36] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[03/31 13:34:36] d2.engine.train_loop INFO: Starting training from iteration 0
[03/31 13:34:37] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 173, in forward
    x = x + self.drop_path(self.mlp(self.norm2(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 56, in forward
    x = self.act(x)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/activation.py", line 652, in forward
    return F.gelu(input)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1556, in gelu
    return torch._C._nn.gelu(input)
RuntimeError: CUDA out of memory. Tried to allocate 246.00 MiB (GPU 0; 23.70 GiB total capacity; 869.03 MiB already allocated; 267.12 MiB free; 902.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/31 13:34:37] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/31 13:34:37] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 869M
[03/31 13:37:34] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:37:34] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:37:34] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:37:34] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m

[03/31 13:37:34] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:37:34] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:37:34] d2.utils.env INFO: Using a generated random seed 35600759
[03/31 13:37:37] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:37:37] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/31 13:37:37] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/31 13:37:37] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[03/31 13:37:37] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[03/31 13:37:37] d2.data.build INFO: Using training sampler TrainingSampler
[03/31 13:37:37] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/31 13:37:37] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/31 13:37:37] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/31 13:37:37] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:37:37] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[03/31 13:37:37] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[03/31 13:37:37] d2.engine.train_loop INFO: Starting training from iteration 0
[03/31 13:37:38] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 163, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 214, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 189, in _shared_roi_transform
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 172, in forward
    x = x + self.drop_path(self.attn(self.norm1(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 127, in forward
    attn = (q @ k.transpose(-2, -1)) * self.scale
RuntimeError: CUDA out of memory. Tried to allocate 48.00 MiB (GPU 0; 23.70 GiB total capacity; 1.06 GiB already allocated; 56.44 MiB free; 1.11 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/31 13:37:38] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/31 13:37:38] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1081M
[03/31 13:39:12] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:39:12] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:39:12] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:39:12] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(750,[39m[38;5;141m [39m[38;5;141m999)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m

[03/31 13:39:12] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m750[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m999[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:39:12] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:39:12] d2.utils.env INFO: Using a generated random seed 13785149
[03/31 13:39:15] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:39:15] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/31 13:39:15] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/31 13:39:15] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[03/31 13:39:15] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[03/31 13:39:15] d2.data.build INFO: Using training sampler TrainingSampler
[03/31 13:39:15] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/31 13:39:15] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/31 13:39:15] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:39:15] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[03/31 13:39:15] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[03/31 13:39:15] d2.engine.train_loop INFO: Starting training from iteration 0
[03/31 13:39:16] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 163, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 214, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 189, in _shared_roi_transform
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 172, in forward
    x = x + self.drop_path(self.attn(self.norm1(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 124, in forward
    kv = self.kv(x_).reshape(B, -1, 2, self.num_heads, C // self.num_heads).permute(2, 0, 3, 1, 4)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1848, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: CUDA out of memory. Tried to allocate 162.00 MiB (GPU 0; 23.70 GiB total capacity; 1.03 GiB already allocated; 51.62 MiB free; 1.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[03/31 13:39:16] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/31 13:39:16] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1056M
[03/31 13:41:36] detectron2 INFO: Rank of current process: 0. World size: 1
[03/31 13:41:36] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/31 13:41:36] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/31 13:41:36] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(750,[39m[38;5;141m [39m[38;5;141m999)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m

[03/31 13:41:36] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m750[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m999[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/31 13:41:36] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[03/31 13:41:36] d2.utils.env INFO: Using a generated random seed 37547075
[03/31 13:41:39] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[03/31 13:41:39] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[03/31 13:41:39] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[03/31 13:41:39] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[03/31 13:41:39] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[03/31 13:41:39] d2.data.build INFO: Using training sampler TrainingSampler
[03/31 13:41:39] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[03/31 13:41:39] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[03/31 13:41:39] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[03/31 13:41:39] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[03/31 13:41:39] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[03/31 13:41:39] d2.engine.train_loop INFO: Starting training from iteration 0
[03/31 13:41:47] d2.utils.events INFO:  eta: 0:24:19  iter: 19  total_loss: 5.405  loss_cls: 4.313  loss_box_reg: 0.01162  loss_rpn_cls: 0.6939  loss_rpn_loc: 0.3743  time: 0.3495  data_time: 0.0161  lr: 2.342e-07  max_mem: 7553M
[03/31 13:41:54] d2.utils.events INFO:  eta: 0:24:12  iter: 39  total_loss: 5.396  loss_cls: 4.282  loss_box_reg: 0.004176  loss_rpn_cls: 0.6937  loss_rpn_loc: 0.3914  time: 0.3490  data_time: 0.0016  lr: 2.702e-07  max_mem: 7756M
[03/31 13:42:01] d2.utils.events INFO:  eta: 0:24:07  iter: 59  total_loss: 5.231  loss_cls: 4.266  loss_box_reg: 0.001784  loss_rpn_cls: 0.6938  loss_rpn_loc: 0.2455  time: 0.3416  data_time: 0.0018  lr: 3.062e-07  max_mem: 7756M
[03/31 13:42:08] d2.utils.events INFO:  eta: 0:23:52  iter: 79  total_loss: 5.196  loss_cls: 4.244  loss_box_reg: 0.0043  loss_rpn_cls: 0.6935  loss_rpn_loc: 0.2834  time: 0.3354  data_time: 0.0015  lr: 3.422e-07  max_mem: 7897M
[03/31 13:42:14] d2.utils.events INFO:  eta: 0:23:31  iter: 99  total_loss: 5.187  loss_cls: 4.175  loss_box_reg: 0.005728  loss_rpn_cls: 0.6933  loss_rpn_loc: 0.309  time: 0.3299  data_time: 0.0016  lr: 3.782e-07  max_mem: 7897M
[03/31 13:42:20] d2.utils.events INFO:  eta: 0:23:35  iter: 119  total_loss: 5.253  loss_cls: 4.164  loss_box_reg: 0.00743  loss_rpn_cls: 0.6931  loss_rpn_loc: 0.326  time: 0.3265  data_time: 0.0016  lr: 4.142e-07  max_mem: 7897M
[03/31 13:42:27] d2.utils.events INFO:  eta: 0:23:30  iter: 139  total_loss: 5.138  loss_cls: 4.148  loss_box_reg: 0.003091  loss_rpn_cls: 0.6929  loss_rpn_loc: 0.3174  time: 0.3257  data_time: 0.0016  lr: 4.502e-07  max_mem: 7897M
[03/31 13:42:33] d2.utils.events INFO:  eta: 0:23:40  iter: 159  total_loss: 5.202  loss_cls: 4.116  loss_box_reg: 0.007067  loss_rpn_cls: 0.6927  loss_rpn_loc: 0.3698  time: 0.3272  data_time: 0.0017  lr: 4.862e-07  max_mem: 7905M
[03/31 13:42:41] d2.utils.events INFO:  eta: 0:23:43  iter: 179  total_loss: 5.103  loss_cls: 4.057  loss_box_reg: 0.006333  loss_rpn_cls: 0.6927  loss_rpn_loc: 0.3445  time: 0.3320  data_time: 0.0018  lr: 5.222e-07  max_mem: 7905M
[03/31 13:42:48] d2.utils.events INFO:  eta: 0:23:41  iter: 199  total_loss: 4.964  loss_cls: 3.978  loss_box_reg: 0.004543  loss_rpn_cls: 0.6923  loss_rpn_loc: 0.275  time: 0.3348  data_time: 0.0017  lr: 5.582e-07  max_mem: 7905M
[03/31 13:42:55] d2.utils.events INFO:  eta: 0:23:34  iter: 219  total_loss: 4.988  loss_cls: 3.942  loss_box_reg: 0.0052  loss_rpn_cls: 0.6925  loss_rpn_loc: 0.3846  time: 0.3350  data_time: 0.0016  lr: 5.942e-07  max_mem: 7905M
[03/31 13:43:02] d2.utils.events INFO:  eta: 0:23:32  iter: 239  total_loss: 4.916  loss_cls: 3.858  loss_box_reg: 0.01365  loss_rpn_cls: 0.692  loss_rpn_loc: 0.3178  time: 0.3368  data_time: 0.0020  lr: 6.302e-07  max_mem: 7975M
[03/31 13:43:09] d2.utils.events INFO:  eta: 0:23:24  iter: 259  total_loss: 4.784  loss_cls: 3.807  loss_box_reg: 0.006493  loss_rpn_cls: 0.6917  loss_rpn_loc: 0.282  time: 0.3361  data_time: 0.0015  lr: 6.662e-07  max_mem: 7975M
[03/31 13:43:16] d2.utils.events INFO:  eta: 0:23:25  iter: 279  total_loss: 4.705  loss_cls: 3.753  loss_box_reg: 0.004979  loss_rpn_cls: 0.6913  loss_rpn_loc: 0.2558  time: 0.3365  data_time: 0.0017  lr: 7.022e-07  max_mem: 8111M
[03/31 13:43:22] d2.utils.events INFO:  eta: 0:23:22  iter: 299  total_loss: 4.671  loss_cls: 3.629  loss_box_reg: 0.003669  loss_rpn_cls: 0.6911  loss_rpn_loc: 0.3571  time: 0.3356  data_time: 0.0016  lr: 7.382e-07  max_mem: 8111M
[03/31 13:43:29] d2.utils.events INFO:  eta: 0:23:22  iter: 319  total_loss: 4.528  loss_cls: 3.538  loss_box_reg: 0.008433  loss_rpn_cls: 0.6908  loss_rpn_loc: 0.303  time: 0.3368  data_time: 0.0017  lr: 7.742e-07  max_mem: 8111M
[03/31 13:43:36] d2.utils.events INFO:  eta: 0:23:16  iter: 339  total_loss: 4.509  loss_cls: 3.407  loss_box_reg: 0.004135  loss_rpn_cls: 0.6903  loss_rpn_loc: 0.3808  time: 0.3362  data_time: 0.0015  lr: 8.102e-07  max_mem: 8111M
[03/31 13:43:42] d2.utils.events INFO:  eta: 0:23:10  iter: 359  total_loss: 4.312  loss_cls: 3.252  loss_box_reg: 0.009857  loss_rpn_cls: 0.6902  loss_rpn_loc: 0.3747  time: 0.3351  data_time: 0.0015  lr: 8.462e-07  max_mem: 8111M
[03/31 13:43:48] d2.utils.events INFO:  eta: 0:23:02  iter: 379  total_loss: 4.155  loss_cls: 3.122  loss_box_reg: 0.01332  loss_rpn_cls: 0.6898  loss_rpn_loc: 0.3356  time: 0.3337  data_time: 0.0016  lr: 8.822e-07  max_mem: 8111M
[03/31 13:43:55] d2.utils.events INFO:  eta: 0:23:04  iter: 399  total_loss: 3.866  loss_cls: 2.848  loss_box_reg: 0.003427  loss_rpn_cls: 0.6896  loss_rpn_loc: 0.2646  time: 0.3339  data_time: 0.0016  lr: 9.182e-07  max_mem: 8111M
[03/31 13:44:02] d2.utils.events INFO:  eta: 0:23:01  iter: 419  total_loss: 3.779  loss_cls: 2.685  loss_box_reg: 0.008158  loss_rpn_cls: 0.6891  loss_rpn_loc: 0.3673  time: 0.3352  data_time: 0.0017  lr: 9.542e-07  max_mem: 8127M
[03/31 13:44:10] d2.utils.events INFO:  eta: 0:22:58  iter: 439  total_loss: 3.426  loss_cls: 2.469  loss_box_reg: 0.003613  loss_rpn_cls: 0.6887  loss_rpn_loc: 0.2632  time: 0.3362  data_time: 0.0017  lr: 9.902e-07  max_mem: 8127M
[03/31 13:44:16] d2.utils.events INFO:  eta: 0:22:52  iter: 459  total_loss: 3.22  loss_cls: 2.198  loss_box_reg: 0.003511  loss_rpn_cls: 0.6885  loss_rpn_loc: 0.3442  time: 0.3358  data_time: 0.0015  lr: 1.0262e-06  max_mem: 8227M
[03/31 13:44:23] d2.utils.events INFO:  eta: 0:22:46  iter: 479  total_loss: 2.923  loss_cls: 1.873  loss_box_reg: 0.007952  loss_rpn_cls: 0.6881  loss_rpn_loc: 0.3202  time: 0.3358  data_time: 0.0016  lr: 1.0622e-06  max_mem: 8227M
[03/31 13:44:30] d2.utils.events INFO:  eta: 0:22:47  iter: 499  total_loss: 2.805  loss_cls: 1.69  loss_box_reg: 0.007723  loss_rpn_cls: 0.6875  loss_rpn_loc: 0.3874  time: 0.3372  data_time: 0.0016  lr: 1.0982e-06  max_mem: 8227M
[03/31 13:44:38] d2.utils.events INFO:  eta: 0:22:41  iter: 519  total_loss: 2.362  loss_cls: 1.399  loss_box_reg: 0.004484  loss_rpn_cls: 0.6876  loss_rpn_loc: 0.3075  time: 0.3379  data_time: 0.0016  lr: 1.1342e-06  max_mem: 8227M
[03/31 13:44:45] d2.utils.events INFO:  eta: 0:22:35  iter: 539  total_loss: 2.319  loss_cls: 1.297  loss_box_reg: 0.006874  loss_rpn_cls: 0.6868  loss_rpn_loc: 0.3414  time: 0.3384  data_time: 0.0015  lr: 1.1702e-06  max_mem: 8227M
[03/31 13:44:52] d2.utils.events INFO:  eta: 0:22:32  iter: 559  total_loss: 2.003  loss_cls: 1.041  loss_box_reg: 0.005954  loss_rpn_cls: 0.6869  loss_rpn_loc: 0.3027  time: 0.3392  data_time: 0.0018  lr: 1.2062e-06  max_mem: 8227M
[03/31 13:44:58] d2.utils.events INFO:  eta: 0:22:32  iter: 579  total_loss: 1.839  loss_cls: 0.8673  loss_box_reg: 0.01094  loss_rpn_cls: 0.6859  loss_rpn_loc: 0.3189  time: 0.3382  data_time: 0.0018  lr: 1.2422e-06  max_mem: 8227M
[03/31 13:45:05] d2.utils.events INFO:  eta: 0:22:26  iter: 599  total_loss: 1.806  loss_cls: 0.7668  loss_box_reg: 0.01512  loss_rpn_cls: 0.6852  loss_rpn_loc: 0.3129  time: 0.3378  data_time: 0.0016  lr: 1.2782e-06  max_mem: 8227M
[03/31 13:45:13] d2.utils.events INFO:  eta: 0:22:27  iter: 619  total_loss: 1.775  loss_cls: 0.7073  loss_box_reg: 0.006707  loss_rpn_cls: 0.6848  loss_rpn_loc: 0.3505  time: 0.3395  data_time: 0.0016  lr: 1.3142e-06  max_mem: 8227M
[03/31 13:45:19] d2.utils.events INFO:  eta: 0:22:18  iter: 639  total_loss: 1.546  loss_cls: 0.6615  loss_box_reg: 0.01474  loss_rpn_cls: 0.6842  loss_rpn_loc: 0.2549  time: 0.3390  data_time: 0.0017  lr: 1.3502e-06  max_mem: 8227M
[03/31 13:45:27] d2.utils.events INFO:  eta: 0:22:17  iter: 659  total_loss: 1.567  loss_cls: 0.5742  loss_box_reg: 0.004841  loss_rpn_cls: 0.6836  loss_rpn_loc: 0.2857  time: 0.3395  data_time: 0.0017  lr: 1.3862e-06  max_mem: 8227M
[03/31 13:45:34] d2.utils.events INFO:  eta: 0:22:13  iter: 679  total_loss: 1.558  loss_cls: 0.5374  loss_box_reg: 0.00767  loss_rpn_cls: 0.6833  loss_rpn_loc: 0.3269  time: 0.3397  data_time: 0.0016  lr: 1.4222e-06  max_mem: 8227M
[03/31 13:45:41] d2.utils.events INFO:  eta: 0:22:08  iter: 699  total_loss: 1.38  loss_cls: 0.3947  loss_box_reg: 0.004059  loss_rpn_cls: 0.6823  loss_rpn_loc: 0.2775  time: 0.3405  data_time: 0.0016  lr: 1.4582e-06  max_mem: 8227M
[03/31 13:45:48] d2.utils.events INFO:  eta: 0:22:01  iter: 719  total_loss: 1.547  loss_cls: 0.5188  loss_box_reg: 0.004496  loss_rpn_cls: 0.6814  loss_rpn_loc: 0.2781  time: 0.3410  data_time: 0.0017  lr: 1.4942e-06  max_mem: 8227M
[03/31 13:45:55] d2.utils.events INFO:  eta: 0:21:55  iter: 739  total_loss: 1.539  loss_cls: 0.4753  loss_box_reg: 0.01833  loss_rpn_cls: 0.6802  loss_rpn_loc: 0.3434  time: 0.3410  data_time: 0.0017  lr: 1.5302e-06  max_mem: 8227M
[03/31 13:46:03] d2.utils.events INFO:  eta: 0:21:50  iter: 759  total_loss: 1.446  loss_cls: 0.4326  loss_box_reg: 0.004024  loss_rpn_cls: 0.6792  loss_rpn_loc: 0.2821  time: 0.3419  data_time: 0.0016  lr: 1.5662e-06  max_mem: 8227M
[03/31 13:46:10] d2.utils.events INFO:  eta: 0:21:45  iter: 779  total_loss: 1.421  loss_cls: 0.3833  loss_box_reg: 0.01293  loss_rpn_cls: 0.6772  loss_rpn_loc: 0.3153  time: 0.3423  data_time: 0.0014  lr: 1.6022e-06  max_mem: 8292M
[03/31 13:46:16] d2.utils.events INFO:  eta: 0:21:37  iter: 799  total_loss: 1.244  loss_cls: 0.3122  loss_box_reg: 0.002603  loss_rpn_cls: 0.6763  loss_rpn_loc: 0.2607  time: 0.3419  data_time: 0.0015  lr: 1.6382e-06  max_mem: 8292M
[03/31 13:46:24] d2.utils.events INFO:  eta: 0:21:34  iter: 819  total_loss: 1.528  loss_cls: 0.463  loss_box_reg: 0.0283  loss_rpn_cls: 0.6759  loss_rpn_loc: 0.3664  time: 0.3427  data_time: 0.0015  lr: 1.6742e-06  max_mem: 8292M
[03/31 13:46:31] d2.utils.events INFO:  eta: 0:21:25  iter: 839  total_loss: 1.375  loss_cls: 0.3468  loss_box_reg: 0.004365  loss_rpn_cls: 0.6743  loss_rpn_loc: 0.3283  time: 0.3428  data_time: 0.0017  lr: 1.7102e-06  max_mem: 8292M
[03/31 13:46:38] d2.utils.events INFO:  eta: 0:21:18  iter: 859  total_loss: 1.255  loss_cls: 0.2984  loss_box_reg: 0.007462  loss_rpn_cls: 0.6732  loss_rpn_loc: 0.2694  time: 0.3428  data_time: 0.0016  lr: 1.7462e-06  max_mem: 8292M
[03/31 13:46:45] d2.utils.events INFO:  eta: 0:21:12  iter: 879  total_loss: 1.335  loss_cls: 0.3596  loss_box_reg: 0.01046  loss_rpn_cls: 0.6709  loss_rpn_loc: 0.2756  time: 0.3428  data_time: 0.0015  lr: 1.7822e-06  max_mem: 8292M
[03/31 13:46:52] d2.utils.events INFO:  eta: 0:21:07  iter: 899  total_loss: 1.35  loss_cls: 0.3645  loss_box_reg: 0.01244  loss_rpn_cls: 0.669  loss_rpn_loc: 0.3083  time: 0.3435  data_time: 0.0015  lr: 1.8182e-06  max_mem: 8292M
[03/31 13:46:59] d2.utils.events INFO:  eta: 0:21:03  iter: 919  total_loss: 1.316  loss_cls: 0.3532  loss_box_reg: 0.0107  loss_rpn_cls: 0.6661  loss_rpn_loc: 0.294  time: 0.3435  data_time: 0.0015  lr: 1.8542e-06  max_mem: 8292M
[03/31 13:47:07] d2.utils.events INFO:  eta: 0:20:57  iter: 939  total_loss: 1.284  loss_cls: 0.2852  loss_box_reg: 0.008031  loss_rpn_cls: 0.6654  loss_rpn_loc: 0.2973  time: 0.3444  data_time: 0.0016  lr: 1.8902e-06  max_mem: 8292M
[03/31 13:47:14] d2.utils.events INFO:  eta: 0:20:51  iter: 959  total_loss: 1.317  loss_cls: 0.3589  loss_box_reg: 0.005885  loss_rpn_cls: 0.6633  loss_rpn_loc: 0.292  time: 0.3445  data_time: 0.0015  lr: 1.9262e-06  max_mem: 8292M
[03/31 13:47:22] d2.utils.events INFO:  eta: 0:20:47  iter: 979  total_loss: 1.353  loss_cls: 0.3945  loss_box_reg: 0.007576  loss_rpn_cls: 0.6585  loss_rpn_loc: 0.2897  time: 0.3453  data_time: 0.0015  lr: 1.9622e-06  max_mem: 8292M
[03/31 13:47:29] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0000999.pth
[03/31 13:47:30] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 13:47:30] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |
[03/31 13:47:30] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[03/31 13:47:30] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 13:47:30] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 13:47:30] FCT.evaluation.visdrone_evaluation INFO: 'visdrone_val' is not registered by `register_coco_instances`. Therefore trying to convert it to COCO format ...
[03/31 13:47:30] d2.data.datasets.coco WARNING: Using previously cached COCO format annotations at './output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_val_coco_format.json'. You need to clear the cache file if your dataset has been modified.
[03/31 13:47:30] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 13:47:31] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0005 s/iter. Inference: 0.1049 s/iter. Eval: 0.0001 s/iter. Total: 0.1055 s/iter. ETA=0:00:56
[03/31 13:47:36] d2.evaluation.evaluator INFO: Inference done 59/548. Dataloading: 0.0007 s/iter. Inference: 0.1048 s/iter. Eval: 0.0000 s/iter. Total: 0.1056 s/iter. ETA=0:00:51
[03/31 13:47:42] d2.evaluation.evaluator INFO: Inference done 107/548. Dataloading: 0.0008 s/iter. Inference: 0.1049 s/iter. Eval: 0.0001 s/iter. Total: 0.1057 s/iter. ETA=0:00:46
[03/31 13:47:47] d2.evaluation.evaluator INFO: Inference done 155/548. Dataloading: 0.0007 s/iter. Inference: 0.1049 s/iter. Eval: 0.0001 s/iter. Total: 0.1058 s/iter. ETA=0:00:41
[03/31 13:47:52] d2.evaluation.evaluator INFO: Inference done 203/548. Dataloading: 0.0007 s/iter. Inference: 0.1050 s/iter. Eval: 0.0001 s/iter. Total: 0.1058 s/iter. ETA=0:00:36
[03/31 13:47:57] d2.evaluation.evaluator INFO: Inference done 251/548. Dataloading: 0.0007 s/iter. Inference: 0.1051 s/iter. Eval: 0.0001 s/iter. Total: 0.1059 s/iter. ETA=0:00:31
[03/31 13:48:02] d2.evaluation.evaluator INFO: Inference done 299/548. Dataloading: 0.0007 s/iter. Inference: 0.1051 s/iter. Eval: 0.0001 s/iter. Total: 0.1059 s/iter. ETA=0:00:26
[03/31 13:48:07] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0007 s/iter. Inference: 0.1052 s/iter. Eval: 0.0001 s/iter. Total: 0.1060 s/iter. ETA=0:00:21
[03/31 13:48:12] d2.evaluation.evaluator INFO: Inference done 395/548. Dataloading: 0.0007 s/iter. Inference: 0.1052 s/iter. Eval: 0.0001 s/iter. Total: 0.1060 s/iter. ETA=0:00:16
[03/31 13:48:17] d2.evaluation.evaluator INFO: Inference done 443/548. Dataloading: 0.0007 s/iter. Inference: 0.1052 s/iter. Eval: 0.0001 s/iter. Total: 0.1060 s/iter. ETA=0:00:11
[03/31 13:48:22] d2.evaluation.evaluator INFO: Inference done 491/548. Dataloading: 0.0007 s/iter. Inference: 0.1052 s/iter. Eval: 0.0001 s/iter. Total: 0.1060 s/iter. ETA=0:00:06
[03/31 13:48:27] d2.evaluation.evaluator INFO: Inference done 539/548. Dataloading: 0.0007 s/iter. Inference: 0.1052 s/iter. Eval: 0.0001 s/iter. Total: 0.1060 s/iter. ETA=0:00:00
[03/31 13:48:28] d2.evaluation.evaluator INFO: Total inference time: 0:00:57.666118 (0.106199 s / iter per device, on 1 devices)
[03/31 13:48:28] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:57 (0.105162 s / iter per device, on 1 devices)
[03/31 13:48:28] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[03/31 13:48:28] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[03/31 13:48:28] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[03/31 13:48:28] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/31 13:48:29] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.22 seconds.
[03/31 13:48:29] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/31 13:48:29] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.03 seconds.
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.001 | 0.003  | 0.000  | 0.000 | 0.001 | 0.000 |
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[03/31 13:48:29] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.010 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[03/31 13:48:29] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[03/31 13:48:29] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/31 13:48:29] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[03/31 13:48:29] d2.evaluation.testing INFO: copypaste: 0.0009,0.0035,0.0000,0.0000,0.0011,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[03/31 13:48:29] d2.utils.events INFO:  eta: 0:20:41  iter: 999  total_loss: 1.28  loss_cls: 0.3167  loss_box_reg: 0.008054  loss_rpn_cls: 0.656  loss_rpn_loc: 0.2681  time: 0.3451  data_time: 0.0016  lr: 1.9982e-06  max_mem: 8292M
[03/31 13:48:36] d2.utils.events INFO:  eta: 0:20:39  iter: 1019  total_loss: 1.336  loss_cls: 0.3585  loss_box_reg: 0.003326  loss_rpn_cls: 0.6527  loss_rpn_loc: 0.3016  time: 0.3459  data_time: 0.0017  lr: 2e-06  max_mem: 8292M
[03/31 13:48:43] d2.utils.events INFO:  eta: 0:20:32  iter: 1039  total_loss: 1.191  loss_cls: 0.2645  loss_box_reg: 0.01447  loss_rpn_cls: 0.6486  loss_rpn_loc: 0.2531  time: 0.3459  data_time: 0.0017  lr: 2e-06  max_mem: 8292M
[03/31 13:48:51] d2.utils.events INFO:  eta: 0:20:30  iter: 1059  total_loss: 1.32  loss_cls: 0.358  loss_box_reg: 0.01219  loss_rpn_cls: 0.6437  loss_rpn_loc: 0.2855  time: 0.3463  data_time: 0.0018  lr: 2e-06  max_mem: 8292M
[03/31 13:48:58] d2.utils.events INFO:  eta: 0:20:32  iter: 1079  total_loss: 1.301  loss_cls: 0.3487  loss_box_reg: 0.01836  loss_rpn_cls: 0.6372  loss_rpn_loc: 0.2879  time: 0.3463  data_time: 0.0016  lr: 2e-06  max_mem: 8292M
[03/31 13:49:05] d2.utils.events INFO:  eta: 0:20:29  iter: 1099  total_loss: 1.245  loss_cls: 0.3189  loss_box_reg: 0.01011  loss_rpn_cls: 0.6266  loss_rpn_loc: 0.2611  time: 0.3464  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:49:12] d2.utils.events INFO:  eta: 0:20:24  iter: 1119  total_loss: 1.197  loss_cls: 0.3118  loss_box_reg: 0.01143  loss_rpn_cls: 0.6178  loss_rpn_loc: 0.2398  time: 0.3468  data_time: 0.0017  lr: 2e-06  max_mem: 8292M
[03/31 13:49:19] d2.utils.events INFO:  eta: 0:20:21  iter: 1139  total_loss: 1.284  loss_cls: 0.3465  loss_box_reg: 0.02373  loss_rpn_cls: 0.6056  loss_rpn_loc: 0.233  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:49:25] d2.utils.events INFO:  eta: 0:20:13  iter: 1159  total_loss: 1.038  loss_cls: 0.2403  loss_box_reg: 0.004816  loss_rpn_cls: 0.5902  loss_rpn_loc: 0.2032  time: 0.3459  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:49:33] d2.utils.events INFO:  eta: 0:20:04  iter: 1179  total_loss: 1.117  loss_cls: 0.3256  loss_box_reg: 0.01279  loss_rpn_cls: 0.5679  loss_rpn_loc: 0.2203  time: 0.3463  data_time: 0.0016  lr: 2e-06  max_mem: 8292M
[03/31 13:49:39] d2.utils.events INFO:  eta: 0:19:58  iter: 1199  total_loss: 1.071  loss_cls: 0.3148  loss_box_reg: 0.02293  loss_rpn_cls: 0.5539  loss_rpn_loc: 0.1838  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:49:47] d2.utils.events INFO:  eta: 0:19:53  iter: 1219  total_loss: 1.016  loss_cls: 0.2866  loss_box_reg: 0.0126  loss_rpn_cls: 0.5144  loss_rpn_loc: 0.2084  time: 0.3463  data_time: 0.0016  lr: 2e-06  max_mem: 8292M
[03/31 13:49:53] d2.utils.events INFO:  eta: 0:19:43  iter: 1239  total_loss: 1.044  loss_cls: 0.3484  loss_box_reg: 0.02839  loss_rpn_cls: 0.4863  loss_rpn_loc: 0.2018  time: 0.3457  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:50:00] d2.utils.events INFO:  eta: 0:19:39  iter: 1259  total_loss: 0.9174  loss_cls: 0.307  loss_box_reg: 0.01422  loss_rpn_cls: 0.4423  loss_rpn_loc: 0.1694  time: 0.3456  data_time: 0.0016  lr: 2e-06  max_mem: 8292M
[03/31 13:50:07] d2.utils.events INFO:  eta: 0:19:31  iter: 1279  total_loss: 0.8326  loss_cls: 0.272  loss_box_reg: 0.01345  loss_rpn_cls: 0.4013  loss_rpn_loc: 0.1337  time: 0.3456  data_time: 0.0015  lr: 2e-06  max_mem: 8292M
[03/31 13:50:14] d2.utils.events INFO:  eta: 0:19:28  iter: 1299  total_loss: 0.8213  loss_cls: 0.2952  loss_box_reg: 0.02164  loss_rpn_cls: 0.3798  loss_rpn_loc: 0.1509  time: 0.3457  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:50:21] d2.utils.events INFO:  eta: 0:19:24  iter: 1319  total_loss: 0.8809  loss_cls: 0.3275  loss_box_reg: 0.01423  loss_rpn_cls: 0.354  loss_rpn_loc: 0.1779  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:50:29] d2.utils.events INFO:  eta: 0:19:24  iter: 1339  total_loss: 0.6363  loss_cls: 0.1924  loss_box_reg: 0.009269  loss_rpn_cls: 0.3151  loss_rpn_loc: 0.1035  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:50:36] d2.utils.events INFO:  eta: 0:19:18  iter: 1359  total_loss: 0.8187  loss_cls: 0.3065  loss_box_reg: 0.01437  loss_rpn_cls: 0.3248  loss_rpn_loc: 0.1753  time: 0.3467  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:50:43] d2.utils.events INFO:  eta: 0:19:13  iter: 1379  total_loss: 0.7372  loss_cls: 0.2894  loss_box_reg: 0.007372  loss_rpn_cls: 0.3057  loss_rpn_loc: 0.122  time: 0.3470  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:50:51] d2.utils.events INFO:  eta: 0:19:08  iter: 1399  total_loss: 0.7388  loss_cls: 0.2728  loss_box_reg: 0.00935  loss_rpn_cls: 0.2869  loss_rpn_loc: 0.16  time: 0.3473  data_time: 0.0018  lr: 2e-06  max_mem: 8457M
[03/31 13:50:58] d2.utils.events INFO:  eta: 0:19:01  iter: 1419  total_loss: 0.7559  loss_cls: 0.2816  loss_box_reg: 0.01172  loss_rpn_cls: 0.2712  loss_rpn_loc: 0.1599  time: 0.3472  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:51:06] d2.utils.events INFO:  eta: 0:18:55  iter: 1439  total_loss: 0.7074  loss_cls: 0.2746  loss_box_reg: 0.01775  loss_rpn_cls: 0.2654  loss_rpn_loc: 0.1485  time: 0.3477  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:51:13] d2.utils.events INFO:  eta: 0:18:50  iter: 1459  total_loss: 0.705  loss_cls: 0.2852  loss_box_reg: 0.01578  loss_rpn_cls: 0.2584  loss_rpn_loc: 0.1528  time: 0.3481  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:51:20] d2.utils.events INFO:  eta: 0:18:44  iter: 1479  total_loss: 0.6695  loss_cls: 0.2352  loss_box_reg: 0.0116  loss_rpn_cls: 0.2546  loss_rpn_loc: 0.1492  time: 0.3479  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:51:26] d2.utils.events INFO:  eta: 0:18:34  iter: 1499  total_loss: 0.7253  loss_cls: 0.3031  loss_box_reg: 0.02558  loss_rpn_cls: 0.2562  loss_rpn_loc: 0.1514  time: 0.3474  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:51:33] d2.utils.events INFO:  eta: 0:18:27  iter: 1519  total_loss: 0.7069  loss_cls: 0.3011  loss_box_reg: 0.01785  loss_rpn_cls: 0.2381  loss_rpn_loc: 0.1469  time: 0.3473  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:51:41] d2.utils.events INFO:  eta: 0:18:21  iter: 1539  total_loss: 0.6586  loss_cls: 0.2577  loss_box_reg: 0.01614  loss_rpn_cls: 0.2359  loss_rpn_loc: 0.147  time: 0.3479  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:51:49] d2.utils.events INFO:  eta: 0:18:14  iter: 1559  total_loss: 0.5417  loss_cls: 0.2067  loss_box_reg: 0.01574  loss_rpn_cls: 0.2133  loss_rpn_loc: 0.1048  time: 0.3483  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:51:55] d2.utils.events INFO:  eta: 0:18:07  iter: 1579  total_loss: 0.7833  loss_cls: 0.3328  loss_box_reg: 0.02132  loss_rpn_cls: 0.2306  loss_rpn_loc: 0.1376  time: 0.3481  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:52:02] d2.utils.events INFO:  eta: 0:18:02  iter: 1599  total_loss: 0.5848  loss_cls: 0.2351  loss_box_reg: 0.02323  loss_rpn_cls: 0.2211  loss_rpn_loc: 0.1026  time: 0.3480  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:52:09] d2.utils.events INFO:  eta: 0:17:55  iter: 1619  total_loss: 0.7224  loss_cls: 0.3112  loss_box_reg: 0.01891  loss_rpn_cls: 0.2307  loss_rpn_loc: 0.1447  time: 0.3480  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:52:17] d2.utils.events INFO:  eta: 0:17:50  iter: 1639  total_loss: 0.6504  loss_cls: 0.2496  loss_box_reg: 0.02166  loss_rpn_cls: 0.2265  loss_rpn_loc: 0.1552  time: 0.3481  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:52:23] d2.utils.events INFO:  eta: 0:17:41  iter: 1659  total_loss: 0.5765  loss_cls: 0.2323  loss_box_reg: 0.01619  loss_rpn_cls: 0.231  loss_rpn_loc: 0.121  time: 0.3479  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:52:31] d2.utils.events INFO:  eta: 0:17:35  iter: 1679  total_loss: 0.613  loss_cls: 0.2424  loss_box_reg: 0.02247  loss_rpn_cls: 0.208  loss_rpn_loc: 0.1204  time: 0.3481  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:52:38] d2.utils.events INFO:  eta: 0:17:25  iter: 1699  total_loss: 0.6241  loss_cls: 0.2639  loss_box_reg: 0.01914  loss_rpn_cls: 0.2187  loss_rpn_loc: 0.1478  time: 0.3480  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:52:44] d2.utils.events INFO:  eta: 0:17:18  iter: 1719  total_loss: 0.5943  loss_cls: 0.2398  loss_box_reg: 0.01619  loss_rpn_cls: 0.2034  loss_rpn_loc: 0.128  time: 0.3478  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:52:52] d2.utils.events INFO:  eta: 0:17:14  iter: 1739  total_loss: 0.6972  loss_cls: 0.299  loss_box_reg: 0.01899  loss_rpn_cls: 0.205  loss_rpn_loc: 0.1349  time: 0.3480  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:52:59] d2.utils.events INFO:  eta: 0:17:08  iter: 1759  total_loss: 0.6098  loss_cls: 0.2472  loss_box_reg: 0.01423  loss_rpn_cls: 0.2125  loss_rpn_loc: 0.1402  time: 0.3480  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:53:06] d2.utils.events INFO:  eta: 0:17:01  iter: 1779  total_loss: 0.5451  loss_cls: 0.2039  loss_box_reg: 0.01245  loss_rpn_cls: 0.2083  loss_rpn_loc: 0.1315  time: 0.3482  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:53:13] d2.utils.events INFO:  eta: 0:16:55  iter: 1799  total_loss: 0.7571  loss_cls: 0.3069  loss_box_reg: 0.02498  loss_rpn_cls: 0.2255  loss_rpn_loc: 0.1733  time: 0.3481  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:53:20] d2.utils.events INFO:  eta: 0:16:47  iter: 1819  total_loss: 0.5577  loss_cls: 0.236  loss_box_reg: 0.02001  loss_rpn_cls: 0.1966  loss_rpn_loc: 0.1145  time: 0.3482  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:53:27] d2.utils.events INFO:  eta: 0:16:42  iter: 1839  total_loss: 0.5515  loss_cls: 0.2119  loss_box_reg: 0.01181  loss_rpn_cls: 0.1911  loss_rpn_loc: 0.1088  time: 0.3482  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:53:34] d2.utils.events INFO:  eta: 0:16:36  iter: 1859  total_loss: 0.6542  loss_cls: 0.2817  loss_box_reg: 0.02173  loss_rpn_cls: 0.2021  loss_rpn_loc: 0.1466  time: 0.3482  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:53:41] d2.utils.events INFO:  eta: 0:16:30  iter: 1879  total_loss: 0.6604  loss_cls: 0.2831  loss_box_reg: 0.02031  loss_rpn_cls: 0.1942  loss_rpn_loc: 0.1306  time: 0.3482  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:53:49] d2.utils.events INFO:  eta: 0:16:23  iter: 1899  total_loss: 0.6141  loss_cls: 0.2398  loss_box_reg: 0.01896  loss_rpn_cls: 0.2043  loss_rpn_loc: 0.1244  time: 0.3485  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:53:55] d2.utils.events INFO:  eta: 0:16:14  iter: 1919  total_loss: 0.677  loss_cls: 0.2853  loss_box_reg: 0.02122  loss_rpn_cls: 0.2019  loss_rpn_loc: 0.1473  time: 0.3480  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:54:02] d2.utils.events INFO:  eta: 0:16:07  iter: 1939  total_loss: 0.6246  loss_cls: 0.2598  loss_box_reg: 0.01372  loss_rpn_cls: 0.1936  loss_rpn_loc: 0.131  time: 0.3481  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:54:09] d2.utils.events INFO:  eta: 0:16:01  iter: 1959  total_loss: 0.6395  loss_cls: 0.2474  loss_box_reg: 0.02441  loss_rpn_cls: 0.2049  loss_rpn_loc: 0.139  time: 0.3480  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:54:15] d2.utils.events INFO:  eta: 0:15:53  iter: 1979  total_loss: 0.5377  loss_cls: 0.199  loss_box_reg: 0.01259  loss_rpn_cls: 0.1954  loss_rpn_loc: 0.1226  time: 0.3478  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:54:22] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0001999.pth
[03/31 13:54:23] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 13:54:23] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[03/31 13:54:23] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 13:54:23] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 13:54:24] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 13:54:25] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0005 s/iter. Inference: 0.1049 s/iter. Eval: 0.0002 s/iter. Total: 0.1056 s/iter. ETA=0:00:56
[03/31 13:54:30] d2.evaluation.evaluator INFO: Inference done 58/548. Dataloading: 0.0007 s/iter. Inference: 0.1056 s/iter. Eval: 0.0002 s/iter. Total: 0.1066 s/iter. ETA=0:00:52
[03/31 13:54:35] d2.evaluation.evaluator INFO: Inference done 105/548. Dataloading: 0.0007 s/iter. Inference: 0.1057 s/iter. Eval: 0.0002 s/iter. Total: 0.1066 s/iter. ETA=0:00:47
[03/31 13:54:40] d2.evaluation.evaluator INFO: Inference done 151/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0013 s/iter. Total: 0.1078 s/iter. ETA=0:00:42
[03/31 13:54:45] d2.evaluation.evaluator INFO: Inference done 198/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0010 s/iter. Total: 0.1076 s/iter. ETA=0:00:37
[03/31 13:54:50] d2.evaluation.evaluator INFO: Inference done 245/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0009 s/iter. Total: 0.1074 s/iter. ETA=0:00:32
[03/31 13:54:55] d2.evaluation.evaluator INFO: Inference done 292/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0008 s/iter. Total: 0.1073 s/iter. ETA=0:00:27
[03/31 13:55:00] d2.evaluation.evaluator INFO: Inference done 339/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0007 s/iter. Total: 0.1073 s/iter. ETA=0:00:22
[03/31 13:55:05] d2.evaluation.evaluator INFO: Inference done 386/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0006 s/iter. Total: 0.1072 s/iter. ETA=0:00:17
[03/31 13:55:10] d2.evaluation.evaluator INFO: Inference done 433/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0006 s/iter. Total: 0.1071 s/iter. ETA=0:00:12
[03/31 13:55:15] d2.evaluation.evaluator INFO: Inference done 480/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0005 s/iter. Total: 0.1071 s/iter. ETA=0:00:07
[03/31 13:55:20] d2.evaluation.evaluator INFO: Inference done 527/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0005 s/iter. Total: 0.1071 s/iter. ETA=0:00:02
[03/31 13:55:23] d2.evaluation.evaluator INFO: Total inference time: 0:00:58.279464 (0.107329 s / iter per device, on 1 devices)
[03/31 13:55:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:57 (0.105828 s / iter per device, on 1 devices)
[03/31 13:55:23] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[03/31 13:55:23] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[03/31 13:55:23] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[03/31 13:55:23] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/31 13:55:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.51 seconds.
[03/31 13:55:24] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/31 13:55:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.000  | 0.000  | 0.000 | 0.000 | 0.000 |
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[03/31 13:55:24] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.001 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[03/31 13:55:24] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[03/31 13:55:24] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/31 13:55:24] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[03/31 13:55:24] d2.evaluation.testing INFO: copypaste: 0.0001,0.0003,0.0000,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[03/31 13:55:24] d2.utils.events INFO:  eta: 0:15:47  iter: 1999  total_loss: 0.5612  loss_cls: 0.211  loss_box_reg: 0.01538  loss_rpn_cls: 0.1929  loss_rpn_loc: 0.122  time: 0.3478  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 13:55:31] d2.utils.events INFO:  eta: 0:15:37  iter: 2019  total_loss: 0.6424  loss_cls: 0.2535  loss_box_reg: 0.01785  loss_rpn_cls: 0.1965  loss_rpn_loc: 0.1368  time: 0.3477  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:55:37] d2.utils.events INFO:  eta: 0:15:31  iter: 2039  total_loss: 0.5756  loss_cls: 0.261  loss_box_reg: 0.02007  loss_rpn_cls: 0.188  loss_rpn_loc: 0.1052  time: 0.3475  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:55:44] d2.utils.events INFO:  eta: 0:15:24  iter: 2059  total_loss: 0.5679  loss_cls: 0.2077  loss_box_reg: 0.009516  loss_rpn_cls: 0.1936  loss_rpn_loc: 0.1251  time: 0.3474  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:55:51] d2.utils.events INFO:  eta: 0:15:18  iter: 2079  total_loss: 0.5659  loss_cls: 0.2208  loss_box_reg: 0.01825  loss_rpn_cls: 0.1878  loss_rpn_loc: 0.1198  time: 0.3473  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:55:57] d2.utils.events INFO:  eta: 0:15:11  iter: 2099  total_loss: 0.5605  loss_cls: 0.2271  loss_box_reg: 0.01317  loss_rpn_cls: 0.1913  loss_rpn_loc: 0.1241  time: 0.3468  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:04] d2.utils.events INFO:  eta: 0:15:04  iter: 2119  total_loss: 0.6646  loss_cls: 0.2737  loss_box_reg: 0.02805  loss_rpn_cls: 0.1987  loss_rpn_loc: 0.1475  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:10] d2.utils.events INFO:  eta: 0:14:57  iter: 2139  total_loss: 0.6902  loss_cls: 0.2979  loss_box_reg: 0.01459  loss_rpn_cls: 0.1983  loss_rpn_loc: 0.1501  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:18] d2.utils.events INFO:  eta: 0:14:51  iter: 2159  total_loss: 0.642  loss_cls: 0.2747  loss_box_reg: 0.02789  loss_rpn_cls: 0.1987  loss_rpn_loc: 0.1426  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:25] d2.utils.events INFO:  eta: 0:14:45  iter: 2179  total_loss: 0.5875  loss_cls: 0.2392  loss_box_reg: 0.01307  loss_rpn_cls: 0.1872  loss_rpn_loc: 0.1135  time: 0.3467  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:56:31] d2.utils.events INFO:  eta: 0:14:38  iter: 2199  total_loss: 0.5652  loss_cls: 0.2163  loss_box_reg: 0.01968  loss_rpn_cls: 0.1909  loss_rpn_loc: 0.1199  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:38] d2.utils.events INFO:  eta: 0:14:29  iter: 2219  total_loss: 0.6027  loss_cls: 0.249  loss_box_reg: 0.02138  loss_rpn_cls: 0.1953  loss_rpn_loc: 0.1481  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:56:44] d2.utils.events INFO:  eta: 0:14:22  iter: 2239  total_loss: 0.6247  loss_cls: 0.2556  loss_box_reg: 0.02259  loss_rpn_cls: 0.1992  loss_rpn_loc: 0.143  time: 0.3459  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:56:52] d2.utils.events INFO:  eta: 0:14:17  iter: 2259  total_loss: 0.5749  loss_cls: 0.2396  loss_box_reg: 0.0124  loss_rpn_cls: 0.1865  loss_rpn_loc: 0.1247  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:56:58] d2.utils.events INFO:  eta: 0:14:10  iter: 2279  total_loss: 0.6984  loss_cls: 0.3124  loss_box_reg: 0.02971  loss_rpn_cls: 0.197  loss_rpn_loc: 0.1553  time: 0.3459  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:57:05] d2.utils.events INFO:  eta: 0:14:03  iter: 2299  total_loss: 0.589  loss_cls: 0.2378  loss_box_reg: 0.0146  loss_rpn_cls: 0.1902  loss_rpn_loc: 0.1357  time: 0.3460  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:57:12] d2.utils.events INFO:  eta: 0:13:56  iter: 2319  total_loss: 0.548  loss_cls: 0.1994  loss_box_reg: 0.02089  loss_rpn_cls: 0.1795  loss_rpn_loc: 0.1285  time: 0.3460  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:57:19] d2.utils.events INFO:  eta: 0:13:48  iter: 2339  total_loss: 0.5939  loss_cls: 0.2288  loss_box_reg: 0.02532  loss_rpn_cls: 0.1889  loss_rpn_loc: 0.1252  time: 0.3462  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:57:27] d2.utils.events INFO:  eta: 0:13:42  iter: 2359  total_loss: 0.6392  loss_cls: 0.2665  loss_box_reg: 0.02665  loss_rpn_cls: 0.1969  loss_rpn_loc: 0.1453  time: 0.3464  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 13:57:34] d2.utils.events INFO:  eta: 0:13:36  iter: 2379  total_loss: 0.5248  loss_cls: 0.2176  loss_box_reg: 0.01707  loss_rpn_cls: 0.1879  loss_rpn_loc: 0.1262  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:57:41] d2.utils.events INFO:  eta: 0:13:30  iter: 2399  total_loss: 0.4964  loss_cls: 0.1846  loss_box_reg: 0.01812  loss_rpn_cls: 0.1836  loss_rpn_loc: 0.1186  time: 0.3467  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:57:48] d2.utils.events INFO:  eta: 0:13:24  iter: 2419  total_loss: 0.697  loss_cls: 0.3065  loss_box_reg: 0.02718  loss_rpn_cls: 0.2  loss_rpn_loc: 0.1479  time: 0.3466  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:57:55] d2.utils.events INFO:  eta: 0:13:17  iter: 2439  total_loss: 0.4996  loss_cls: 0.1897  loss_box_reg: 0.01153  loss_rpn_cls: 0.1769  loss_rpn_loc: 0.1259  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:02] d2.utils.events INFO:  eta: 0:13:10  iter: 2459  total_loss: 0.56  loss_cls: 0.2181  loss_box_reg: 0.02412  loss_rpn_cls: 0.1901  loss_rpn_loc: 0.1244  time: 0.3464  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:09] d2.utils.events INFO:  eta: 0:13:05  iter: 2479  total_loss: 0.66  loss_cls: 0.2938  loss_box_reg: 0.03608  loss_rpn_cls: 0.1812  loss_rpn_loc: 0.1402  time: 0.3465  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:16] d2.utils.events INFO:  eta: 0:13:00  iter: 2499  total_loss: 0.5015  loss_cls: 0.2027  loss_box_reg: 0.01777  loss_rpn_cls: 0.1777  loss_rpn_loc: 0.1049  time: 0.3465  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:23] d2.utils.events INFO:  eta: 0:12:54  iter: 2519  total_loss: 0.67  loss_cls: 0.2914  loss_box_reg: 0.03209  loss_rpn_cls: 0.1944  loss_rpn_loc: 0.1613  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:58:30] d2.utils.events INFO:  eta: 0:12:47  iter: 2539  total_loss: 0.5679  loss_cls: 0.2399  loss_box_reg: 0.02698  loss_rpn_cls: 0.1883  loss_rpn_loc: 0.1336  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:58:38] d2.utils.events INFO:  eta: 0:12:41  iter: 2559  total_loss: 0.5849  loss_cls: 0.2056  loss_box_reg: 0.01712  loss_rpn_cls: 0.186  loss_rpn_loc: 0.1475  time: 0.3466  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:58:45] d2.utils.events INFO:  eta: 0:12:35  iter: 2579  total_loss: 0.5068  loss_cls: 0.2122  loss_box_reg: 0.01783  loss_rpn_cls: 0.1765  loss_rpn_loc: 0.114  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:52] d2.utils.events INFO:  eta: 0:12:29  iter: 2599  total_loss: 0.5758  loss_cls: 0.2233  loss_box_reg: 0.02222  loss_rpn_cls: 0.1816  loss_rpn_loc: 0.1223  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:58:58] d2.utils.events INFO:  eta: 0:12:23  iter: 2619  total_loss: 0.5294  loss_cls: 0.2136  loss_box_reg: 0.01432  loss_rpn_cls: 0.1775  loss_rpn_loc: 0.1215  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:06] d2.utils.events INFO:  eta: 0:12:16  iter: 2639  total_loss: 0.5778  loss_cls: 0.2326  loss_box_reg: 0.01888  loss_rpn_cls: 0.1821  loss_rpn_loc: 0.1265  time: 0.3467  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:12] d2.utils.events INFO:  eta: 0:12:10  iter: 2659  total_loss: 0.5626  loss_cls: 0.2204  loss_box_reg: 0.02804  loss_rpn_cls: 0.1846  loss_rpn_loc: 0.1337  time: 0.3464  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:19] d2.utils.events INFO:  eta: 0:12:05  iter: 2679  total_loss: 0.623  loss_cls: 0.2659  loss_box_reg: 0.01848  loss_rpn_cls: 0.1889  loss_rpn_loc: 0.1271  time: 0.3464  data_time: 0.0018  lr: 2e-06  max_mem: 8457M
[03/31 13:59:26] d2.utils.events INFO:  eta: 0:11:58  iter: 2699  total_loss: 0.5538  loss_cls: 0.2246  loss_box_reg: 0.01955  loss_rpn_cls: 0.176  loss_rpn_loc: 0.1265  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:32] d2.utils.events INFO:  eta: 0:11:53  iter: 2719  total_loss: 0.5732  loss_cls: 0.2593  loss_box_reg: 0.02445  loss_rpn_cls: 0.179  loss_rpn_loc: 0.1139  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 13:59:39] d2.utils.events INFO:  eta: 0:11:47  iter: 2739  total_loss: 0.5456  loss_cls: 0.2177  loss_box_reg: 0.02062  loss_rpn_cls: 0.1789  loss_rpn_loc: 0.1271  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:46] d2.utils.events INFO:  eta: 0:11:39  iter: 2759  total_loss: 0.5895  loss_cls: 0.2295  loss_box_reg: 0.02431  loss_rpn_cls: 0.1849  loss_rpn_loc: 0.1321  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 13:59:54] d2.utils.events INFO:  eta: 0:11:32  iter: 2779  total_loss: 0.4452  loss_cls: 0.164  loss_box_reg: 0.01559  loss_rpn_cls: 0.1735  loss_rpn_loc: 0.0972  time: 0.3463  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:00:01] d2.utils.events INFO:  eta: 0:11:28  iter: 2799  total_loss: 0.5787  loss_cls: 0.2373  loss_box_reg: 0.02775  loss_rpn_cls: 0.1763  loss_rpn_loc: 0.1227  time: 0.3464  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:00:08] d2.utils.events INFO:  eta: 0:11:20  iter: 2819  total_loss: 0.5056  loss_cls: 0.2175  loss_box_reg: 0.01895  loss_rpn_cls: 0.1707  loss_rpn_loc: 0.1143  time: 0.3465  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:00:15] d2.utils.events INFO:  eta: 0:11:14  iter: 2839  total_loss: 0.5756  loss_cls: 0.243  loss_box_reg: 0.02023  loss_rpn_cls: 0.1833  loss_rpn_loc: 0.1291  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:00:23] d2.utils.events INFO:  eta: 0:11:07  iter: 2859  total_loss: 0.5554  loss_cls: 0.2179  loss_box_reg: 0.01956  loss_rpn_cls: 0.1791  loss_rpn_loc: 0.1286  time: 0.3465  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:00:30] d2.utils.events INFO:  eta: 0:11:01  iter: 2879  total_loss: 0.6595  loss_cls: 0.2827  loss_box_reg: 0.02306  loss_rpn_cls: 0.1855  loss_rpn_loc: 0.1413  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:00:36] d2.utils.events INFO:  eta: 0:10:54  iter: 2899  total_loss: 0.6166  loss_cls: 0.2554  loss_box_reg: 0.02329  loss_rpn_cls: 0.186  loss_rpn_loc: 0.1429  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:00:43] d2.utils.events INFO:  eta: 0:10:49  iter: 2919  total_loss: 0.4921  loss_cls: 0.1872  loss_box_reg: 0.01741  loss_rpn_cls: 0.1674  loss_rpn_loc: 0.1079  time: 0.3464  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:00:51] d2.utils.events INFO:  eta: 0:10:44  iter: 2939  total_loss: 0.5505  loss_cls: 0.2305  loss_box_reg: 0.01808  loss_rpn_cls: 0.1849  loss_rpn_loc: 0.1256  time: 0.3465  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:00:57] d2.utils.events INFO:  eta: 0:10:38  iter: 2959  total_loss: 0.5937  loss_cls: 0.2309  loss_box_reg: 0.02008  loss_rpn_cls: 0.181  loss_rpn_loc: 0.1371  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:01:05] d2.utils.events INFO:  eta: 0:10:31  iter: 2979  total_loss: 0.5628  loss_cls: 0.2263  loss_box_reg: 0.02074  loss_rpn_cls: 0.1726  loss_rpn_loc: 0.1254  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:01:11] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0002999.pth
[03/31 14:01:12] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 14:01:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[03/31 14:01:12] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 14:01:12] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 14:01:12] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 14:01:14] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0005 s/iter. Inference: 0.1054 s/iter. Eval: 0.0002 s/iter. Total: 0.1061 s/iter. ETA=0:00:57
[03/31 14:01:19] d2.evaluation.evaluator INFO: Inference done 58/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0002 s/iter. Total: 0.1067 s/iter. ETA=0:00:52
[03/31 14:01:24] d2.evaluation.evaluator INFO: Inference done 105/548. Dataloading: 0.0007 s/iter. Inference: 0.1059 s/iter. Eval: 0.0002 s/iter. Total: 0.1069 s/iter. ETA=0:00:47
[03/31 14:01:29] d2.evaluation.evaluator INFO: Inference done 152/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0002 s/iter. Total: 0.1069 s/iter. ETA=0:00:42
[03/31 14:01:34] d2.evaluation.evaluator INFO: Inference done 199/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0002 s/iter. Total: 0.1070 s/iter. ETA=0:00:37
[03/31 14:01:39] d2.evaluation.evaluator INFO: Inference done 246/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0002 s/iter. Total: 0.1070 s/iter. ETA=0:00:32
[03/31 14:01:44] d2.evaluation.evaluator INFO: Inference done 293/548. Dataloading: 0.0007 s/iter. Inference: 0.1062 s/iter. Eval: 0.0002 s/iter. Total: 0.1072 s/iter. ETA=0:00:27
[03/31 14:01:49] d2.evaluation.evaluator INFO: Inference done 338/548. Dataloading: 0.0007 s/iter. Inference: 0.1063 s/iter. Eval: 0.0007 s/iter. Total: 0.1077 s/iter. ETA=0:00:22
[03/31 14:01:54] d2.evaluation.evaluator INFO: Inference done 385/548. Dataloading: 0.0007 s/iter. Inference: 0.1062 s/iter. Eval: 0.0007 s/iter. Total: 0.1077 s/iter. ETA=0:00:17
[03/31 14:01:59] d2.evaluation.evaluator INFO: Inference done 432/548. Dataloading: 0.0007 s/iter. Inference: 0.1063 s/iter. Eval: 0.0006 s/iter. Total: 0.1076 s/iter. ETA=0:00:12
[03/31 14:02:04] d2.evaluation.evaluator INFO: Inference done 479/548. Dataloading: 0.0007 s/iter. Inference: 0.1062 s/iter. Eval: 0.0006 s/iter. Total: 0.1076 s/iter. ETA=0:00:07
[03/31 14:02:09] d2.evaluation.evaluator INFO: Inference done 526/548. Dataloading: 0.0008 s/iter. Inference: 0.1062 s/iter. Eval: 0.0005 s/iter. Total: 0.1076 s/iter. ETA=0:00:02
[03/31 14:02:12] d2.evaluation.evaluator INFO: Total inference time: 0:00:58.516147 (0.107765 s / iter per device, on 1 devices)
[03/31 14:02:12] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:57 (0.106236 s / iter per device, on 1 devices)
[03/31 14:02:12] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[03/31 14:02:12] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[03/31 14:02:12] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[03/31 14:02:12] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/31 14:02:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.52 seconds.
[03/31 14:02:13] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/31 14:02:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.002  | 0.000  | 0.001 | 0.000 | 0.000 |
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[03/31 14:02:13] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.005 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[03/31 14:02:13] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[03/31 14:02:13] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/31 14:02:13] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[03/31 14:02:13] d2.evaluation.testing INFO: copypaste: 0.0004,0.0021,0.0000,0.0005,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[03/31 14:02:13] d2.utils.events INFO:  eta: 0:10:25  iter: 2999  total_loss: 0.5787  loss_cls: 0.25  loss_box_reg: 0.02523  loss_rpn_cls: 0.1752  loss_rpn_loc: 0.1196  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:02:20] d2.utils.events INFO:  eta: 0:10:19  iter: 3019  total_loss: 0.5514  loss_cls: 0.2049  loss_box_reg: 0.01692  loss_rpn_cls: 0.1821  loss_rpn_loc: 0.1302  time: 0.3465  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:02:27] d2.utils.events INFO:  eta: 0:10:13  iter: 3039  total_loss: 0.5265  loss_cls: 0.203  loss_box_reg: 0.01992  loss_rpn_cls: 0.1775  loss_rpn_loc: 0.1252  time: 0.3466  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:02:35] d2.utils.events INFO:  eta: 0:10:07  iter: 3059  total_loss: 0.5382  loss_cls: 0.2168  loss_box_reg: 0.01404  loss_rpn_cls: 0.1667  loss_rpn_loc: 0.117  time: 0.3467  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:02:42] d2.utils.events INFO:  eta: 0:10:00  iter: 3079  total_loss: 0.5679  loss_cls: 0.2266  loss_box_reg: 0.02794  loss_rpn_cls: 0.1804  loss_rpn_loc: 0.122  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:02:48] d2.utils.events INFO:  eta: 0:09:54  iter: 3099  total_loss: 0.5675  loss_cls: 0.2247  loss_box_reg: 0.0175  loss_rpn_cls: 0.1772  loss_rpn_loc: 0.1126  time: 0.3466  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:02:56] d2.utils.events INFO:  eta: 0:09:48  iter: 3119  total_loss: 0.5894  loss_cls: 0.227  loss_box_reg: 0.03077  loss_rpn_cls: 0.1812  loss_rpn_loc: 0.1362  time: 0.3467  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:03:03] d2.utils.events INFO:  eta: 0:09:42  iter: 3139  total_loss: 0.5395  loss_cls: 0.2215  loss_box_reg: 0.02191  loss_rpn_cls: 0.1745  loss_rpn_loc: 0.1242  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:03:10] d2.utils.events INFO:  eta: 0:09:35  iter: 3159  total_loss: 0.573  loss_cls: 0.2144  loss_box_reg: 0.02014  loss_rpn_cls: 0.1848  loss_rpn_loc: 0.1401  time: 0.3467  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:03:16] d2.utils.events INFO:  eta: 0:09:29  iter: 3179  total_loss: 0.5638  loss_cls: 0.2522  loss_box_reg: 0.02846  loss_rpn_cls: 0.1776  loss_rpn_loc: 0.1254  time: 0.3464  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:03:23] d2.utils.events INFO:  eta: 0:09:23  iter: 3199  total_loss: 0.6125  loss_cls: 0.2708  loss_box_reg: 0.0281  loss_rpn_cls: 0.1793  loss_rpn_loc: 0.1221  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:03:30] d2.utils.events INFO:  eta: 0:09:18  iter: 3219  total_loss: 0.6026  loss_cls: 0.2568  loss_box_reg: 0.0364  loss_rpn_cls: 0.1762  loss_rpn_loc: 0.1404  time: 0.3465  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:03:37] d2.utils.events INFO:  eta: 0:09:12  iter: 3239  total_loss: 0.6243  loss_cls: 0.2589  loss_box_reg: 0.0267  loss_rpn_cls: 0.1889  loss_rpn_loc: 0.1331  time: 0.3465  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:03:43] d2.utils.events INFO:  eta: 0:09:05  iter: 3259  total_loss: 0.6244  loss_cls: 0.2689  loss_box_reg: 0.02403  loss_rpn_cls: 0.1785  loss_rpn_loc: 0.1342  time: 0.3463  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:03:50] d2.utils.events INFO:  eta: 0:08:59  iter: 3279  total_loss: 0.4982  loss_cls: 0.2042  loss_box_reg: 0.01964  loss_rpn_cls: 0.1718  loss_rpn_loc: 0.1185  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:03:57] d2.utils.events INFO:  eta: 0:08:53  iter: 3299  total_loss: 0.5828  loss_cls: 0.2269  loss_box_reg: 0.01848  loss_rpn_cls: 0.1821  loss_rpn_loc: 0.1336  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:04:04] d2.utils.events INFO:  eta: 0:08:46  iter: 3319  total_loss: 0.4969  loss_cls: 0.1969  loss_box_reg: 0.0188  loss_rpn_cls: 0.1741  loss_rpn_loc: 0.1158  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:04:12] d2.utils.events INFO:  eta: 0:08:40  iter: 3339  total_loss: 0.4541  loss_cls: 0.1727  loss_box_reg: 0.03023  loss_rpn_cls: 0.1697  loss_rpn_loc: 0.09735  time: 0.3465  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:04:18] d2.utils.events INFO:  eta: 0:08:33  iter: 3359  total_loss: 0.5464  loss_cls: 0.2178  loss_box_reg: 0.01238  loss_rpn_cls: 0.1686  loss_rpn_loc: 0.1174  time: 0.3464  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:04:25] d2.utils.events INFO:  eta: 0:08:26  iter: 3379  total_loss: 0.5458  loss_cls: 0.2233  loss_box_reg: 0.02482  loss_rpn_cls: 0.173  loss_rpn_loc: 0.1203  time: 0.3463  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:04:31] d2.utils.events INFO:  eta: 0:08:20  iter: 3399  total_loss: 0.4901  loss_cls: 0.1878  loss_box_reg: 0.0152  loss_rpn_cls: 0.1663  loss_rpn_loc: 0.1195  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:04:38] d2.utils.events INFO:  eta: 0:08:14  iter: 3419  total_loss: 0.6166  loss_cls: 0.2253  loss_box_reg: 0.03651  loss_rpn_cls: 0.1858  loss_rpn_loc: 0.141  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:04:45] d2.utils.events INFO:  eta: 0:08:08  iter: 3439  total_loss: 0.6201  loss_cls: 0.2527  loss_box_reg: 0.02347  loss_rpn_cls: 0.1798  loss_rpn_loc: 0.1451  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:04:52] d2.utils.events INFO:  eta: 0:08:02  iter: 3459  total_loss: 0.4704  loss_cls: 0.1789  loss_box_reg: 0.02173  loss_rpn_cls: 0.1587  loss_rpn_loc: 0.1035  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:04:59] d2.utils.events INFO:  eta: 0:07:55  iter: 3479  total_loss: 0.6345  loss_cls: 0.2773  loss_box_reg: 0.02264  loss_rpn_cls: 0.1784  loss_rpn_loc: 0.1468  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:07] d2.utils.events INFO:  eta: 0:07:49  iter: 3499  total_loss: 0.6441  loss_cls: 0.29  loss_box_reg: 0.02265  loss_rpn_cls: 0.1819  loss_rpn_loc: 0.1379  time: 0.3463  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:14] d2.utils.events INFO:  eta: 0:07:43  iter: 3519  total_loss: 0.5121  loss_cls: 0.2106  loss_box_reg: 0.0269  loss_rpn_cls: 0.1715  loss_rpn_loc: 0.1138  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:20] d2.utils.events INFO:  eta: 0:07:36  iter: 3539  total_loss: 0.5666  loss_cls: 0.2377  loss_box_reg: 0.02285  loss_rpn_cls: 0.1887  loss_rpn_loc: 0.128  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:27] d2.utils.events INFO:  eta: 0:07:29  iter: 3559  total_loss: 0.5785  loss_cls: 0.2736  loss_box_reg: 0.01284  loss_rpn_cls: 0.1784  loss_rpn_loc: 0.1242  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:34] d2.utils.events INFO:  eta: 0:07:24  iter: 3579  total_loss: 0.4581  loss_cls: 0.1918  loss_box_reg: 0.02086  loss_rpn_cls: 0.1564  loss_rpn_loc: 0.09939  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:41] d2.utils.events INFO:  eta: 0:07:17  iter: 3599  total_loss: 0.6266  loss_cls: 0.2624  loss_box_reg: 0.02145  loss_rpn_cls: 0.1842  loss_rpn_loc: 0.1442  time: 0.3460  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:47] d2.utils.events INFO:  eta: 0:07:10  iter: 3619  total_loss: 0.5167  loss_cls: 0.2081  loss_box_reg: 0.009248  loss_rpn_cls: 0.1592  loss_rpn_loc: 0.1203  time: 0.3459  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:05:54] d2.utils.events INFO:  eta: 0:07:03  iter: 3639  total_loss: 0.5487  loss_cls: 0.2131  loss_box_reg: 0.02269  loss_rpn_cls: 0.1738  loss_rpn_loc: 0.1172  time: 0.3459  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:06:01] d2.utils.events INFO:  eta: 0:06:57  iter: 3659  total_loss: 0.5255  loss_cls: 0.2022  loss_box_reg: 0.02195  loss_rpn_cls: 0.1664  loss_rpn_loc: 0.1046  time: 0.3458  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:06:07] d2.utils.events INFO:  eta: 0:06:50  iter: 3679  total_loss: 0.4844  loss_cls: 0.1895  loss_box_reg: 0.0256  loss_rpn_cls: 0.1658  loss_rpn_loc: 0.127  time: 0.3457  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:06:14] d2.utils.events INFO:  eta: 0:06:44  iter: 3699  total_loss: 0.5783  loss_cls: 0.2299  loss_box_reg: 0.02156  loss_rpn_cls: 0.1737  loss_rpn_loc: 0.1262  time: 0.3456  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:06:20] d2.utils.events INFO:  eta: 0:06:38  iter: 3719  total_loss: 0.5729  loss_cls: 0.2552  loss_box_reg: 0.02255  loss_rpn_cls: 0.1702  loss_rpn_loc: 0.1249  time: 0.3454  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:06:27] d2.utils.events INFO:  eta: 0:06:31  iter: 3739  total_loss: 0.5421  loss_cls: 0.2082  loss_box_reg: 0.02377  loss_rpn_cls: 0.1643  loss_rpn_loc: 0.116  time: 0.3454  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:06:34] d2.utils.events INFO:  eta: 0:06:25  iter: 3759  total_loss: 0.5503  loss_cls: 0.2185  loss_box_reg: 0.02966  loss_rpn_cls: 0.1713  loss_rpn_loc: 0.1377  time: 0.3454  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:06:41] d2.utils.events INFO:  eta: 0:06:19  iter: 3779  total_loss: 0.5289  loss_cls: 0.216  loss_box_reg: 0.02851  loss_rpn_cls: 0.1716  loss_rpn_loc: 0.1142  time: 0.3454  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:06:48] d2.utils.events INFO:  eta: 0:06:13  iter: 3799  total_loss: 0.5124  loss_cls: 0.1807  loss_box_reg: 0.01856  loss_rpn_cls: 0.1736  loss_rpn_loc: 0.1172  time: 0.3453  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:06:55] d2.utils.events INFO:  eta: 0:06:07  iter: 3819  total_loss: 0.626  loss_cls: 0.2692  loss_box_reg: 0.02334  loss_rpn_cls: 0.1815  loss_rpn_loc: 0.1341  time: 0.3455  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:07:03] d2.utils.events INFO:  eta: 0:06:01  iter: 3839  total_loss: 0.5373  loss_cls: 0.2078  loss_box_reg: 0.02668  loss_rpn_cls: 0.1671  loss_rpn_loc: 0.1111  time: 0.3456  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:07:09] d2.utils.events INFO:  eta: 0:05:55  iter: 3859  total_loss: 0.5316  loss_cls: 0.2144  loss_box_reg: 0.02551  loss_rpn_cls: 0.168  loss_rpn_loc: 0.1189  time: 0.3456  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:07:16] d2.utils.events INFO:  eta: 0:05:49  iter: 3879  total_loss: 0.4688  loss_cls: 0.1865  loss_box_reg: 0.02319  loss_rpn_cls: 0.1609  loss_rpn_loc: 0.0997  time: 0.3456  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:07:24] d2.utils.events INFO:  eta: 0:05:43  iter: 3899  total_loss: 0.6134  loss_cls: 0.2418  loss_box_reg: 0.02327  loss_rpn_cls: 0.173  loss_rpn_loc: 0.1143  time: 0.3457  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:07:31] d2.utils.events INFO:  eta: 0:05:37  iter: 3919  total_loss: 0.5476  loss_cls: 0.2182  loss_box_reg: 0.0251  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.108  time: 0.3457  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:07:37] d2.utils.events INFO:  eta: 0:05:30  iter: 3939  total_loss: 0.5528  loss_cls: 0.2264  loss_box_reg: 0.02002  loss_rpn_cls: 0.1705  loss_rpn_loc: 0.1195  time: 0.3457  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:07:45] d2.utils.events INFO:  eta: 0:05:24  iter: 3959  total_loss: 0.4561  loss_cls: 0.1593  loss_box_reg: 0.0229  loss_rpn_cls: 0.1521  loss_rpn_loc: 0.1015  time: 0.3458  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:07:53] d2.utils.events INFO:  eta: 0:05:19  iter: 3979  total_loss: 0.6308  loss_cls: 0.2734  loss_box_reg: 0.02713  loss_rpn_cls: 0.1718  loss_rpn_loc: 0.1313  time: 0.3460  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:07:59] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0003999.pth
[03/31 14:08:00] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 14:08:00] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[03/31 14:08:00] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 14:08:00] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 14:08:00] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 14:08:01] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0004 s/iter. Inference: 0.1054 s/iter. Eval: 0.0002 s/iter. Total: 0.1060 s/iter. ETA=0:00:56
[03/31 14:08:06] d2.evaluation.evaluator INFO: Inference done 58/548. Dataloading: 0.0007 s/iter. Inference: 0.1056 s/iter. Eval: 0.0003 s/iter. Total: 0.1066 s/iter. ETA=0:00:52
[03/31 14:08:11] d2.evaluation.evaluator INFO: Inference done 105/548. Dataloading: 0.0007 s/iter. Inference: 0.1057 s/iter. Eval: 0.0002 s/iter. Total: 0.1067 s/iter. ETA=0:00:47
[03/31 14:08:16] d2.evaluation.evaluator INFO: Inference done 151/548. Dataloading: 0.0007 s/iter. Inference: 0.1058 s/iter. Eval: 0.0013 s/iter. Total: 0.1079 s/iter. ETA=0:00:42
[03/31 14:08:21] d2.evaluation.evaluator INFO: Inference done 198/548. Dataloading: 0.0007 s/iter. Inference: 0.1059 s/iter. Eval: 0.0011 s/iter. Total: 0.1077 s/iter. ETA=0:00:37
[03/31 14:08:27] d2.evaluation.evaluator INFO: Inference done 245/548. Dataloading: 0.0007 s/iter. Inference: 0.1059 s/iter. Eval: 0.0009 s/iter. Total: 0.1076 s/iter. ETA=0:00:32
[03/31 14:08:32] d2.evaluation.evaluator INFO: Inference done 292/548. Dataloading: 0.0007 s/iter. Inference: 0.1059 s/iter. Eval: 0.0008 s/iter. Total: 0.1074 s/iter. ETA=0:00:27
[03/31 14:08:37] d2.evaluation.evaluator INFO: Inference done 339/548. Dataloading: 0.0007 s/iter. Inference: 0.1061 s/iter. Eval: 0.0007 s/iter. Total: 0.1075 s/iter. ETA=0:00:22
[03/31 14:08:42] d2.evaluation.evaluator INFO: Inference done 386/548. Dataloading: 0.0007 s/iter. Inference: 0.1061 s/iter. Eval: 0.0006 s/iter. Total: 0.1075 s/iter. ETA=0:00:17
[03/31 14:08:47] d2.evaluation.evaluator INFO: Inference done 433/548. Dataloading: 0.0007 s/iter. Inference: 0.1061 s/iter. Eval: 0.0006 s/iter. Total: 0.1074 s/iter. ETA=0:00:12
[03/31 14:08:52] d2.evaluation.evaluator INFO: Inference done 480/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0005 s/iter. Total: 0.1073 s/iter. ETA=0:00:07
[03/31 14:08:57] d2.evaluation.evaluator INFO: Inference done 527/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0005 s/iter. Total: 0.1073 s/iter. ETA=0:00:02
[03/31 14:08:59] d2.evaluation.evaluator INFO: Total inference time: 0:00:58.368899 (0.107493 s / iter per device, on 1 devices)
[03/31 14:08:59] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:57 (0.106028 s / iter per device, on 1 devices)
[03/31 14:08:59] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[03/31 14:08:59] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[03/31 14:08:59] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[03/31 14:09:00] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/31 14:09:00] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.51 seconds.
[03/31 14:09:00] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/31 14:09:00] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.001 | 0.008  | 0.000  | 0.001 | 0.000 | 0.000 |
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[03/31 14:09:00] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.014 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[03/31 14:09:00] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[03/31 14:09:00] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/31 14:09:00] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[03/31 14:09:00] d2.evaluation.testing INFO: copypaste: 0.0013,0.0080,0.0003,0.0014,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[03/31 14:09:00] d2.utils.events INFO:  eta: 0:05:12  iter: 3999  total_loss: 0.5163  loss_cls: 0.2004  loss_box_reg: 0.02383  loss_rpn_cls: 0.1615  loss_rpn_loc: 0.1219  time: 0.3458  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:09:07] d2.utils.events INFO:  eta: 0:05:06  iter: 4019  total_loss: 0.5693  loss_cls: 0.236  loss_box_reg: 0.03378  loss_rpn_cls: 0.17  loss_rpn_loc: 0.1202  time: 0.3457  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:09:14] d2.utils.events INFO:  eta: 0:05:00  iter: 4039  total_loss: 0.5672  loss_cls: 0.2312  loss_box_reg: 0.02757  loss_rpn_cls: 0.1655  loss_rpn_loc: 0.1163  time: 0.3456  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:09:21] d2.utils.events INFO:  eta: 0:04:54  iter: 4059  total_loss: 0.4839  loss_cls: 0.1879  loss_box_reg: 0.02403  loss_rpn_cls: 0.1693  loss_rpn_loc: 0.1028  time: 0.3457  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:09:28] d2.utils.events INFO:  eta: 0:04:48  iter: 4079  total_loss: 0.5372  loss_cls: 0.2257  loss_box_reg: 0.02751  loss_rpn_cls: 0.1712  loss_rpn_loc: 0.1304  time: 0.3458  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:09:36] d2.utils.events INFO:  eta: 0:04:42  iter: 4099  total_loss: 0.5508  loss_cls: 0.2049  loss_box_reg: 0.02168  loss_rpn_cls: 0.1682  loss_rpn_loc: 0.1148  time: 0.3460  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:09:43] d2.utils.events INFO:  eta: 0:04:36  iter: 4119  total_loss: 0.618  loss_cls: 0.2514  loss_box_reg: 0.02525  loss_rpn_cls: 0.1873  loss_rpn_loc: 0.1421  time: 0.3460  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:09:50] d2.utils.events INFO:  eta: 0:04:30  iter: 4139  total_loss: 0.5176  loss_cls: 0.1865  loss_box_reg: 0.02126  loss_rpn_cls: 0.1709  loss_rpn_loc: 0.1134  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:09:57] d2.utils.events INFO:  eta: 0:04:24  iter: 4159  total_loss: 0.5267  loss_cls: 0.2093  loss_box_reg: 0.03265  loss_rpn_cls: 0.167  loss_rpn_loc: 0.1148  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:10:04] d2.utils.events INFO:  eta: 0:04:17  iter: 4179  total_loss: 0.5458  loss_cls: 0.2215  loss_box_reg: 0.03557  loss_rpn_cls: 0.1669  loss_rpn_loc: 0.1213  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:10:11] d2.utils.events INFO:  eta: 0:04:11  iter: 4199  total_loss: 0.4865  loss_cls: 0.187  loss_box_reg: 0.02607  loss_rpn_cls: 0.1583  loss_rpn_loc: 0.1029  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:10:18] d2.utils.events INFO:  eta: 0:04:04  iter: 4219  total_loss: 0.5176  loss_cls: 0.1965  loss_box_reg: 0.03516  loss_rpn_cls: 0.1574  loss_rpn_loc: 0.1097  time: 0.3460  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:10:25] d2.utils.events INFO:  eta: 0:03:58  iter: 4239  total_loss: 0.5333  loss_cls: 0.2094  loss_box_reg: 0.03259  loss_rpn_cls: 0.1577  loss_rpn_loc: 0.1145  time: 0.3460  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:10:32] d2.utils.events INFO:  eta: 0:03:52  iter: 4259  total_loss: 0.5903  loss_cls: 0.2351  loss_box_reg: 0.04026  loss_rpn_cls: 0.1664  loss_rpn_loc: 0.1237  time: 0.3460  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:10:39] d2.utils.events INFO:  eta: 0:03:46  iter: 4279  total_loss: 0.5062  loss_cls: 0.2064  loss_box_reg: 0.01998  loss_rpn_cls: 0.159  loss_rpn_loc: 0.1124  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:10:46] d2.utils.events INFO:  eta: 0:03:40  iter: 4299  total_loss: 0.4793  loss_cls: 0.1979  loss_box_reg: 0.01971  loss_rpn_cls: 0.1582  loss_rpn_loc: 0.09612  time: 0.3462  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:10:54] d2.utils.events INFO:  eta: 0:03:34  iter: 4319  total_loss: 0.5468  loss_cls: 0.2191  loss_box_reg: 0.03616  loss_rpn_cls: 0.1561  loss_rpn_loc: 0.1121  time: 0.3463  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:11:01] d2.utils.events INFO:  eta: 0:03:27  iter: 4339  total_loss: 0.4113  loss_cls: 0.1617  loss_box_reg: 0.02395  loss_rpn_cls: 0.148  loss_rpn_loc: 0.08708  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:11:07] d2.utils.events INFO:  eta: 0:03:21  iter: 4359  total_loss: 0.5644  loss_cls: 0.227  loss_box_reg: 0.03401  loss_rpn_cls: 0.1635  loss_rpn_loc: 0.1249  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:11:15] d2.utils.events INFO:  eta: 0:03:14  iter: 4379  total_loss: 0.4584  loss_cls: 0.1736  loss_box_reg: 0.02852  loss_rpn_cls: 0.1607  loss_rpn_loc: 0.1033  time: 0.3463  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:11:21] d2.utils.events INFO:  eta: 0:03:08  iter: 4399  total_loss: 0.5847  loss_cls: 0.245  loss_box_reg: 0.03623  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.1278  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:11:28] d2.utils.events INFO:  eta: 0:03:01  iter: 4419  total_loss: 0.6267  loss_cls: 0.2787  loss_box_reg: 0.02138  loss_rpn_cls: 0.1701  loss_rpn_loc: 0.1341  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:11:35] d2.utils.events INFO:  eta: 0:02:55  iter: 4439  total_loss: 0.5095  loss_cls: 0.203  loss_box_reg: 0.03211  loss_rpn_cls: 0.1671  loss_rpn_loc: 0.1037  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:11:42] d2.utils.events INFO:  eta: 0:02:49  iter: 4459  total_loss: 0.5166  loss_cls: 0.2257  loss_box_reg: 0.02397  loss_rpn_cls: 0.161  loss_rpn_loc: 0.1066  time: 0.3462  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:11:49] d2.utils.events INFO:  eta: 0:02:43  iter: 4479  total_loss: 0.4643  loss_cls: 0.1797  loss_box_reg: 0.02911  loss_rpn_cls: 0.1532  loss_rpn_loc: 0.1114  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:11:56] d2.utils.events INFO:  eta: 0:02:36  iter: 4499  total_loss: 0.5298  loss_cls: 0.2099  loss_box_reg: 0.02578  loss_rpn_cls: 0.1632  loss_rpn_loc: 0.1095  time: 0.3463  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:12:03] d2.utils.events INFO:  eta: 0:02:30  iter: 4519  total_loss: 0.5378  loss_cls: 0.2198  loss_box_reg: 0.03246  loss_rpn_cls: 0.1633  loss_rpn_loc: 0.1091  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:12:10] d2.utils.events INFO:  eta: 0:02:24  iter: 4539  total_loss: 0.495  loss_cls: 0.2072  loss_box_reg: 0.03089  loss_rpn_cls: 0.1582  loss_rpn_loc: 0.1146  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:12:17] d2.utils.events INFO:  eta: 0:02:17  iter: 4559  total_loss: 0.4759  loss_cls: 0.1834  loss_box_reg: 0.03915  loss_rpn_cls: 0.1511  loss_rpn_loc: 0.0981  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:12:24] d2.utils.events INFO:  eta: 0:02:11  iter: 4579  total_loss: 0.5469  loss_cls: 0.2129  loss_box_reg: 0.04301  loss_rpn_cls: 0.1633  loss_rpn_loc: 0.1154  time: 0.3462  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:12:31] d2.utils.events INFO:  eta: 0:02:05  iter: 4599  total_loss: 0.5243  loss_cls: 0.2161  loss_box_reg: 0.02921  loss_rpn_cls: 0.1421  loss_rpn_loc: 0.1117  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:12:38] d2.utils.events INFO:  eta: 0:01:59  iter: 4619  total_loss: 0.5628  loss_cls: 0.2269  loss_box_reg: 0.0351  loss_rpn_cls: 0.1698  loss_rpn_loc: 0.1224  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:12:45] d2.utils.events INFO:  eta: 0:01:53  iter: 4639  total_loss: 0.5129  loss_cls: 0.2156  loss_box_reg: 0.0299  loss_rpn_cls: 0.1605  loss_rpn_loc: 0.1047  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:12:51] d2.utils.events INFO:  eta: 0:01:46  iter: 4659  total_loss: 0.5276  loss_cls: 0.1998  loss_box_reg: 0.03303  loss_rpn_cls: 0.1584  loss_rpn_loc: 0.1158  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:12:59] d2.utils.events INFO:  eta: 0:01:40  iter: 4679  total_loss: 0.5864  loss_cls: 0.2362  loss_box_reg: 0.03335  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.1201  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:13:05] d2.utils.events INFO:  eta: 0:01:34  iter: 4699  total_loss: 0.5346  loss_cls: 0.2106  loss_box_reg: 0.03195  loss_rpn_cls: 0.1509  loss_rpn_loc: 0.1034  time: 0.3461  data_time: 0.0017  lr: 2e-06  max_mem: 8457M
[03/31 14:13:12] d2.utils.events INFO:  eta: 0:01:28  iter: 4719  total_loss: 0.3998  loss_cls: 0.1666  loss_box_reg: 0.03011  loss_rpn_cls: 0.1404  loss_rpn_loc: 0.08358  time: 0.3461  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:13:19] d2.utils.events INFO:  eta: 0:01:21  iter: 4739  total_loss: 0.5722  loss_cls: 0.2526  loss_box_reg: 0.03281  loss_rpn_cls: 0.1616  loss_rpn_loc: 0.1199  time: 0.3461  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:13:26] d2.utils.events INFO:  eta: 0:01:15  iter: 4759  total_loss: 0.4916  loss_cls: 0.1806  loss_box_reg: 0.03336  loss_rpn_cls: 0.1541  loss_rpn_loc: 0.1102  time: 0.3462  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:13:33] d2.utils.events INFO:  eta: 0:01:09  iter: 4779  total_loss: 0.4832  loss_cls: 0.2131  loss_box_reg: 0.03512  loss_rpn_cls: 0.1473  loss_rpn_loc: 0.115  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:13:41] d2.utils.events INFO:  eta: 0:01:03  iter: 4799  total_loss: 0.5383  loss_cls: 0.2162  loss_box_reg: 0.03349  loss_rpn_cls: 0.1588  loss_rpn_loc: 0.1053  time: 0.3463  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:13:47] d2.utils.events INFO:  eta: 0:00:56  iter: 4819  total_loss: 0.5032  loss_cls: 0.2097  loss_box_reg: 0.03297  loss_rpn_cls: 0.1484  loss_rpn_loc: 0.09724  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:13:54] d2.utils.events INFO:  eta: 0:00:50  iter: 4839  total_loss: 0.448  loss_cls: 0.175  loss_box_reg: 0.02989  loss_rpn_cls: 0.1406  loss_rpn_loc: 0.0934  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:14:02] d2.utils.events INFO:  eta: 0:00:44  iter: 4859  total_loss: 0.5529  loss_cls: 0.2135  loss_box_reg: 0.03998  loss_rpn_cls: 0.1511  loss_rpn_loc: 0.1159  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:14:08] d2.utils.events INFO:  eta: 0:00:37  iter: 4879  total_loss: 0.5663  loss_cls: 0.2109  loss_box_reg: 0.03274  loss_rpn_cls: 0.1625  loss_rpn_loc: 0.1192  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:14:16] d2.utils.events INFO:  eta: 0:00:31  iter: 4899  total_loss: 0.4827  loss_cls: 0.1847  loss_box_reg: 0.03281  loss_rpn_cls: 0.1539  loss_rpn_loc: 0.08852  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:14:22] d2.utils.events INFO:  eta: 0:00:25  iter: 4919  total_loss: 0.5352  loss_cls: 0.2077  loss_box_reg: 0.04616  loss_rpn_cls: 0.1512  loss_rpn_loc: 0.1169  time: 0.3462  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:14:29] d2.utils.events INFO:  eta: 0:00:18  iter: 4939  total_loss: 0.5803  loss_cls: 0.2285  loss_box_reg: 0.03777  loss_rpn_cls: 0.1629  loss_rpn_loc: 0.1208  time: 0.3461  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:14:35] d2.utils.events INFO:  eta: 0:00:12  iter: 4959  total_loss: 0.6516  loss_cls: 0.2814  loss_box_reg: 0.04543  loss_rpn_cls: 0.1734  loss_rpn_loc: 0.14  time: 0.3460  data_time: 0.0016  lr: 2e-06  max_mem: 8457M
[03/31 14:14:42] d2.utils.events INFO:  eta: 0:00:06  iter: 4979  total_loss: 0.575  loss_cls: 0.2535  loss_box_reg: 0.04164  loss_rpn_cls: 0.1629  loss_rpn_loc: 0.1282  time: 0.3460  data_time: 0.0014  lr: 2e-06  max_mem: 8457M
[03/31 14:14:50] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0004999.pth
[03/31 14:14:51] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[03/31 14:14:52] d2.utils.events INFO:  eta: 0:00:00  iter: 4999  total_loss: 0.4448  loss_cls: 0.166  loss_box_reg: 0.03502  loss_rpn_cls: 0.1422  loss_rpn_loc: 0.09332  time: 0.3462  data_time: 0.0015  lr: 2e-06  max_mem: 8457M
[03/31 14:14:52] d2.engine.hooks INFO: Overall training speed: 4998 iterations in 0:28:50 (0.3462 s / it)
[03/31 14:14:52] d2.engine.hooks INFO: Total training time: 0:33:11 (0:04:20 on hooks)
[03/31 14:14:52] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[03/31 14:14:52] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(600, 600), max_size=1000, sample_style='choice')]
[03/31 14:14:52] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[03/31 14:14:52] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[03/31 14:14:52] d2.evaluation.evaluator INFO: Start inference on 548 batches
[03/31 14:14:54] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0005 s/iter. Inference: 0.1049 s/iter. Eval: 0.0002 s/iter. Total: 0.1057 s/iter. ETA=0:00:56
[03/31 14:14:59] d2.evaluation.evaluator INFO: Inference done 58/548. Dataloading: 0.0007 s/iter. Inference: 0.1055 s/iter. Eval: 0.0002 s/iter. Total: 0.1064 s/iter. ETA=0:00:52
[03/31 14:15:04] d2.evaluation.evaluator INFO: Inference done 105/548. Dataloading: 0.0007 s/iter. Inference: 0.1057 s/iter. Eval: 0.0002 s/iter. Total: 0.1067 s/iter. ETA=0:00:47
[03/31 14:15:09] d2.evaluation.evaluator INFO: Inference done 152/548. Dataloading: 0.0007 s/iter. Inference: 0.1057 s/iter. Eval: 0.0002 s/iter. Total: 0.1067 s/iter. ETA=0:00:42
[03/31 14:15:14] d2.evaluation.evaluator INFO: Inference done 200/548. Dataloading: 0.0007 s/iter. Inference: 0.1056 s/iter. Eval: 0.0002 s/iter. Total: 0.1066 s/iter. ETA=0:00:37
[03/31 14:15:19] d2.evaluation.evaluator INFO: Inference done 247/548. Dataloading: 0.0007 s/iter. Inference: 0.1057 s/iter. Eval: 0.0002 s/iter. Total: 0.1067 s/iter. ETA=0:00:32
[03/31 14:15:24] d2.evaluation.evaluator INFO: Inference done 294/548. Dataloading: 0.0007 s/iter. Inference: 0.1059 s/iter. Eval: 0.0002 s/iter. Total: 0.1069 s/iter. ETA=0:00:27
[03/31 14:15:29] d2.evaluation.evaluator INFO: Inference done 341/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0002 s/iter. Total: 0.1070 s/iter. ETA=0:00:22
[03/31 14:15:34] d2.evaluation.evaluator INFO: Inference done 387/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0006 s/iter. Total: 0.1075 s/iter. ETA=0:00:17
[03/31 14:15:39] d2.evaluation.evaluator INFO: Inference done 434/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0006 s/iter. Total: 0.1074 s/iter. ETA=0:00:12
[03/31 14:15:44] d2.evaluation.evaluator INFO: Inference done 481/548. Dataloading: 0.0007 s/iter. Inference: 0.1060 s/iter. Eval: 0.0006 s/iter. Total: 0.1074 s/iter. ETA=0:00:07
[03/31 14:15:49] d2.evaluation.evaluator INFO: Inference done 528/548. Dataloading: 0.0007 s/iter. Inference: 0.1061 s/iter. Eval: 0.0005 s/iter. Total: 0.1074 s/iter. ETA=0:00:02
[03/31 14:15:51] d2.evaluation.evaluator INFO: Total inference time: 0:00:58.397303 (0.107546 s / iter per device, on 1 devices)
[03/31 14:15:51] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:57 (0.106049 s / iter per device, on 1 devices)
[03/31 14:15:52] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[03/31 14:15:52] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[03/31 14:15:52] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[03/31 14:15:52] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/31 14:15:53] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.53 seconds.
[03/31 14:15:53] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/31 14:15:53] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.001 | 0.005  | 0.000  | 0.001 | 0.004 | 0.000 |
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[03/31 14:15:53] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.009 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[03/31 14:15:53] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[03/31 14:15:53] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/31 14:15:53] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[03/31 14:15:53] d2.evaluation.testing INFO: copypaste: 0.0008,0.0050,0.0001,0.0013,0.0040,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/01 09:54:24] detectron2 INFO: Rank of current process: 0. World size: 1
[04/01 09:54:24] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/01 09:54:24] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/01 09:54:24] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/01 09:54:24] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/01 09:54:24] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/01 09:54:24] d2.utils.env INFO: Using a generated random seed 25904324
[04/01 09:54:27] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/01 09:54:27] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/01 09:54:27] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/01 09:54:27] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |[0m
[04/01 09:54:27] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/01 09:54:27] d2.data.build INFO: Using training sampler TrainingSampler
[04/01 09:54:27] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/01 09:54:27] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/01 09:54:27] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/01 09:54:27] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[04/01 09:54:27] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[04/01 09:54:27] d2.engine.train_loop INFO: Starting training from iteration 0
[04/01 09:54:45] d2.utils.events INFO:  eta: 1 day, 2:32:26  iter: 19  total_loss: 5.258  loss_cls: 4.382  loss_box_reg: 0.08256  loss_rpn_cls: 0.6953  loss_rpn_loc: 0.05198  time: 0.8503  data_time: 0.0165  lr: 3.9962e-06  max_mem: 15250M
[04/01 09:55:01] d2.utils.events INFO:  eta: 1 day, 1:33:04  iter: 39  total_loss: 5.031  loss_cls: 4.123  loss_box_reg: 0.2132  loss_rpn_cls: 0.6935  loss_rpn_loc: 0.09338  time: 0.8149  data_time: 0.0022  lr: 7.9922e-06  max_mem: 15389M
[04/01 09:55:18] d2.utils.events INFO:  eta: 1 day, 2:19:23  iter: 59  total_loss: 4.142  loss_cls: 3.245  loss_box_reg: 0.1738  loss_rpn_cls: 0.6906  loss_rpn_loc: 0.07485  time: 0.8364  data_time: 0.0021  lr: 1.1988e-05  max_mem: 15389M
[04/01 09:55:35] d2.utils.events INFO:  eta: 1 day, 2:06:22  iter: 79  total_loss: 2.119  loss_cls: 1.073  loss_box_reg: 0.2052  loss_rpn_cls: 0.6858  loss_rpn_loc: 0.07298  time: 0.8334  data_time: 0.0021  lr: 1.5984e-05  max_mem: 15389M
[04/01 09:55:52] d2.utils.events INFO:  eta: 1 day, 2:05:46  iter: 99  total_loss: 1.271  loss_cls: 0.4033  loss_box_reg: 0.1766  loss_rpn_cls: 0.6752  loss_rpn_loc: 0.06504  time: 0.8339  data_time: 0.0022  lr: 1.998e-05  max_mem: 15389M
[04/01 09:56:08] d2.utils.events INFO:  eta: 1 day, 1:49:48  iter: 119  total_loss: 1.524  loss_cls: 0.45  loss_box_reg: 0.2933  loss_rpn_cls: 0.6538  loss_rpn_loc: 0.08818  time: 0.8264  data_time: 0.0023  lr: 2.3976e-05  max_mem: 15389M
[04/01 09:56:25] d2.utils.events INFO:  eta: 1 day, 2:05:12  iter: 139  total_loss: 1.057  loss_cls: 0.2649  loss_box_reg: 0.1925  loss_rpn_cls: 0.5274  loss_rpn_loc: 0.05939  time: 0.8329  data_time: 0.0023  lr: 2.7972e-05  max_mem: 15389M
[04/01 09:56:42] d2.utils.events INFO:  eta: 1 day, 2:12:40  iter: 159  total_loss: 1.32  loss_cls: 0.4133  loss_box_reg: 0.3613  loss_rpn_cls: 0.3156  loss_rpn_loc: 0.06655  time: 0.8375  data_time: 0.0024  lr: 3.1968e-05  max_mem: 15389M
[04/01 09:56:59] d2.utils.events INFO:  eta: 1 day, 2:21:08  iter: 179  total_loss: 1.114  loss_cls: 0.4513  loss_box_reg: 0.3524  loss_rpn_cls: 0.2715  loss_rpn_loc: 0.06223  time: 0.8371  data_time: 0.0022  lr: 3.5964e-05  max_mem: 15389M
[04/01 09:57:16] d2.utils.events INFO:  eta: 1 day, 2:18:42  iter: 199  total_loss: 1.226  loss_cls: 0.5084  loss_box_reg: 0.4657  loss_rpn_cls: 0.2122  loss_rpn_loc: 0.05092  time: 0.8358  data_time: 0.0022  lr: 3.996e-05  max_mem: 15389M
[04/01 09:57:32] d2.utils.events INFO:  eta: 1 day, 2:11:20  iter: 219  total_loss: 1.495  loss_cls: 0.6236  loss_box_reg: 0.5812  loss_rpn_cls: 0.1647  loss_rpn_loc: 0.06168  time: 0.8346  data_time: 0.0024  lr: 4.3956e-05  max_mem: 15389M
[04/01 09:57:49] d2.utils.events INFO:  eta: 1 day, 2:08:49  iter: 239  total_loss: 1.683  loss_cls: 0.631  loss_box_reg: 0.7504  loss_rpn_cls: 0.1984  loss_rpn_loc: 0.07959  time: 0.8345  data_time: 0.0023  lr: 4.7952e-05  max_mem: 15389M
[04/01 09:58:06] d2.utils.events INFO:  eta: 1 day, 2:10:46  iter: 259  total_loss: 1.491  loss_cls: 0.5442  loss_box_reg: 0.7076  loss_rpn_cls: 0.1313  loss_rpn_loc: 0.07212  time: 0.8344  data_time: 0.0023  lr: 5.1948e-05  max_mem: 15389M
[04/01 09:58:23] d2.utils.events INFO:  eta: 1 day, 2:15:42  iter: 279  total_loss: 1.234  loss_cls: 0.4732  loss_box_reg: 0.6105  loss_rpn_cls: 0.1118  loss_rpn_loc: 0.04781  time: 0.8380  data_time: 0.0023  lr: 5.5944e-05  max_mem: 15389M
[04/01 09:58:40] d2.utils.events INFO:  eta: 1 day, 2:15:24  iter: 299  total_loss: 1.246  loss_cls: 0.4891  loss_box_reg: 0.5998  loss_rpn_cls: 0.1084  loss_rpn_loc: 0.0588  time: 0.8391  data_time: 0.0023  lr: 5.994e-05  max_mem: 15389M
[04/01 09:58:57] d2.utils.events INFO:  eta: 1 day, 2:14:15  iter: 319  total_loss: 1.675  loss_cls: 0.6057  loss_box_reg: 0.8223  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.06054  time: 0.8391  data_time: 0.0023  lr: 6.3936e-05  max_mem: 15389M
[04/01 09:59:16] d2.utils.events INFO:  eta: 1 day, 2:20:15  iter: 339  total_loss: 1.359  loss_cls: 0.4673  loss_box_reg: 0.7716  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.05724  time: 0.8432  data_time: 0.0024  lr: 6.7932e-05  max_mem: 15389M
[04/01 09:59:33] d2.utils.events INFO:  eta: 1 day, 2:21:13  iter: 359  total_loss: 1.309  loss_cls: 0.4695  loss_box_reg: 0.704  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.05147  time: 0.8455  data_time: 0.0024  lr: 7.1928e-05  max_mem: 15389M
[04/01 09:59:51] d2.utils.events INFO:  eta: 1 day, 2:24:30  iter: 379  total_loss: 1.339  loss_cls: 0.4397  loss_box_reg: 0.665  loss_rpn_cls: 0.09098  loss_rpn_loc: 0.05963  time: 0.8476  data_time: 0.0024  lr: 7.5924e-05  max_mem: 15389M
[04/01 10:00:09] d2.utils.events INFO:  eta: 1 day, 2:29:42  iter: 399  total_loss: 1.167  loss_cls: 0.4547  loss_box_reg: 0.6615  loss_rpn_cls: 0.06894  loss_rpn_loc: 0.04968  time: 0.8491  data_time: 0.0023  lr: 7.992e-05  max_mem: 15389M
[04/01 10:00:27] d2.utils.events INFO:  eta: 1 day, 2:31:48  iter: 419  total_loss: 1.311  loss_cls: 0.4466  loss_box_reg: 0.7216  loss_rpn_cls: 0.08053  loss_rpn_loc: 0.0616  time: 0.8511  data_time: 0.0024  lr: 8.3916e-05  max_mem: 15389M
[04/01 10:00:44] d2.utils.events INFO:  eta: 1 day, 2:32:48  iter: 439  total_loss: 1.355  loss_cls: 0.4381  loss_box_reg: 0.7548  loss_rpn_cls: 0.05713  loss_rpn_loc: 0.0502  time: 0.8517  data_time: 0.0023  lr: 8.7912e-05  max_mem: 15389M
[04/01 10:01:02] d2.utils.events INFO:  eta: 1 day, 2:37:56  iter: 459  total_loss: 1.305  loss_cls: 0.4505  loss_box_reg: 0.7092  loss_rpn_cls: 0.05312  loss_rpn_loc: 0.0506  time: 0.8541  data_time: 0.0023  lr: 9.1908e-05  max_mem: 15389M
[04/01 10:01:20] d2.utils.events INFO:  eta: 1 day, 2:37:38  iter: 479  total_loss: 1.303  loss_cls: 0.4584  loss_box_reg: 0.7243  loss_rpn_cls: 0.09378  loss_rpn_loc: 0.05456  time: 0.8553  data_time: 0.0023  lr: 9.5904e-05  max_mem: 15389M
[04/01 10:01:37] d2.utils.events INFO:  eta: 1 day, 2:37:41  iter: 499  total_loss: 1.179  loss_cls: 0.3373  loss_box_reg: 0.709  loss_rpn_cls: 0.05559  loss_rpn_loc: 0.06001  time: 0.8551  data_time: 0.0024  lr: 9.99e-05  max_mem: 15389M
[04/01 10:01:53] d2.utils.events INFO:  eta: 1 day, 2:37:23  iter: 519  total_loss: 1.289  loss_cls: 0.4117  loss_box_reg: 0.6757  loss_rpn_cls: 0.07943  loss_rpn_loc: 0.05888  time: 0.8541  data_time: 0.0023  lr: 0.0001039  max_mem: 15389M
[04/01 10:02:11] d2.utils.events INFO:  eta: 1 day, 2:37:47  iter: 539  total_loss: 1.211  loss_cls: 0.4354  loss_box_reg: 0.5921  loss_rpn_cls: 0.08207  loss_rpn_loc: 0.05732  time: 0.8545  data_time: 0.0023  lr: 0.00010789  max_mem: 15389M
[04/01 10:02:27] d2.utils.events INFO:  eta: 1 day, 2:37:08  iter: 559  total_loss: 1.056  loss_cls: 0.3611  loss_box_reg: 0.61  loss_rpn_cls: 0.04651  loss_rpn_loc: 0.04665  time: 0.8537  data_time: 0.0024  lr: 0.00011189  max_mem: 15389M
[04/01 10:02:45] d2.utils.events INFO:  eta: 1 day, 2:36:11  iter: 579  total_loss: 1.111  loss_cls: 0.3853  loss_box_reg: 0.6099  loss_rpn_cls: 0.05793  loss_rpn_loc: 0.05466  time: 0.8536  data_time: 0.0023  lr: 0.00011588  max_mem: 15389M
[04/01 10:03:02] d2.utils.events INFO:  eta: 1 day, 2:36:18  iter: 599  total_loss: 1.01  loss_cls: 0.351  loss_box_reg: 0.558  loss_rpn_cls: 0.04885  loss_rpn_loc: 0.0467  time: 0.8544  data_time: 0.0023  lr: 0.00011988  max_mem: 15389M
[04/01 10:03:20] d2.utils.events INFO:  eta: 1 day, 2:36:15  iter: 619  total_loss: 1.221  loss_cls: 0.441  loss_box_reg: 0.6299  loss_rpn_cls: 0.05082  loss_rpn_loc: 0.06651  time: 0.8555  data_time: 0.0025  lr: 0.00012388  max_mem: 15389M
[04/01 10:03:38] d2.utils.events INFO:  eta: 1 day, 2:37:01  iter: 639  total_loss: 1.034  loss_cls: 0.3385  loss_box_reg: 0.5654  loss_rpn_cls: 0.05293  loss_rpn_loc: 0.05256  time: 0.8569  data_time: 0.0025  lr: 0.00012787  max_mem: 15389M
[04/01 10:03:47] d2.engine.hooks INFO: Overall training speed: 648 iterations in 0:09:16 (0.8582 s / it)
[04/01 10:03:47] d2.engine.hooks INFO: Total training time: 0:09:17 (0:00:01 on hooks)
[04/01 10:03:47] d2.utils.events INFO:  eta: 1 day, 2:36:52  iter: 650  total_loss: 0.967  loss_cls: 0.3207  loss_box_reg: 0.5055  loss_rpn_cls: 0.04163  loss_rpn_loc: 0.04924  time: 0.8569  data_time: 0.0023  lr: 0.00012987  max_mem: 15389M
[04/03 00:36:20] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 00:36:20] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 00:36:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 00:36:20] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 00:36:20] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 00:36:20] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 00:36:20] d2.utils.env INFO: Using a generated random seed 21902417
[04/03 00:36:23] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 00:36:23] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 00:36:23] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 00:36:23] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 00:36:23] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/03 00:36:23] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 00:36:23] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 00:36:23] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 00:36:23] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 00:36:23] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 00:36:23] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 00:36:23] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 00:36:24] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 173, in forward
    x = x + self.drop_path(self.mlp(self.norm2(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 52, in forward
    x = self.fc1(x)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/functional.py", line 1848, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: CUDA out of memory. Tried to allocate 256.00 MiB (GPU 0; 23.70 GiB total capacity; 1.37 GiB already allocated; 45.19 MiB free; 1.39 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/03 00:36:24] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[04/03 00:36:24] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1400M
[04/03 03:08:45] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 03:08:46] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 03:08:46] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 03:08:46] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 03:08:46] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 03:08:46] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 03:08:46] d2.utils.env INFO: Using a generated random seed 47513168
[04/03 03:08:48] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 03:09:11] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 03:09:12] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 03:09:12] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 03:09:12] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 03:09:12] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 03:09:12] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 03:09:12] d2.utils.env INFO: Using a generated random seed 13597673
[04/03 03:09:14] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 03:10:21] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 03:10:21] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 03:10:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 03:10:21] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 03:10:21] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 03:10:21] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 03:10:21] d2.utils.env INFO: Using a generated random seed 23180145
[04/03 03:10:24] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:21:04] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:21:04] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:21:04] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:21:04] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:21:04] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:21:04] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:21:04] d2.utils.env INFO: Using a generated random seed 5892163
[04/03 04:21:07] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:21:07] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:21:07] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:21:07] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:21:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/03 04:21:07] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:21:07] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:21:07] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:21:07] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:21:07] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:21:07] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:21:07] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:21:08] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 154, in forward
    features = self.backbone(images.tensor)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 342, in forward
    x = self.forward_features(x)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 333, in forward_features
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 172, in forward
    x = x + self.drop_path(self.attn(self.norm1(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/timm/models/layers/drop.py", line 166, in forward
    return drop_path(x, self.drop_prob, self.training, self.scale_by_keep)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/timm/models/layers/drop.py", line 154, in drop_path
    return x * random_tensor
RuntimeError: CUDA out of memory. Tried to allocate 32.00 MiB (GPU 0; 23.70 GiB total capacity; 1.29 GiB already allocated; 41.81 MiB free; 1.32 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/03 04:21:08] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[04/03 04:21:08] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1317M
[04/03 04:33:15] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:33:15] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:33:15] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:33:15] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:33:15] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:33:15] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:33:15] d2.utils.env INFO: Using a generated random seed 16772986
[04/03 04:33:18] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:33:18] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:33:18] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:33:18] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:33:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[04/03 04:33:18] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:33:18] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:33:18] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:33:18] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:33:18] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:33:18] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:33:18] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:33:19] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 163, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 214, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 189, in _shared_roi_transform
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 172, in forward
    x = x + self.drop_path(self.attn(self.norm1(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 127, in forward
    attn = (q @ k.transpose(-2, -1)) * self.scale
RuntimeError: CUDA out of memory. Tried to allocate 78.00 MiB (GPU 0; 23.70 GiB total capacity; 1.23 GiB already allocated; 32.94 MiB free; 1.29 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/03 04:33:19] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[04/03 04:33:19] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1258M
[04/03 04:36:07] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:36:07] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:36:07] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:36:07] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:36:07] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:36:07] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:36:07] d2.utils.env INFO: Using a generated random seed 8943927
[04/03 04:36:10] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:36:10] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:36:10] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:36:10] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:36:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[04/03 04:36:10] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:36:10] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:36:10] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:36:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:36:10] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:36:10] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:36:10] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:36:11] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 163, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 214, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_roi_heads.py", line 189, in _shared_roi_transform
    x = blk(x, H, W)
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 172, in forward
    x = x + self.drop_path(self.attn(self.norm1(x), H, W))
  File "/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/rmedu/GitHub/FCT/FCT/modeling/fsod/pvt_v2.py", line 127, in forward
    attn = (q @ k.transpose(-2, -1)) * self.scale
RuntimeError: CUDA out of memory. Tried to allocate 78.00 MiB (GPU 0; 23.70 GiB total capacity; 1.23 GiB already allocated; 27.75 MiB free; 1.30 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/03 04:36:11] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[04/03 04:36:11] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 1265M
[04/03 04:40:40] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:40:40] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:40:40] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:40:40] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100,[39m[38;5;141m [39m[38;5;141m100)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:40:40] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:40:40] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:40:40] d2.utils.env INFO: Using a generated random seed 42027711
[04/03 04:40:43] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:40:43] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:40:43] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:40:43] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:40:43] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100), max_size=200, sample_style='choice'), RandomFlip()]
[04/03 04:40:43] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:40:43] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:40:43] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:40:43] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:40:43] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:40:43] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:40:43] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:40:51] d2.utils.events INFO:  eta: 8:39:07  iter: 19  total_loss: 5.357  loss_cls: 4.352  loss_box_reg: 0.01113  loss_rpn_cls: 0.6922  loss_rpn_loc: 0.2874  time: 0.3375  data_time: 0.0148  lr: 3.9962e-06  max_mem: 7766M
[04/03 04:40:57] d2.utils.events INFO:  eta: 8:50:57  iter: 39  total_loss: 5.075  loss_cls: 3.995  loss_box_reg: 0.01167  loss_rpn_cls: 0.6908  loss_rpn_loc: 0.3163  time: 0.3253  data_time: 0.0016  lr: 7.9922e-06  max_mem: 7766M
[04/03 04:41:04] d2.utils.events INFO:  eta: 8:47:35  iter: 59  total_loss: 4.001  loss_cls: 3.085  loss_box_reg: 0.003073  loss_rpn_cls: 0.6877  loss_rpn_loc: 0.3128  time: 0.3309  data_time: 0.0015  lr: 1.1988e-05  max_mem: 7766M
[04/03 04:41:10] d2.utils.events INFO:  eta: 8:38:50  iter: 79  total_loss: 1.976  loss_cls: 0.9605  loss_box_reg: 0.01847  loss_rpn_cls: 0.6825  loss_rpn_loc: 0.296  time: 0.3280  data_time: 0.0015  lr: 1.5984e-05  max_mem: 7766M
[04/03 04:41:17] d2.utils.events INFO:  eta: 8:43:05  iter: 99  total_loss: 1.301  loss_cls: 0.3356  loss_box_reg: 0.003172  loss_rpn_cls: 0.6697  loss_rpn_loc: 0.2838  time: 0.3315  data_time: 0.0016  lr: 1.998e-05  max_mem: 7978M
[04/03 04:41:24] d2.utils.events INFO:  eta: 8:40:08  iter: 119  total_loss: 1.193  loss_cls: 0.2872  loss_box_reg: 0.006171  loss_rpn_cls: 0.6301  loss_rpn_loc: 0.2436  time: 0.3326  data_time: 0.0015  lr: 2.3976e-05  max_mem: 7978M
[04/03 04:41:30] d2.engine.hooks INFO: Overall training speed: 134 iterations in 0:00:45 (0.3371 s / it)
[04/03 04:41:30] d2.engine.hooks INFO: Total training time: 0:00:45 (0:00:00 on hooks)
[04/03 04:41:30] d2.utils.events INFO:  eta: 8:45:43  iter: 136  total_loss: 1.081  loss_cls: 0.32  loss_box_reg: 0.02255  loss_rpn_cls: 0.4838  loss_rpn_loc: 0.2265  time: 0.3364  data_time: 0.0015  lr: 2.7173e-05  max_mem: 8278M
[04/03 04:42:02] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:42:03] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:42:03] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:42:03] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(85000,[39m[38;5;141m [39m[38;5;141m100000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:42:03] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m110000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m85000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:42:03] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:42:03] d2.utils.env INFO: Using a generated random seed 4628705
[04/03 04:42:05] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:42:06] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:42:06] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:42:06] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:42:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/03 04:42:06] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:42:06] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:42:06] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:42:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:42:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:42:06] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:42:06] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:42:24] d2.utils.events INFO:  eta: 1 day, 4:37:12  iter: 19  total_loss: 5.284  loss_cls: 4.353  loss_box_reg: 0.1378  loss_rpn_cls: 0.6938  loss_rpn_loc: 0.07219  time: 0.8889  data_time: 0.0158  lr: 3.9962e-06  max_mem: 15393M
[04/03 04:42:42] d2.utils.events INFO:  eta: 1 day, 4:26:08  iter: 39  total_loss: 5.037  loss_cls: 3.998  loss_box_reg: 0.1736  loss_rpn_cls: 0.6927  loss_rpn_loc: 0.08935  time: 0.9001  data_time: 0.0023  lr: 7.9922e-06  max_mem: 15393M
[04/03 04:43:02] d2.utils.events INFO:  eta: 1 day, 4:49:24  iter: 59  total_loss: 4.204  loss_cls: 3.112  loss_box_reg: 0.2379  loss_rpn_cls: 0.6896  loss_rpn_loc: 0.08236  time: 0.9201  data_time: 0.0023  lr: 1.1988e-05  max_mem: 15393M
[04/03 04:43:20] d2.utils.events INFO:  eta: 1 day, 4:54:09  iter: 79  total_loss: 1.744  loss_cls: 0.8023  loss_box_reg: 0.184  loss_rpn_cls: 0.6874  loss_rpn_loc: 0.06604  time: 0.9156  data_time: 0.0023  lr: 1.5984e-05  max_mem: 15393M
[04/03 04:43:38] d2.utils.events INFO:  eta: 1 day, 4:33:45  iter: 99  total_loss: 1.387  loss_cls: 0.4451  loss_box_reg: 0.1637  loss_rpn_cls: 0.6785  loss_rpn_loc: 0.07079  time: 0.9108  data_time: 0.0024  lr: 1.998e-05  max_mem: 15393M
[04/03 04:43:56] d2.utils.events INFO:  eta: 1 day, 4:53:32  iter: 119  total_loss: 1.209  loss_cls: 0.311  loss_box_reg: 0.1495  loss_rpn_cls: 0.6637  loss_rpn_loc: 0.0619  time: 0.9123  data_time: 0.0023  lr: 2.3976e-05  max_mem: 15393M
[04/03 04:44:06] d2.engine.hooks INFO: Overall training speed: 129 iterations in 0:01:57 (0.9141 s / it)
[04/03 04:44:06] d2.engine.hooks INFO: Total training time: 0:01:58 (0:00:00 on hooks)
[04/03 04:44:06] d2.utils.events INFO:  eta: 1 day, 4:33:31  iter: 131  total_loss: 1.197  loss_cls: 0.3112  loss_box_reg: 0.1311  loss_rpn_cls: 0.6349  loss_rpn_loc: 0.08184  time: 0.9101  data_time: 0.0023  lr: 2.6174e-05  max_mem: 15393M
[04/03 04:45:49] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 04:45:49] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 04:45:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 04:45:49] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(8500,[39m[38;5;141m [39m[38;5;141m10000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m11000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m11000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 04:45:49] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m11000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m11000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 04:45:49] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 04:45:49] d2.utils.env INFO: Using a generated random seed 51185623
[04/03 04:45:52] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 04:45:52] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 04:45:52] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 04:45:52] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 04:45:52] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/03 04:45:52] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 04:45:52] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 04:45:52] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 04:45:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 04:45:52] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 04:45:52] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 04:45:52] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 04:46:11] d2.utils.events INFO:  eta: 2:41:29  iter: 19  total_loss: 5.197  loss_cls: 4.33  loss_box_reg: 0.09293  loss_rpn_cls: 0.6934  loss_rpn_loc: 0.07012  time: 0.9092  data_time: 0.0158  lr: 3.9962e-06  max_mem: 15011M
[04/03 04:46:28] d2.utils.events INFO:  eta: 2:30:21  iter: 39  total_loss: 4.831  loss_cls: 3.98  loss_box_reg: 0.08907  loss_rpn_cls: 0.6918  loss_rpn_loc: 0.05198  time: 0.8731  data_time: 0.0023  lr: 7.9922e-06  max_mem: 15011M
[04/03 04:46:46] d2.utils.events INFO:  eta: 2:30:04  iter: 59  total_loss: 3.841  loss_cls: 3.014  loss_box_reg: 0.1294  loss_rpn_cls: 0.689  loss_rpn_loc: 0.06462  time: 0.8731  data_time: 0.0023  lr: 1.1988e-05  max_mem: 15384M
[04/03 04:47:04] d2.utils.events INFO:  eta: 2:30:57  iter: 79  total_loss: 1.742  loss_cls: 0.8348  loss_box_reg: 0.1476  loss_rpn_cls: 0.6825  loss_rpn_loc: 0.06646  time: 0.8820  data_time: 0.0023  lr: 1.5984e-05  max_mem: 15384M
[04/03 04:47:23] d2.utils.events INFO:  eta: 2:32:20  iter: 99  total_loss: 1.181  loss_cls: 0.3753  loss_box_reg: 0.08639  loss_rpn_cls: 0.6656  loss_rpn_loc: 0.06281  time: 0.8950  data_time: 0.0023  lr: 1.998e-05  max_mem: 15384M
[04/03 04:47:41] d2.utils.events INFO:  eta: 2:34:56  iter: 119  total_loss: 1.063  loss_cls: 0.2991  loss_box_reg: 0.06759  loss_rpn_cls: 0.6211  loss_rpn_loc: 0.08725  time: 0.8967  data_time: 0.0023  lr: 2.3976e-05  max_mem: 15384M
[04/03 04:48:00] d2.utils.events INFO:  eta: 2:36:33  iter: 139  total_loss: 0.954  loss_cls: 0.3282  loss_box_reg: 0.1996  loss_rpn_cls: 0.4453  loss_rpn_loc: 0.05935  time: 0.9014  data_time: 0.0023  lr: 2.7972e-05  max_mem: 15384M
[04/03 04:48:18] d2.utils.events INFO:  eta: 2:35:49  iter: 159  total_loss: 1.235  loss_cls: 0.4677  loss_box_reg: 0.29  loss_rpn_cls: 0.3357  loss_rpn_loc: 0.08207  time: 0.9012  data_time: 0.0023  lr: 3.1968e-05  max_mem: 15384M
[04/03 04:48:37] d2.utils.events INFO:  eta: 2:37:27  iter: 179  total_loss: 1.528  loss_cls: 0.5169  loss_box_reg: 0.5422  loss_rpn_cls: 0.3012  loss_rpn_loc: 0.08527  time: 0.9060  data_time: 0.0023  lr: 3.5964e-05  max_mem: 15384M
[04/03 04:48:55] d2.utils.events INFO:  eta: 2:37:43  iter: 199  total_loss: 1.339  loss_cls: 0.4705  loss_box_reg: 0.5399  loss_rpn_cls: 0.2272  loss_rpn_loc: 0.05698  time: 0.9071  data_time: 0.0024  lr: 3.996e-05  max_mem: 15384M
[04/03 04:49:14] d2.utils.events INFO:  eta: 2:38:01  iter: 219  total_loss: 1.373  loss_cls: 0.5946  loss_box_reg: 0.5505  loss_rpn_cls: 0.1672  loss_rpn_loc: 0.05016  time: 0.9114  data_time: 0.0024  lr: 4.3956e-05  max_mem: 15384M
[04/03 04:49:34] d2.utils.events INFO:  eta: 2:39:52  iter: 239  total_loss: 1.409  loss_cls: 0.5285  loss_box_reg: 0.5847  loss_rpn_cls: 0.171  loss_rpn_loc: 0.06423  time: 0.9180  data_time: 0.0023  lr: 4.7952e-05  max_mem: 15384M
[04/03 04:49:53] d2.utils.events INFO:  eta: 2:40:37  iter: 259  total_loss: 1.437  loss_cls: 0.5891  loss_box_reg: 0.6614  loss_rpn_cls: 0.1395  loss_rpn_loc: 0.06059  time: 0.9201  data_time: 0.0022  lr: 5.1948e-05  max_mem: 15384M
[04/03 04:50:10] d2.utils.events INFO:  eta: 2:37:49  iter: 279  total_loss: 1.655  loss_cls: 0.5799  loss_box_reg: 0.7857  loss_rpn_cls: 0.1588  loss_rpn_loc: 0.07423  time: 0.9144  data_time: 0.0023  lr: 5.5944e-05  max_mem: 15384M
[04/03 04:50:27] d2.utils.events INFO:  eta: 2:37:07  iter: 299  total_loss: 1.278  loss_cls: 0.4775  loss_box_reg: 0.6249  loss_rpn_cls: 0.1172  loss_rpn_loc: 0.05817  time: 0.9106  data_time: 0.0023  lr: 5.994e-05  max_mem: 15384M
[04/03 04:50:44] d2.utils.events INFO:  eta: 2:36:24  iter: 319  total_loss: 1.332  loss_cls: 0.5006  loss_box_reg: 0.6483  loss_rpn_cls: 0.1101  loss_rpn_loc: 0.04859  time: 0.9083  data_time: 0.0023  lr: 6.3936e-05  max_mem: 15384M
[04/03 04:51:03] d2.utils.events INFO:  eta: 2:36:31  iter: 339  total_loss: 1.533  loss_cls: 0.5239  loss_box_reg: 0.769  loss_rpn_cls: 0.1037  loss_rpn_loc: 0.06253  time: 0.9095  data_time: 0.0022  lr: 6.7932e-05  max_mem: 15384M
[04/03 04:51:20] d2.utils.events INFO:  eta: 2:35:48  iter: 359  total_loss: 1.415  loss_cls: 0.4755  loss_box_reg: 0.7579  loss_rpn_cls: 0.086  loss_rpn_loc: 0.05434  time: 0.9072  data_time: 0.0023  lr: 7.1928e-05  max_mem: 15384M
[04/03 04:51:38] d2.utils.events INFO:  eta: 2:34:51  iter: 379  total_loss: 1.076  loss_cls: 0.3794  loss_box_reg: 0.5626  loss_rpn_cls: 0.09378  loss_rpn_loc: 0.04481  time: 0.9051  data_time: 0.0022  lr: 7.5924e-05  max_mem: 15384M
[04/03 04:51:55] d2.utils.events INFO:  eta: 2:34:12  iter: 399  total_loss: 1.45  loss_cls: 0.4998  loss_box_reg: 0.8238  loss_rpn_cls: 0.09245  loss_rpn_loc: 0.05207  time: 0.9021  data_time: 0.0022  lr: 7.992e-05  max_mem: 15384M
[04/03 04:52:14] d2.utils.events INFO:  eta: 2:34:22  iter: 419  total_loss: 1.282  loss_cls: 0.4665  loss_box_reg: 0.6977  loss_rpn_cls: 0.1011  loss_rpn_loc: 0.04862  time: 0.9044  data_time: 0.0023  lr: 8.3916e-05  max_mem: 15384M
[04/03 04:52:32] d2.utils.events INFO:  eta: 2:34:04  iter: 439  total_loss: 1.129  loss_cls: 0.4383  loss_box_reg: 0.6571  loss_rpn_cls: 0.06919  loss_rpn_loc: 0.05534  time: 0.9040  data_time: 0.0022  lr: 8.7912e-05  max_mem: 15384M
[04/03 04:52:50] d2.utils.events INFO:  eta: 2:33:39  iter: 459  total_loss: 1.342  loss_cls: 0.4084  loss_box_reg: 0.7435  loss_rpn_cls: 0.09383  loss_rpn_loc: 0.06734  time: 0.9035  data_time: 0.0024  lr: 9.1908e-05  max_mem: 15384M
[04/03 04:53:08] d2.utils.events INFO:  eta: 2:33:46  iter: 479  total_loss: 1.268  loss_cls: 0.3937  loss_box_reg: 0.7397  loss_rpn_cls: 0.088  loss_rpn_loc: 0.06018  time: 0.9049  data_time: 0.0023  lr: 9.5904e-05  max_mem: 15384M
[04/03 04:53:25] d2.utils.events INFO:  eta: 2:32:35  iter: 499  total_loss: 1.26  loss_cls: 0.3928  loss_box_reg: 0.7398  loss_rpn_cls: 0.0845  loss_rpn_loc: 0.05971  time: 0.9025  data_time: 0.0024  lr: 9.99e-05  max_mem: 15384M
[04/03 04:53:43] d2.utils.events INFO:  eta: 2:32:12  iter: 519  total_loss: 1.114  loss_cls: 0.3874  loss_box_reg: 0.6383  loss_rpn_cls: 0.0662  loss_rpn_loc: 0.04493  time: 0.9019  data_time: 0.0023  lr: 0.0001039  max_mem: 15384M
[04/03 04:54:02] d2.utils.events INFO:  eta: 2:32:09  iter: 539  total_loss: 1.087  loss_cls: 0.3645  loss_box_reg: 0.647  loss_rpn_cls: 0.05757  loss_rpn_loc: 0.05598  time: 0.9026  data_time: 0.0022  lr: 0.00010789  max_mem: 15384M
[04/03 04:54:20] d2.utils.events INFO:  eta: 2:32:03  iter: 559  total_loss: 1.126  loss_cls: 0.3978  loss_box_reg: 0.6086  loss_rpn_cls: 0.04547  loss_rpn_loc: 0.04834  time: 0.9023  data_time: 0.0024  lr: 0.00011189  max_mem: 15384M
[04/03 04:54:37] d2.utils.events INFO:  eta: 2:31:25  iter: 579  total_loss: 1.175  loss_cls: 0.3771  loss_box_reg: 0.5755  loss_rpn_cls: 0.06849  loss_rpn_loc: 0.05519  time: 0.9013  data_time: 0.0024  lr: 0.00011588  max_mem: 15384M
[04/03 04:54:56] d2.utils.events INFO:  eta: 2:31:17  iter: 599  total_loss: 1.062  loss_cls: 0.3856  loss_box_reg: 0.5343  loss_rpn_cls: 0.05074  loss_rpn_loc: 0.04684  time: 0.9024  data_time: 0.0023  lr: 0.00011988  max_mem: 15384M
[04/03 04:55:14] d2.utils.events INFO:  eta: 2:30:47  iter: 619  total_loss: 1.105  loss_cls: 0.4241  loss_box_reg: 0.6183  loss_rpn_cls: 0.0611  loss_rpn_loc: 0.04436  time: 0.9021  data_time: 0.0023  lr: 0.00012388  max_mem: 15384M
[04/03 04:55:31] d2.utils.events INFO:  eta: 2:30:19  iter: 639  total_loss: 1.041  loss_cls: 0.3524  loss_box_reg: 0.5585  loss_rpn_cls: 0.06114  loss_rpn_loc: 0.0414  time: 0.9004  data_time: 0.0022  lr: 0.00012787  max_mem: 15384M
[04/03 04:55:49] d2.utils.events INFO:  eta: 2:30:07  iter: 659  total_loss: 0.9673  loss_cls: 0.351  loss_box_reg: 0.5169  loss_rpn_cls: 0.05696  loss_rpn_loc: 0.06006  time: 0.9007  data_time: 0.0023  lr: 0.00013187  max_mem: 15384M
[04/03 04:56:06] d2.utils.events INFO:  eta: 2:29:44  iter: 679  total_loss: 1.035  loss_cls: 0.3512  loss_box_reg: 0.566  loss_rpn_cls: 0.0544  loss_rpn_loc: 0.0653  time: 0.8999  data_time: 0.0023  lr: 0.00013586  max_mem: 15384M
[04/03 04:56:24] d2.utils.events INFO:  eta: 2:29:01  iter: 699  total_loss: 1.005  loss_cls: 0.3365  loss_box_reg: 0.5489  loss_rpn_cls: 0.05302  loss_rpn_loc: 0.05517  time: 0.8988  data_time: 0.0023  lr: 0.00013986  max_mem: 15384M
[04/03 04:56:42] d2.utils.events INFO:  eta: 2:28:44  iter: 719  total_loss: 0.87  loss_cls: 0.3111  loss_box_reg: 0.4957  loss_rpn_cls: 0.04994  loss_rpn_loc: 0.04576  time: 0.8989  data_time: 0.0023  lr: 0.00014386  max_mem: 15384M
[04/03 04:57:00] d2.utils.events INFO:  eta: 2:28:04  iter: 739  total_loss: 1.122  loss_cls: 0.3918  loss_box_reg: 0.6002  loss_rpn_cls: 0.05755  loss_rpn_loc: 0.058  time: 0.8986  data_time: 0.0023  lr: 0.00014785  max_mem: 15384M
[04/03 04:57:16] d2.utils.events INFO:  eta: 2:27:26  iter: 759  total_loss: 1.083  loss_cls: 0.349  loss_box_reg: 0.5752  loss_rpn_cls: 0.04544  loss_rpn_loc: 0.05789  time: 0.8970  data_time: 0.0024  lr: 0.00015185  max_mem: 15384M
[04/03 04:57:35] d2.utils.events INFO:  eta: 2:27:16  iter: 779  total_loss: 1.009  loss_cls: 0.3575  loss_box_reg: 0.5268  loss_rpn_cls: 0.0436  loss_rpn_loc: 0.045  time: 0.8983  data_time: 0.0025  lr: 0.00015584  max_mem: 15384M
[04/03 04:57:53] d2.utils.events INFO:  eta: 2:26:46  iter: 799  total_loss: 1.012  loss_cls: 0.346  loss_box_reg: 0.518  loss_rpn_cls: 0.04855  loss_rpn_loc: 0.05362  time: 0.8977  data_time: 0.0022  lr: 0.00015984  max_mem: 15384M
[04/03 04:58:12] d2.utils.events INFO:  eta: 2:26:47  iter: 819  total_loss: 1.105  loss_cls: 0.3996  loss_box_reg: 0.5653  loss_rpn_cls: 0.0593  loss_rpn_loc: 0.06866  time: 0.8992  data_time: 0.0024  lr: 0.00016384  max_mem: 15384M
[04/03 04:58:30] d2.utils.events INFO:  eta: 2:26:30  iter: 839  total_loss: 0.7372  loss_cls: 0.2598  loss_box_reg: 0.422  loss_rpn_cls: 0.03747  loss_rpn_loc: 0.03276  time: 0.8992  data_time: 0.0023  lr: 0.00016783  max_mem: 15384M
[04/03 04:58:49] d2.utils.events INFO:  eta: 2:26:15  iter: 859  total_loss: 0.8621  loss_cls: 0.3039  loss_box_reg: 0.4495  loss_rpn_cls: 0.03913  loss_rpn_loc: 0.04168  time: 0.9003  data_time: 0.0023  lr: 0.00017183  max_mem: 15384M
[04/03 04:59:08] d2.utils.events INFO:  eta: 2:26:16  iter: 879  total_loss: 0.9016  loss_cls: 0.3096  loss_box_reg: 0.4799  loss_rpn_cls: 0.05179  loss_rpn_loc: 0.04809  time: 0.9012  data_time: 0.0024  lr: 0.00017582  max_mem: 15384M
[04/03 04:59:26] d2.utils.events INFO:  eta: 2:26:07  iter: 899  total_loss: 0.8482  loss_cls: 0.3191  loss_box_reg: 0.4206  loss_rpn_cls: 0.03845  loss_rpn_loc: 0.03759  time: 0.9017  data_time: 0.0023  lr: 0.00017982  max_mem: 15384M
[04/03 04:59:45] d2.utils.events INFO:  eta: 2:25:50  iter: 919  total_loss: 0.875  loss_cls: 0.2942  loss_box_reg: 0.4963  loss_rpn_cls: 0.0474  loss_rpn_loc: 0.04987  time: 0.9020  data_time: 0.0023  lr: 0.00018382  max_mem: 15384M
[04/03 05:00:04] d2.utils.events INFO:  eta: 2:25:48  iter: 939  total_loss: 0.8896  loss_cls: 0.2892  loss_box_reg: 0.4668  loss_rpn_cls: 0.04211  loss_rpn_loc: 0.05181  time: 0.9029  data_time: 0.0024  lr: 0.00018781  max_mem: 15384M
[04/03 05:00:22] d2.utils.events INFO:  eta: 2:25:16  iter: 959  total_loss: 0.8556  loss_cls: 0.268  loss_box_reg: 0.4842  loss_rpn_cls: 0.04812  loss_rpn_loc: 0.05311  time: 0.9028  data_time: 0.0024  lr: 0.00019181  max_mem: 15384M
[04/03 05:00:40] d2.utils.events INFO:  eta: 2:24:58  iter: 979  total_loss: 0.9447  loss_cls: 0.3393  loss_box_reg: 0.5397  loss_rpn_cls: 0.03489  loss_rpn_loc: 0.04784  time: 0.9028  data_time: 0.0023  lr: 0.0001958  max_mem: 15384M
[04/03 05:00:58] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 05:00:58] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |
[04/03 05:00:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 05:00:58] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 05:00:58] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 05:00:58] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 05:01:00] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:01:04
[04/03 05:01:05] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:00:59
[04/03 05:01:10] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:00:54
[04/03 05:01:15] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0002 s/iter. Total: 0.1206 s/iter. ETA=0:00:49
[04/03 05:01:20] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:00:44
[04/03 05:01:25] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:00:39
[04/03 05:01:30] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0002 s/iter. Total: 0.1206 s/iter. ETA=0:00:34
[04/03 05:01:35] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0007 s/iter. Total: 0.1211 s/iter. ETA=0:00:29
[04/03 05:01:40] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0007 s/iter. Total: 0.1210 s/iter. ETA=0:00:24
[04/03 05:01:45] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0006 s/iter. Total: 0.1209 s/iter. ETA=0:00:19
[04/03 05:01:51] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0006 s/iter. Total: 0.1209 s/iter. ETA=0:00:14
[04/03 05:01:56] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0005 s/iter. Total: 0.1209 s/iter. ETA=0:00:09
[04/03 05:02:01] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0005 s/iter. Total: 0.1208 s/iter. ETA=0:00:04
[04/03 05:02:05] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.686767 (0.120970 s / iter per device, on 1 devices)
[04/03 05:02:05] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119367 s / iter per device, on 1 devices)
[04/03 05:02:05] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 05:02:05] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 05:02:05] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 05:02:05] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 05:02:06] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.54 seconds.
[04/03 05:02:06] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 05:02:06] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.09 seconds.
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 3.850 | 8.870  | 3.066  | 1.247 | 7.467 | 11.614 |
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 05:02:06] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP    | category   | AP    |
|:-----------|:-------|:----------------|:------|:-----------|:------|
| pedestrian | 3.060  | people          | 2.502 | bicycle    | 0.409 |
| car        | 21.395 | van             | 9.777 | truck      | 0.000 |
| tricycle   | 1.512  | awning-tricycle | 0.826 | bus        | 0.000 |
| motor      | 2.873  | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan    | cng             | nan   | manual-van | nan   |
[04/03 05:02:06] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 05:02:06] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 05:02:06] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 05:02:06] d2.evaluation.testing INFO: copypaste: 3.8504,8.8696,3.0657,1.2466,7.4671,11.6138,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 05:02:06] d2.utils.events INFO:  eta: 2:24:33  iter: 999  total_loss: 0.782  loss_cls: 0.2574  loss_box_reg: 0.4395  loss_rpn_cls: 0.03569  loss_rpn_loc: 0.03029  time: 0.9027  data_time: 0.0023  lr: 0.0001998  max_mem: 15384M
[04/03 05:02:26] d2.utils.events INFO:  eta: 2:24:27  iter: 1019  total_loss: 0.8381  loss_cls: 0.2976  loss_box_reg: 0.4508  loss_rpn_cls: 0.04283  loss_rpn_loc: 0.04165  time: 0.9041  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[04/03 05:02:43] d2.utils.events INFO:  eta: 2:24:36  iter: 1039  total_loss: 0.7896  loss_cls: 0.3026  loss_box_reg: 0.3547  loss_rpn_cls: 0.03311  loss_rpn_loc: 0.03645  time: 0.9036  data_time: 0.0022  lr: 0.0002  max_mem: 15384M
[04/03 05:03:01] d2.utils.events INFO:  eta: 2:24:24  iter: 1059  total_loss: 0.8473  loss_cls: 0.2709  loss_box_reg: 0.3893  loss_rpn_cls: 0.0482  loss_rpn_loc: 0.0586  time: 0.9036  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[04/03 05:03:19] d2.utils.events INFO:  eta: 2:24:09  iter: 1079  total_loss: 0.8064  loss_cls: 0.2641  loss_box_reg: 0.4446  loss_rpn_cls: 0.05047  loss_rpn_loc: 0.04634  time: 0.9033  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[04/03 05:03:37] d2.utils.events INFO:  eta: 2:23:41  iter: 1099  total_loss: 0.8494  loss_cls: 0.2712  loss_box_reg: 0.4873  loss_rpn_cls: 0.03213  loss_rpn_loc: 0.04438  time: 0.9029  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[04/03 05:03:55] d2.utils.events INFO:  eta: 2:23:24  iter: 1119  total_loss: 0.7352  loss_cls: 0.2804  loss_box_reg: 0.4307  loss_rpn_cls: 0.02312  loss_rpn_loc: 0.03401  time: 0.9033  data_time: 0.0026  lr: 0.0002  max_mem: 15384M
[04/03 05:04:14] d2.utils.events INFO:  eta: 2:22:56  iter: 1139  total_loss: 0.7894  loss_cls: 0.2764  loss_box_reg: 0.455  loss_rpn_cls: 0.03652  loss_rpn_loc: 0.05081  time: 0.9038  data_time: 0.0025  lr: 0.0002  max_mem: 15384M
[04/03 05:04:32] d2.utils.events INFO:  eta: 2:22:38  iter: 1159  total_loss: 0.7279  loss_cls: 0.253  loss_box_reg: 0.3941  loss_rpn_cls: 0.02701  loss_rpn_loc: 0.04166  time: 0.9033  data_time: 0.0022  lr: 0.0002  max_mem: 15384M
[04/03 05:04:50] d2.utils.events INFO:  eta: 2:21:54  iter: 1179  total_loss: 0.7806  loss_cls: 0.2557  loss_box_reg: 0.4193  loss_rpn_cls: 0.02909  loss_rpn_loc: 0.04849  time: 0.9036  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[04/03 05:05:09] d2.utils.events INFO:  eta: 2:21:43  iter: 1199  total_loss: 0.9163  loss_cls: 0.3401  loss_box_reg: 0.4668  loss_rpn_cls: 0.04136  loss_rpn_loc: 0.05418  time: 0.9040  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[04/03 05:05:28] d2.utils.events INFO:  eta: 2:21:34  iter: 1219  total_loss: 0.6935  loss_cls: 0.258  loss_box_reg: 0.3601  loss_rpn_cls: 0.03358  loss_rpn_loc: 0.03935  time: 0.9049  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[04/03 05:05:46] d2.utils.events INFO:  eta: 2:20:50  iter: 1239  total_loss: 0.7423  loss_cls: 0.2588  loss_box_reg: 0.413  loss_rpn_cls: 0.02494  loss_rpn_loc: 0.04359  time: 0.9047  data_time: 0.0023  lr: 0.0002  max_mem: 15384M
[04/03 05:06:05] d2.utils.events INFO:  eta: 2:20:28  iter: 1259  total_loss: 0.832  loss_cls: 0.2776  loss_box_reg: 0.4455  loss_rpn_cls: 0.03347  loss_rpn_loc: 0.04304  time: 0.9054  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[04/03 05:06:23] d2.utils.events INFO:  eta: 2:20:42  iter: 1279  total_loss: 0.803  loss_cls: 0.2619  loss_box_reg: 0.4304  loss_rpn_cls: 0.03173  loss_rpn_loc: 0.03573  time: 0.9059  data_time: 0.0024  lr: 0.0002  max_mem: 15384M
[04/03 05:06:41] d2.utils.events INFO:  eta: 2:20:04  iter: 1299  total_loss: 0.8058  loss_cls: 0.2673  loss_box_reg: 0.4036  loss_rpn_cls: 0.03031  loss_rpn_loc: 0.04476  time: 0.9052  data_time: 0.0022  lr: 0.0002  max_mem: 15384M
[04/03 05:06:43] d2.engine.hooks INFO: Overall training speed: 1299 iterations in 0:19:36 (0.9061 s / it)
[04/03 05:06:43] d2.engine.hooks INFO: Total training time: 0:20:47 (0:01:10 on hooks)
[04/03 05:06:43] d2.utils.events INFO:  eta: 2:20:02  iter: 1301  total_loss: 0.8058  loss_cls: 0.2673  loss_box_reg: 0.4036  loss_rpn_cls: 0.03031  loss_rpn_loc: 0.04476  time: 0.9052  data_time: 0.0022  lr: 0.0002  max_mem: 15384M
[04/03 05:07:33] detectron2 INFO: Rank of current process: 0. World size: 1
[04/03 05:07:33] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/03 05:07:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/03 05:07:33] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(25000,[39m[38;5;141m [39m[38;5;141m30000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/03 05:07:33] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/03 05:07:33] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/03 05:07:33] d2.utils.env INFO: Using a generated random seed 35188496
[04/03 05:07:36] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/03 05:07:36] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_base_instances_visdrone.json
[04/03 05:07:36] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/03 05:07:36] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/03 05:07:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/03 05:07:36] d2.data.build INFO: Using training sampler TrainingSampler
[04/03 05:07:36] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/03 05:07:36] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/03 05:07:36] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/03 05:07:36] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/03 05:07:36] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/03 05:07:36] d2.engine.train_loop INFO: Starting training from iteration 0
[04/03 05:07:55] d2.utils.events INFO:  eta: 7:51:51  iter: 19  total_loss: 5.303  loss_cls: 4.369  loss_box_reg: 0.186  loss_rpn_cls: 0.6929  loss_rpn_loc: 0.07595  time: 0.8834  data_time: 0.0146  lr: 3.9962e-06  max_mem: 15129M
[04/03 05:08:13] d2.utils.events INFO:  eta: 7:58:40  iter: 39  total_loss: 4.829  loss_cls: 3.998  loss_box_reg: 0.184  loss_rpn_cls: 0.6912  loss_rpn_loc: 0.06622  time: 0.9022  data_time: 0.0024  lr: 7.9922e-06  max_mem: 15129M
[04/03 05:08:31] d2.utils.events INFO:  eta: 7:58:22  iter: 59  total_loss: 3.925  loss_cls: 2.919  loss_box_reg: 0.1899  loss_rpn_cls: 0.6884  loss_rpn_loc: 0.05873  time: 0.9034  data_time: 0.0024  lr: 1.1988e-05  max_mem: 15129M
[04/03 05:08:49] d2.utils.events INFO:  eta: 7:57:14  iter: 79  total_loss: 1.722  loss_cls: 0.7863  loss_box_reg: 0.1268  loss_rpn_cls: 0.6862  loss_rpn_loc: 0.05867  time: 0.9007  data_time: 0.0023  lr: 1.5984e-05  max_mem: 15391M
[04/03 05:09:07] d2.utils.events INFO:  eta: 7:54:54  iter: 99  total_loss: 1.449  loss_cls: 0.4986  loss_box_reg: 0.1303  loss_rpn_cls: 0.6768  loss_rpn_loc: 0.08286  time: 0.9007  data_time: 0.0023  lr: 1.998e-05  max_mem: 15391M
[04/03 05:09:24] d2.utils.events INFO:  eta: 7:53:14  iter: 119  total_loss: 1.246  loss_cls: 0.354  loss_box_reg: 0.1319  loss_rpn_cls: 0.6458  loss_rpn_loc: 0.07569  time: 0.8947  data_time: 0.0024  lr: 2.3976e-05  max_mem: 15391M
[04/03 05:09:42] d2.utils.events INFO:  eta: 7:48:53  iter: 139  total_loss: 1.119  loss_cls: 0.3495  loss_box_reg: 0.1855  loss_rpn_cls: 0.5084  loss_rpn_loc: 0.06278  time: 0.8955  data_time: 0.0023  lr: 2.7972e-05  max_mem: 15391M
[04/03 05:10:00] d2.utils.events INFO:  eta: 7:44:15  iter: 159  total_loss: 1.036  loss_cls: 0.3822  loss_box_reg: 0.316  loss_rpn_cls: 0.2868  loss_rpn_loc: 0.05894  time: 0.8940  data_time: 0.0024  lr: 3.1968e-05  max_mem: 15391M
[04/03 05:10:18] d2.utils.events INFO:  eta: 7:41:24  iter: 179  total_loss: 1.384  loss_cls: 0.4706  loss_box_reg: 0.4973  loss_rpn_cls: 0.2614  loss_rpn_loc: 0.0611  time: 0.8943  data_time: 0.0024  lr: 3.5964e-05  max_mem: 15391M
[04/03 05:10:36] d2.utils.events INFO:  eta: 7:40:21  iter: 199  total_loss: 1.506  loss_cls: 0.5241  loss_box_reg: 0.6136  loss_rpn_cls: 0.243  loss_rpn_loc: 0.07819  time: 0.8935  data_time: 0.0024  lr: 3.996e-05  max_mem: 15391M
[04/03 05:10:53] d2.utils.events INFO:  eta: 7:38:05  iter: 219  total_loss: 1.781  loss_cls: 0.7087  loss_box_reg: 0.6866  loss_rpn_cls: 0.2213  loss_rpn_loc: 0.09093  time: 0.8882  data_time: 0.0023  lr: 4.3956e-05  max_mem: 15391M
[04/03 05:11:10] d2.utils.events INFO:  eta: 7:36:53  iter: 239  total_loss: 1.532  loss_cls: 0.5796  loss_box_reg: 0.663  loss_rpn_cls: 0.1678  loss_rpn_loc: 0.06226  time: 0.8879  data_time: 0.0024  lr: 4.7952e-05  max_mem: 15391M
[04/03 05:11:28] d2.utils.events INFO:  eta: 7:36:35  iter: 259  total_loss: 1.287  loss_cls: 0.4608  loss_box_reg: 0.5938  loss_rpn_cls: 0.1236  loss_rpn_loc: 0.05213  time: 0.8871  data_time: 0.0023  lr: 5.1948e-05  max_mem: 15391M
[04/03 05:11:45] d2.utils.events INFO:  eta: 7:36:17  iter: 279  total_loss: 1.475  loss_cls: 0.5519  loss_box_reg: 0.685  loss_rpn_cls: 0.1229  loss_rpn_loc: 0.05403  time: 0.8861  data_time: 0.0024  lr: 5.5944e-05  max_mem: 15391M
[04/03 05:12:03] d2.utils.events INFO:  eta: 7:34:44  iter: 299  total_loss: 1.245  loss_cls: 0.4918  loss_box_reg: 0.6268  loss_rpn_cls: 0.1321  loss_rpn_loc: 0.06332  time: 0.8842  data_time: 0.0025  lr: 5.994e-05  max_mem: 15391M
[04/03 05:12:20] d2.utils.events INFO:  eta: 7:34:19  iter: 319  total_loss: 1.609  loss_cls: 0.6007  loss_box_reg: 0.7385  loss_rpn_cls: 0.1255  loss_rpn_loc: 0.06122  time: 0.8827  data_time: 0.0025  lr: 6.3936e-05  max_mem: 15391M
[04/03 05:12:38] d2.utils.events INFO:  eta: 7:34:01  iter: 339  total_loss: 1.267  loss_cls: 0.4588  loss_box_reg: 0.7314  loss_rpn_cls: 0.1044  loss_rpn_loc: 0.05097  time: 0.8837  data_time: 0.0023  lr: 6.7932e-05  max_mem: 15391M
[04/03 05:12:55] d2.utils.events INFO:  eta: 7:33:44  iter: 359  total_loss: 1.274  loss_cls: 0.42  loss_box_reg: 0.7072  loss_rpn_cls: 0.1014  loss_rpn_loc: 0.06808  time: 0.8830  data_time: 0.0024  lr: 7.1928e-05  max_mem: 15391M
[04/03 05:13:13] d2.utils.events INFO:  eta: 7:33:33  iter: 379  total_loss: 1.309  loss_cls: 0.4683  loss_box_reg: 0.6216  loss_rpn_cls: 0.06128  loss_rpn_loc: 0.04992  time: 0.8828  data_time: 0.0024  lr: 7.5924e-05  max_mem: 15391M
[04/03 05:13:31] d2.utils.events INFO:  eta: 7:33:20  iter: 399  total_loss: 1.377  loss_cls: 0.4628  loss_box_reg: 0.774  loss_rpn_cls: 0.07752  loss_rpn_loc: 0.06007  time: 0.8824  data_time: 0.0024  lr: 7.992e-05  max_mem: 15391M
[04/03 05:13:48] d2.utils.events INFO:  eta: 7:32:57  iter: 419  total_loss: 1.479  loss_cls: 0.4817  loss_box_reg: 0.838  loss_rpn_cls: 0.08678  loss_rpn_loc: 0.06494  time: 0.8810  data_time: 0.0024  lr: 8.3916e-05  max_mem: 15391M
[04/03 05:14:05] d2.utils.events INFO:  eta: 7:32:33  iter: 439  total_loss: 1.413  loss_cls: 0.4247  loss_box_reg: 0.7804  loss_rpn_cls: 0.09821  loss_rpn_loc: 0.06489  time: 0.8802  data_time: 0.0023  lr: 8.7912e-05  max_mem: 15391M
[04/03 05:14:22] d2.utils.events INFO:  eta: 7:32:15  iter: 459  total_loss: 1.325  loss_cls: 0.4532  loss_box_reg: 0.6939  loss_rpn_cls: 0.06699  loss_rpn_loc: 0.05596  time: 0.8797  data_time: 0.0022  lr: 9.1908e-05  max_mem: 15391M
[04/03 05:14:40] d2.utils.events INFO:  eta: 7:31:57  iter: 479  total_loss: 1.106  loss_cls: 0.3933  loss_box_reg: 0.5863  loss_rpn_cls: 0.0777  loss_rpn_loc: 0.05733  time: 0.8800  data_time: 0.0023  lr: 9.5904e-05  max_mem: 15391M
[04/03 05:14:58] d2.utils.events INFO:  eta: 7:31:39  iter: 499  total_loss: 1.413  loss_cls: 0.4564  loss_box_reg: 0.8145  loss_rpn_cls: 0.09243  loss_rpn_loc: 0.06688  time: 0.8799  data_time: 0.0023  lr: 9.99e-05  max_mem: 15391M
[04/03 05:15:17] d2.utils.events INFO:  eta: 7:31:34  iter: 519  total_loss: 1.12  loss_cls: 0.3691  loss_box_reg: 0.5854  loss_rpn_cls: 0.07986  loss_rpn_loc: 0.05423  time: 0.8820  data_time: 0.0023  lr: 0.0001039  max_mem: 15391M
[04/03 05:15:34] d2.utils.events INFO:  eta: 7:31:16  iter: 539  total_loss: 1.182  loss_cls: 0.3952  loss_box_reg: 0.658  loss_rpn_cls: 0.05755  loss_rpn_loc: 0.04887  time: 0.8820  data_time: 0.0025  lr: 0.00010789  max_mem: 15391M
[04/03 05:15:51] d2.utils.events INFO:  eta: 7:30:25  iter: 559  total_loss: 1.154  loss_cls: 0.3725  loss_box_reg: 0.636  loss_rpn_cls: 0.05255  loss_rpn_loc: 0.04807  time: 0.8807  data_time: 0.0023  lr: 0.00011189  max_mem: 15391M
[04/03 05:16:08] d2.utils.events INFO:  eta: 7:29:44  iter: 579  total_loss: 1.04  loss_cls: 0.3549  loss_box_reg: 0.623  loss_rpn_cls: 0.03953  loss_rpn_loc: 0.03688  time: 0.8799  data_time: 0.0024  lr: 0.00011588  max_mem: 15391M
[04/03 05:16:26] d2.utils.events INFO:  eta: 7:29:26  iter: 599  total_loss: 1.324  loss_cls: 0.4447  loss_box_reg: 0.7202  loss_rpn_cls: 0.08941  loss_rpn_loc: 0.06404  time: 0.8790  data_time: 0.0023  lr: 0.00011988  max_mem: 15391M
[04/03 05:16:43] d2.utils.events INFO:  eta: 7:29:08  iter: 619  total_loss: 0.9792  loss_cls: 0.3228  loss_box_reg: 0.5441  loss_rpn_cls: 0.05864  loss_rpn_loc: 0.04955  time: 0.8792  data_time: 0.0024  lr: 0.00012388  max_mem: 15391M
[04/03 05:17:01] d2.utils.events INFO:  eta: 7:28:55  iter: 639  total_loss: 1.053  loss_cls: 0.3286  loss_box_reg: 0.57  loss_rpn_cls: 0.0476  loss_rpn_loc: 0.04514  time: 0.8797  data_time: 0.0023  lr: 0.00012787  max_mem: 15391M
[04/03 05:17:18] d2.utils.events INFO:  eta: 7:28:11  iter: 659  total_loss: 1.057  loss_cls: 0.3902  loss_box_reg: 0.5885  loss_rpn_cls: 0.04541  loss_rpn_loc: 0.05034  time: 0.8789  data_time: 0.0023  lr: 0.00013187  max_mem: 15391M
[04/03 05:17:36] d2.utils.events INFO:  eta: 7:27:57  iter: 679  total_loss: 0.9211  loss_cls: 0.2893  loss_box_reg: 0.524  loss_rpn_cls: 0.04951  loss_rpn_loc: 0.05568  time: 0.8785  data_time: 0.0023  lr: 0.00013586  max_mem: 15391M
[04/03 05:17:54] d2.utils.events INFO:  eta: 7:28:02  iter: 699  total_loss: 1.106  loss_cls: 0.3802  loss_box_reg: 0.6228  loss_rpn_cls: 0.0531  loss_rpn_loc: 0.05029  time: 0.8792  data_time: 0.0024  lr: 0.00013986  max_mem: 15391M
[04/03 05:18:11] d2.utils.events INFO:  eta: 7:28:03  iter: 719  total_loss: 1.07  loss_cls: 0.3626  loss_box_reg: 0.5791  loss_rpn_cls: 0.05321  loss_rpn_loc: 0.06115  time: 0.8793  data_time: 0.0024  lr: 0.00014386  max_mem: 15391M
[04/03 05:18:29] d2.utils.events INFO:  eta: 7:27:22  iter: 739  total_loss: 0.9986  loss_cls: 0.3199  loss_box_reg: 0.5595  loss_rpn_cls: 0.04241  loss_rpn_loc: 0.04318  time: 0.8790  data_time: 0.0024  lr: 0.00014785  max_mem: 15391M
[04/03 05:18:47] d2.utils.events INFO:  eta: 7:27:04  iter: 759  total_loss: 1.075  loss_cls: 0.3492  loss_box_reg: 0.5606  loss_rpn_cls: 0.04844  loss_rpn_loc: 0.05354  time: 0.8792  data_time: 0.0024  lr: 0.00015185  max_mem: 15391M
[04/03 05:19:04] d2.utils.events INFO:  eta: 7:26:13  iter: 779  total_loss: 0.8362  loss_cls: 0.2797  loss_box_reg: 0.5156  loss_rpn_cls: 0.04753  loss_rpn_loc: 0.04198  time: 0.8783  data_time: 0.0024  lr: 0.00015584  max_mem: 15391M
[04/03 05:19:21] d2.utils.events INFO:  eta: 7:25:56  iter: 799  total_loss: 0.9048  loss_cls: 0.3122  loss_box_reg: 0.4988  loss_rpn_cls: 0.04897  loss_rpn_loc: 0.0405  time: 0.8782  data_time: 0.0024  lr: 0.00015984  max_mem: 15391M
[04/03 05:19:39] d2.utils.events INFO:  eta: 7:25:53  iter: 819  total_loss: 0.9305  loss_cls: 0.3609  loss_box_reg: 0.4754  loss_rpn_cls: 0.04869  loss_rpn_loc: 0.04611  time: 0.8789  data_time: 0.0025  lr: 0.00016384  max_mem: 15391M
[04/03 05:19:56] d2.utils.events INFO:  eta: 7:25:09  iter: 839  total_loss: 1.026  loss_cls: 0.3682  loss_box_reg: 0.508  loss_rpn_cls: 0.04832  loss_rpn_loc: 0.05587  time: 0.8784  data_time: 0.0024  lr: 0.00016783  max_mem: 15391M
[04/03 05:20:14] d2.utils.events INFO:  eta: 7:25:03  iter: 859  total_loss: 0.9288  loss_cls: 0.3745  loss_box_reg: 0.4906  loss_rpn_cls: 0.06152  loss_rpn_loc: 0.05185  time: 0.8788  data_time: 0.0023  lr: 0.00017183  max_mem: 15391M
[04/03 05:20:32] d2.utils.events INFO:  eta: 7:24:45  iter: 879  total_loss: 0.796  loss_cls: 0.2809  loss_box_reg: 0.4381  loss_rpn_cls: 0.04003  loss_rpn_loc: 0.0467  time: 0.8788  data_time: 0.0022  lr: 0.00017582  max_mem: 15391M
[04/03 05:20:50] d2.utils.events INFO:  eta: 7:24:42  iter: 899  total_loss: 0.9169  loss_cls: 0.3275  loss_box_reg: 0.4897  loss_rpn_cls: 0.05  loss_rpn_loc: 0.05169  time: 0.8792  data_time: 0.0024  lr: 0.00017982  max_mem: 15391M
[04/03 05:21:07] d2.utils.events INFO:  eta: 7:23:43  iter: 919  total_loss: 0.837  loss_cls: 0.29  loss_box_reg: 0.4738  loss_rpn_cls: 0.04247  loss_rpn_loc: 0.04028  time: 0.8785  data_time: 0.0023  lr: 0.00018382  max_mem: 15391M
[04/03 05:21:24] d2.utils.events INFO:  eta: 7:23:15  iter: 939  total_loss: 0.9904  loss_cls: 0.3493  loss_box_reg: 0.5333  loss_rpn_cls: 0.04733  loss_rpn_loc: 0.05236  time: 0.8783  data_time: 0.0024  lr: 0.00018781  max_mem: 15391M
[04/03 05:21:42] d2.utils.events INFO:  eta: 7:23:14  iter: 959  total_loss: 0.9307  loss_cls: 0.3159  loss_box_reg: 0.5128  loss_rpn_cls: 0.03784  loss_rpn_loc: 0.04694  time: 0.8788  data_time: 0.0024  lr: 0.00019181  max_mem: 15391M
[04/03 05:22:00] d2.utils.events INFO:  eta: 7:22:50  iter: 979  total_loss: 0.9601  loss_cls: 0.3386  loss_box_reg: 0.5269  loss_rpn_cls: 0.03953  loss_rpn_loc: 0.06201  time: 0.8791  data_time: 0.0022  lr: 0.0001958  max_mem: 15391M
[04/03 05:22:19] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 05:22:19] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |
[04/03 05:22:19] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 05:22:19] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 05:22:19] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 05:22:19] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 05:22:20] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0006 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:01:04
[04/03 05:22:26] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:59
[04/03 05:22:31] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:54
[04/03 05:22:36] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:49
[04/03 05:22:41] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:44
[04/03 05:22:46] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1198 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:39
[04/03 05:22:51] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1198 s/iter. Eval: 0.0008 s/iter. Total: 0.1215 s/iter. ETA=0:00:34
[04/03 05:22:56] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1198 s/iter. Eval: 0.0007 s/iter. Total: 0.1215 s/iter. ETA=0:00:29
[04/03 05:23:01] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1198 s/iter. Eval: 0.0007 s/iter. Total: 0.1214 s/iter. ETA=0:00:24
[04/03 05:23:06] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0006 s/iter. Total: 0.1214 s/iter. ETA=0:00:19
[04/03 05:23:11] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0006 s/iter. Total: 0.1214 s/iter. ETA=0:00:14
[04/03 05:23:16] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0005 s/iter. Total: 0.1213 s/iter. ETA=0:00:09
[04/03 05:23:22] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0005 s/iter. Total: 0.1213 s/iter. ETA=0:00:04
[04/03 05:23:26] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.952577 (0.121460 s / iter per device, on 1 devices)
[04/03 05:23:26] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.119853 s / iter per device, on 1 devices)
[04/03 05:23:26] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 05:23:26] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 05:23:26] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 05:23:26] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 05:23:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.56 seconds.
[04/03 05:23:27] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 05:23:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.09 seconds.
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 3.933 | 8.339  | 3.482  | 1.371 | 7.886 | 12.947 |
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 05:23:27] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP    | category   | AP    |
|:-----------|:-------|:----------------|:------|:-----------|:------|
| pedestrian | 3.787  | people          | 2.057 | bicycle    | 1.446 |
| car        | 26.084 | van             | 6.422 | truck      | 0.000 |
| tricycle   | 1.383  | awning-tricycle | 0.167 | bus        | 0.000 |
| motor      | 1.919  | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan    | cng             | nan   | manual-van | nan   |
[04/03 05:23:27] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 05:23:27] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 05:23:27] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 05:23:27] d2.evaluation.testing INFO: copypaste: 3.9331,8.3394,3.4818,1.3710,7.8864,12.9470,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 05:23:27] d2.utils.events INFO:  eta: 7:22:58  iter: 999  total_loss: 0.8606  loss_cls: 0.3107  loss_box_reg: 0.4599  loss_rpn_cls: 0.03495  loss_rpn_loc: 0.03831  time: 0.8795  data_time: 0.0023  lr: 0.0001998  max_mem: 15391M
[04/03 05:23:45] d2.utils.events INFO:  eta: 7:22:41  iter: 1019  total_loss: 0.6868  loss_cls: 0.2455  loss_box_reg: 0.4106  loss_rpn_cls: 0.03717  loss_rpn_loc: 0.03308  time: 0.8795  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:24:02] d2.utils.events INFO:  eta: 7:21:52  iter: 1039  total_loss: 0.8892  loss_cls: 0.2968  loss_box_reg: 0.466  loss_rpn_cls: 0.04773  loss_rpn_loc: 0.05053  time: 0.8795  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:24:20] d2.utils.events INFO:  eta: 7:21:29  iter: 1059  total_loss: 0.9231  loss_cls: 0.3378  loss_box_reg: 0.4406  loss_rpn_cls: 0.03706  loss_rpn_loc: 0.0485  time: 0.8800  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:24:38] d2.utils.events INFO:  eta: 7:20:47  iter: 1079  total_loss: 0.764  loss_cls: 0.2613  loss_box_reg: 0.431  loss_rpn_cls: 0.03525  loss_rpn_loc: 0.05089  time: 0.8798  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:24:56] d2.utils.events INFO:  eta: 7:20:37  iter: 1099  total_loss: 0.6739  loss_cls: 0.2047  loss_box_reg: 0.3706  loss_rpn_cls: 0.03244  loss_rpn_loc: 0.04175  time: 0.8799  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:25:13] d2.utils.events INFO:  eta: 7:20:35  iter: 1119  total_loss: 0.7423  loss_cls: 0.2651  loss_box_reg: 0.4014  loss_rpn_cls: 0.03949  loss_rpn_loc: 0.05108  time: 0.8800  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:25:30] d2.utils.events INFO:  eta: 7:19:53  iter: 1139  total_loss: 0.8855  loss_cls: 0.2784  loss_box_reg: 0.4587  loss_rpn_cls: 0.03803  loss_rpn_loc: 0.05896  time: 0.8794  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:25:48] d2.utils.events INFO:  eta: 7:20:11  iter: 1159  total_loss: 0.6986  loss_cls: 0.2486  loss_box_reg: 0.3674  loss_rpn_cls: 0.03371  loss_rpn_loc: 0.04266  time: 0.8796  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:26:06] d2.utils.events INFO:  eta: 7:19:59  iter: 1179  total_loss: 0.6784  loss_cls: 0.2236  loss_box_reg: 0.3854  loss_rpn_cls: 0.02284  loss_rpn_loc: 0.03639  time: 0.8800  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:26:25] d2.utils.events INFO:  eta: 7:19:50  iter: 1199  total_loss: 0.8796  loss_cls: 0.2713  loss_box_reg: 0.5115  loss_rpn_cls: 0.03043  loss_rpn_loc: 0.04756  time: 0.8806  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:26:42] d2.utils.events INFO:  eta: 7:19:52  iter: 1219  total_loss: 0.813  loss_cls: 0.3062  loss_box_reg: 0.4148  loss_rpn_cls: 0.02866  loss_rpn_loc: 0.03917  time: 0.8803  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:27:00] d2.utils.events INFO:  eta: 7:19:30  iter: 1239  total_loss: 0.6139  loss_cls: 0.2131  loss_box_reg: 0.3592  loss_rpn_cls: 0.02156  loss_rpn_loc: 0.03348  time: 0.8803  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 05:27:17] d2.utils.events INFO:  eta: 7:19:12  iter: 1259  total_loss: 0.6394  loss_cls: 0.2142  loss_box_reg: 0.3651  loss_rpn_cls: 0.0257  loss_rpn_loc: 0.02815  time: 0.8801  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:27:35] d2.utils.events INFO:  eta: 7:18:59  iter: 1279  total_loss: 0.8766  loss_cls: 0.2984  loss_box_reg: 0.4548  loss_rpn_cls: 0.04182  loss_rpn_loc: 0.05249  time: 0.8803  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:27:52] d2.utils.events INFO:  eta: 7:19:33  iter: 1299  total_loss: 0.7118  loss_cls: 0.2472  loss_box_reg: 0.4013  loss_rpn_cls: 0.0187  loss_rpn_loc: 0.0412  time: 0.8801  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:28:10] d2.utils.events INFO:  eta: 7:19:37  iter: 1319  total_loss: 0.7554  loss_cls: 0.2559  loss_box_reg: 0.4271  loss_rpn_cls: 0.03427  loss_rpn_loc: 0.05603  time: 0.8804  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:28:28] d2.utils.events INFO:  eta: 7:19:23  iter: 1339  total_loss: 0.6656  loss_cls: 0.1913  loss_box_reg: 0.3673  loss_rpn_cls: 0.02049  loss_rpn_loc: 0.03514  time: 0.8805  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 05:28:45] d2.utils.events INFO:  eta: 7:19:03  iter: 1359  total_loss: 0.6981  loss_cls: 0.2455  loss_box_reg: 0.386  loss_rpn_cls: 0.02978  loss_rpn_loc: 0.03845  time: 0.8800  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:29:03] d2.utils.events INFO:  eta: 7:18:45  iter: 1379  total_loss: 0.7968  loss_cls: 0.2803  loss_box_reg: 0.4262  loss_rpn_cls: 0.03254  loss_rpn_loc: 0.04252  time: 0.8802  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:29:21] d2.utils.events INFO:  eta: 7:18:28  iter: 1399  total_loss: 0.76  loss_cls: 0.2682  loss_box_reg: 0.4141  loss_rpn_cls: 0.02924  loss_rpn_loc: 0.04867  time: 0.8805  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 05:29:39] d2.utils.events INFO:  eta: 7:18:33  iter: 1419  total_loss: 0.6566  loss_cls: 0.2269  loss_box_reg: 0.3594  loss_rpn_cls: 0.02239  loss_rpn_loc: 0.03874  time: 0.8808  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:29:57] d2.utils.events INFO:  eta: 7:18:30  iter: 1439  total_loss: 0.6926  loss_cls: 0.2332  loss_box_reg: 0.3783  loss_rpn_cls: 0.03104  loss_rpn_loc: 0.04365  time: 0.8810  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 05:30:14] d2.utils.events INFO:  eta: 7:17:57  iter: 1459  total_loss: 0.7525  loss_cls: 0.2705  loss_box_reg: 0.4064  loss_rpn_cls: 0.03  loss_rpn_loc: 0.04488  time: 0.8806  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 05:30:33] d2.utils.events INFO:  eta: 7:17:52  iter: 1479  total_loss: 0.7254  loss_cls: 0.2427  loss_box_reg: 0.394  loss_rpn_cls: 0.02174  loss_rpn_loc: 0.03461  time: 0.8811  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:30:51] d2.utils.events INFO:  eta: 7:17:37  iter: 1499  total_loss: 0.664  loss_cls: 0.236  loss_box_reg: 0.363  loss_rpn_cls: 0.0202  loss_rpn_loc: 0.0337  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:31:08] d2.utils.events INFO:  eta: 7:17:24  iter: 1519  total_loss: 0.6727  loss_cls: 0.222  loss_box_reg: 0.3906  loss_rpn_cls: 0.01632  loss_rpn_loc: 0.03359  time: 0.8813  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:31:26] d2.utils.events INFO:  eta: 7:17:30  iter: 1539  total_loss: 0.6344  loss_cls: 0.2029  loss_box_reg: 0.3592  loss_rpn_cls: 0.01829  loss_rpn_loc: 0.03078  time: 0.8817  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:31:45] d2.utils.events INFO:  eta: 7:17:20  iter: 1559  total_loss: 0.7401  loss_cls: 0.236  loss_box_reg: 0.408  loss_rpn_cls: 0.02246  loss_rpn_loc: 0.0527  time: 0.8821  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:32:03] d2.utils.events INFO:  eta: 7:17:29  iter: 1579  total_loss: 0.5821  loss_cls: 0.1854  loss_box_reg: 0.3367  loss_rpn_cls: 0.01791  loss_rpn_loc: 0.03514  time: 0.8824  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:32:21] d2.utils.events INFO:  eta: 7:17:20  iter: 1599  total_loss: 0.7988  loss_cls: 0.2709  loss_box_reg: 0.4284  loss_rpn_cls: 0.0295  loss_rpn_loc: 0.03408  time: 0.8825  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:32:39] d2.utils.events INFO:  eta: 7:17:19  iter: 1619  total_loss: 0.6227  loss_cls: 0.2219  loss_box_reg: 0.3626  loss_rpn_cls: 0.02181  loss_rpn_loc: 0.03871  time: 0.8828  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:32:57] d2.utils.events INFO:  eta: 7:17:14  iter: 1639  total_loss: 0.751  loss_cls: 0.2427  loss_box_reg: 0.3641  loss_rpn_cls: 0.0337  loss_rpn_loc: 0.05497  time: 0.8831  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:33:15] d2.utils.events INFO:  eta: 7:17:21  iter: 1659  total_loss: 0.7322  loss_cls: 0.2781  loss_box_reg: 0.408  loss_rpn_cls: 0.03066  loss_rpn_loc: 0.04772  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:33:33] d2.utils.events INFO:  eta: 7:17:03  iter: 1679  total_loss: 0.6255  loss_cls: 0.2108  loss_box_reg: 0.3465  loss_rpn_cls: 0.02745  loss_rpn_loc: 0.03601  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:33:50] d2.utils.events INFO:  eta: 7:16:13  iter: 1699  total_loss: 0.7631  loss_cls: 0.2662  loss_box_reg: 0.4296  loss_rpn_cls: 0.02568  loss_rpn_loc: 0.04893  time: 0.8833  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:34:08] d2.utils.events INFO:  eta: 7:15:33  iter: 1719  total_loss: 0.6425  loss_cls: 0.2286  loss_box_reg: 0.3346  loss_rpn_cls: 0.01934  loss_rpn_loc: 0.03735  time: 0.8831  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:34:26] d2.utils.events INFO:  eta: 7:15:32  iter: 1739  total_loss: 0.5003  loss_cls: 0.1713  loss_box_reg: 0.3098  loss_rpn_cls: 0.01782  loss_rpn_loc: 0.02622  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:34:44] d2.utils.events INFO:  eta: 7:15:19  iter: 1759  total_loss: 0.6571  loss_cls: 0.2219  loss_box_reg: 0.3936  loss_rpn_cls: 0.02338  loss_rpn_loc: 0.04184  time: 0.8832  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:35:01] d2.utils.events INFO:  eta: 7:15:25  iter: 1779  total_loss: 0.6526  loss_cls: 0.2204  loss_box_reg: 0.3518  loss_rpn_cls: 0.0175  loss_rpn_loc: 0.04018  time: 0.8832  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:35:19] d2.utils.events INFO:  eta: 7:15:07  iter: 1799  total_loss: 0.6528  loss_cls: 0.2128  loss_box_reg: 0.3574  loss_rpn_cls: 0.01788  loss_rpn_loc: 0.03721  time: 0.8832  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:35:37] d2.utils.events INFO:  eta: 7:14:49  iter: 1819  total_loss: 0.5696  loss_cls: 0.2076  loss_box_reg: 0.3228  loss_rpn_cls: 0.01582  loss_rpn_loc: 0.04351  time: 0.8836  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:35:55] d2.utils.events INFO:  eta: 7:15:07  iter: 1839  total_loss: 0.6552  loss_cls: 0.2226  loss_box_reg: 0.3764  loss_rpn_cls: 0.01948  loss_rpn_loc: 0.04128  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:36:13] d2.utils.events INFO:  eta: 7:14:39  iter: 1859  total_loss: 0.6291  loss_cls: 0.1811  loss_box_reg: 0.3797  loss_rpn_cls: 0.01673  loss_rpn_loc: 0.03052  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:36:31] d2.utils.events INFO:  eta: 7:14:31  iter: 1879  total_loss: 0.5413  loss_cls: 0.1661  loss_box_reg: 0.3121  loss_rpn_cls: 0.02031  loss_rpn_loc: 0.02733  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:36:49] d2.utils.events INFO:  eta: 7:13:53  iter: 1899  total_loss: 0.757  loss_cls: 0.2567  loss_box_reg: 0.4373  loss_rpn_cls: 0.02672  loss_rpn_loc: 0.03701  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:37:06] d2.utils.events INFO:  eta: 7:14:18  iter: 1919  total_loss: 0.6271  loss_cls: 0.1995  loss_box_reg: 0.3836  loss_rpn_cls: 0.01481  loss_rpn_loc: 0.03007  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:37:25] d2.utils.events INFO:  eta: 7:14:18  iter: 1939  total_loss: 0.5681  loss_cls: 0.2316  loss_box_reg: 0.2973  loss_rpn_cls: 0.01767  loss_rpn_loc: 0.03582  time: 0.8842  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:37:42] d2.utils.events INFO:  eta: 7:13:54  iter: 1959  total_loss: 0.5893  loss_cls: 0.1915  loss_box_reg: 0.3338  loss_rpn_cls: 0.02049  loss_rpn_loc: 0.03014  time: 0.8840  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 05:38:00] d2.utils.events INFO:  eta: 7:13:42  iter: 1979  total_loss: 0.519  loss_cls: 0.1823  loss_box_reg: 0.3112  loss_rpn_cls: 0.01551  loss_rpn_loc: 0.03577  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:38:18] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 05:38:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 05:38:18] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 05:38:18] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 05:38:18] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 05:38:20] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:01:04
[04/03 05:38:25] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:59
[04/03 05:38:30] d2.evaluation.evaluator INFO: Inference done 94/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0020 s/iter. Total: 0.1216 s/iter. ETA=0:00:55
[04/03 05:38:35] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0014 s/iter. Total: 0.1210 s/iter. ETA=0:00:49
[04/03 05:38:40] d2.evaluation.evaluator INFO: Inference done 178/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0011 s/iter. Total: 0.1208 s/iter. ETA=0:00:44
[04/03 05:38:45] d2.evaluation.evaluator INFO: Inference done 220/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0009 s/iter. Total: 0.1207 s/iter. ETA=0:00:39
[04/03 05:38:50] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0008 s/iter. Total: 0.1206 s/iter. ETA=0:00:34
[04/03 05:38:55] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1206 s/iter. ETA=0:00:29
[04/03 05:39:00] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1205 s/iter. ETA=0:00:24
[04/03 05:39:05] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1205 s/iter. ETA=0:00:19
[04/03 05:39:10] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1205 s/iter. ETA=0:00:14
[04/03 05:39:15] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0005 s/iter. Total: 0.1205 s/iter. ETA=0:00:09
[04/03 05:39:20] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:04
[04/03 05:39:24] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.471781 (0.120574 s / iter per device, on 1 devices)
[04/03 05:39:24] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118921 s / iter per device, on 1 devices)
[04/03 05:39:24] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 05:39:24] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 05:39:25] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 05:39:25] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.50 seconds.
[04/03 05:39:25] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 05:39:25] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 5.646 | 11.451 | 5.075  | 2.024 | 11.218 | 15.363 |
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 05:39:25] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.434  | people          | 2.968  | bicycle    | 1.363 |
| car        | 31.804 | van             | 12.330 | truck      | 0.000 |
| tricycle   | 3.148  | awning-tricycle | 0.953  | bus        | 0.000 |
| motor      | 3.909  | others          | 0.192  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 05:39:25] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 05:39:25] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 05:39:25] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 05:39:25] d2.evaluation.testing INFO: copypaste: 5.6456,11.4509,5.0750,2.0243,11.2177,15.3629,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 05:39:25] d2.utils.events INFO:  eta: 7:13:18  iter: 1999  total_loss: 0.5711  loss_cls: 0.1823  loss_box_reg: 0.3346  loss_rpn_cls: 0.01725  loss_rpn_loc: 0.03317  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:39:43] d2.utils.events INFO:  eta: 7:13:06  iter: 2019  total_loss: 0.5956  loss_cls: 0.2181  loss_box_reg: 0.3368  loss_rpn_cls: 0.02178  loss_rpn_loc: 0.03952  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:40:01] d2.utils.events INFO:  eta: 7:12:49  iter: 2039  total_loss: 0.6615  loss_cls: 0.2291  loss_box_reg: 0.3793  loss_rpn_cls: 0.02979  loss_rpn_loc: 0.04136  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:40:19] d2.utils.events INFO:  eta: 7:12:33  iter: 2059  total_loss: 0.5839  loss_cls: 0.1814  loss_box_reg: 0.3467  loss_rpn_cls: 0.0163  loss_rpn_loc: 0.03469  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:40:37] d2.utils.events INFO:  eta: 7:13:19  iter: 2079  total_loss: 0.5834  loss_cls: 0.1923  loss_box_reg: 0.338  loss_rpn_cls: 0.01675  loss_rpn_loc: 0.03374  time: 0.8845  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:40:55] d2.utils.events INFO:  eta: 7:12:56  iter: 2099  total_loss: 0.571  loss_cls: 0.1968  loss_box_reg: 0.334  loss_rpn_cls: 0.01463  loss_rpn_loc: 0.03036  time: 0.8847  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:41:13] d2.utils.events INFO:  eta: 7:12:38  iter: 2119  total_loss: 0.5181  loss_cls: 0.1811  loss_box_reg: 0.3016  loss_rpn_cls: 0.01961  loss_rpn_loc: 0.02968  time: 0.8847  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:41:31] d2.utils.events INFO:  eta: 7:12:25  iter: 2139  total_loss: 0.6168  loss_cls: 0.1896  loss_box_reg: 0.3488  loss_rpn_cls: 0.01686  loss_rpn_loc: 0.03508  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:41:50] d2.utils.events INFO:  eta: 7:12:02  iter: 2159  total_loss: 0.4958  loss_cls: 0.1663  loss_box_reg: 0.3239  loss_rpn_cls: 0.01449  loss_rpn_loc: 0.02732  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:42:08] d2.utils.events INFO:  eta: 7:11:44  iter: 2179  total_loss: 0.506  loss_cls: 0.1526  loss_box_reg: 0.2895  loss_rpn_cls: 0.02057  loss_rpn_loc: 0.03086  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:42:26] d2.utils.events INFO:  eta: 7:11:26  iter: 2199  total_loss: 0.5922  loss_cls: 0.1895  loss_box_reg: 0.347  loss_rpn_cls: 0.01614  loss_rpn_loc: 0.03319  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:42:43] d2.utils.events INFO:  eta: 7:10:43  iter: 2219  total_loss: 0.5432  loss_cls: 0.1874  loss_box_reg: 0.3113  loss_rpn_cls: 0.01335  loss_rpn_loc: 0.03192  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:43:01] d2.utils.events INFO:  eta: 7:10:55  iter: 2239  total_loss: 0.6266  loss_cls: 0.2057  loss_box_reg: 0.3509  loss_rpn_cls: 0.01937  loss_rpn_loc: 0.03918  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:43:19] d2.utils.events INFO:  eta: 7:10:56  iter: 2259  total_loss: 0.5654  loss_cls: 0.1869  loss_box_reg: 0.3371  loss_rpn_cls: 0.01476  loss_rpn_loc: 0.03616  time: 0.8856  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:43:37] d2.utils.events INFO:  eta: 7:10:22  iter: 2279  total_loss: 0.5347  loss_cls: 0.1687  loss_box_reg: 0.3181  loss_rpn_cls: 0.01385  loss_rpn_loc: 0.03149  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:43:54] d2.utils.events INFO:  eta: 7:09:56  iter: 2299  total_loss: 0.6089  loss_cls: 0.2074  loss_box_reg: 0.3554  loss_rpn_cls: 0.01561  loss_rpn_loc: 0.03459  time: 0.8853  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:44:12] d2.utils.events INFO:  eta: 7:10:22  iter: 2319  total_loss: 0.5084  loss_cls: 0.1402  loss_box_reg: 0.3104  loss_rpn_cls: 0.01283  loss_rpn_loc: 0.02821  time: 0.8855  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 05:44:30] d2.utils.events INFO:  eta: 7:09:39  iter: 2339  total_loss: 0.515  loss_cls: 0.1503  loss_box_reg: 0.2862  loss_rpn_cls: 0.01372  loss_rpn_loc: 0.03359  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:44:48] d2.utils.events INFO:  eta: 7:09:33  iter: 2359  total_loss: 0.5878  loss_cls: 0.2187  loss_box_reg: 0.3409  loss_rpn_cls: 0.01742  loss_rpn_loc: 0.03174  time: 0.8854  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:45:06] d2.utils.events INFO:  eta: 7:09:36  iter: 2379  total_loss: 0.5643  loss_cls: 0.1766  loss_box_reg: 0.3337  loss_rpn_cls: 0.01284  loss_rpn_loc: 0.03683  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:45:23] d2.utils.events INFO:  eta: 7:08:57  iter: 2399  total_loss: 0.5784  loss_cls: 0.1992  loss_box_reg: 0.3348  loss_rpn_cls: 0.01545  loss_rpn_loc: 0.03905  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:45:41] d2.utils.events INFO:  eta: 7:07:44  iter: 2419  total_loss: 0.6142  loss_cls: 0.2143  loss_box_reg: 0.3645  loss_rpn_cls: 0.01977  loss_rpn_loc: 0.03786  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:45:58] d2.utils.events INFO:  eta: 7:06:03  iter: 2439  total_loss: 0.4993  loss_cls: 0.1656  loss_box_reg: 0.3056  loss_rpn_cls: 0.01836  loss_rpn_loc: 0.04143  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:46:15] d2.utils.events INFO:  eta: 7:06:21  iter: 2459  total_loss: 0.4376  loss_cls: 0.1554  loss_box_reg: 0.2636  loss_rpn_cls: 0.01328  loss_rpn_loc: 0.02661  time: 0.8850  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:46:33] d2.utils.events INFO:  eta: 7:05:39  iter: 2479  total_loss: 0.5311  loss_cls: 0.2036  loss_box_reg: 0.283  loss_rpn_cls: 0.01435  loss_rpn_loc: 0.04531  time: 0.8850  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:46:51] d2.utils.events INFO:  eta: 7:07:04  iter: 2499  total_loss: 0.4865  loss_cls: 0.1476  loss_box_reg: 0.293  loss_rpn_cls: 0.01281  loss_rpn_loc: 0.03461  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:47:09] d2.utils.events INFO:  eta: 7:06:14  iter: 2519  total_loss: 0.4869  loss_cls: 0.1518  loss_box_reg: 0.3003  loss_rpn_cls: 0.01106  loss_rpn_loc: 0.02882  time: 0.8853  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:47:28] d2.utils.events INFO:  eta: 7:05:04  iter: 2539  total_loss: 0.4835  loss_cls: 0.1422  loss_box_reg: 0.3169  loss_rpn_cls: 0.01324  loss_rpn_loc: 0.02441  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:47:45] d2.utils.events INFO:  eta: 7:05:16  iter: 2559  total_loss: 0.5589  loss_cls: 0.1841  loss_box_reg: 0.3108  loss_rpn_cls: 0.01746  loss_rpn_loc: 0.03741  time: 0.8855  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:48:03] d2.utils.events INFO:  eta: 7:04:46  iter: 2579  total_loss: 0.5745  loss_cls: 0.1954  loss_box_reg: 0.3377  loss_rpn_cls: 0.01811  loss_rpn_loc: 0.02942  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:48:21] d2.utils.events INFO:  eta: 7:04:10  iter: 2599  total_loss: 0.5196  loss_cls: 0.1653  loss_box_reg: 0.3245  loss_rpn_cls: 0.01096  loss_rpn_loc: 0.03637  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:48:38] d2.utils.events INFO:  eta: 7:03:15  iter: 2619  total_loss: 0.6184  loss_cls: 0.2072  loss_box_reg: 0.3372  loss_rpn_cls: 0.01643  loss_rpn_loc: 0.03985  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:48:56] d2.utils.events INFO:  eta: 7:02:25  iter: 2639  total_loss: 0.4378  loss_cls: 0.1208  loss_box_reg: 0.2849  loss_rpn_cls: 0.008706  loss_rpn_loc: 0.02943  time: 0.8853  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:49:14] d2.utils.events INFO:  eta: 7:01:35  iter: 2659  total_loss: 0.5458  loss_cls: 0.1627  loss_box_reg: 0.2861  loss_rpn_cls: 0.01561  loss_rpn_loc: 0.04076  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:49:31] d2.utils.events INFO:  eta: 7:00:48  iter: 2679  total_loss: 0.6618  loss_cls: 0.2181  loss_box_reg: 0.3746  loss_rpn_cls: 0.01932  loss_rpn_loc: 0.04005  time: 0.8852  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:49:49] d2.utils.events INFO:  eta: 7:01:13  iter: 2699  total_loss: 0.577  loss_cls: 0.1851  loss_box_reg: 0.3739  loss_rpn_cls: 0.01161  loss_rpn_loc: 0.03013  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:50:06] d2.utils.events INFO:  eta: 7:01:05  iter: 2719  total_loss: 0.5743  loss_cls: 0.1819  loss_box_reg: 0.3318  loss_rpn_cls: 0.01864  loss_rpn_loc: 0.03896  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:50:24] d2.utils.events INFO:  eta: 7:00:48  iter: 2739  total_loss: 0.4656  loss_cls: 0.1579  loss_box_reg: 0.2874  loss_rpn_cls: 0.01365  loss_rpn_loc: 0.02289  time: 0.8852  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:50:42] d2.utils.events INFO:  eta: 7:00:52  iter: 2759  total_loss: 0.4328  loss_cls: 0.1356  loss_box_reg: 0.256  loss_rpn_cls: 0.01669  loss_rpn_loc: 0.02672  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:51:00] d2.utils.events INFO:  eta: 7:00:27  iter: 2779  total_loss: 0.4806  loss_cls: 0.153  loss_box_reg: 0.2656  loss_rpn_cls: 0.01392  loss_rpn_loc: 0.03758  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:51:18] d2.utils.events INFO:  eta: 7:00:43  iter: 2799  total_loss: 0.484  loss_cls: 0.1552  loss_box_reg: 0.2869  loss_rpn_cls: 0.01223  loss_rpn_loc: 0.02785  time: 0.8854  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:51:36] d2.utils.events INFO:  eta: 7:00:19  iter: 2819  total_loss: 0.4465  loss_cls: 0.1296  loss_box_reg: 0.2735  loss_rpn_cls: 0.008721  loss_rpn_loc: 0.02754  time: 0.8854  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:51:54] d2.utils.events INFO:  eta: 7:00:42  iter: 2839  total_loss: 0.456  loss_cls: 0.1391  loss_box_reg: 0.2666  loss_rpn_cls: 0.01128  loss_rpn_loc: 0.02642  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:52:12] d2.utils.events INFO:  eta: 7:00:50  iter: 2859  total_loss: 0.5526  loss_cls: 0.1795  loss_box_reg: 0.3342  loss_rpn_cls: 0.01381  loss_rpn_loc: 0.03623  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:52:30] d2.utils.events INFO:  eta: 7:00:17  iter: 2879  total_loss: 0.4981  loss_cls: 0.1634  loss_box_reg: 0.2847  loss_rpn_cls: 0.01687  loss_rpn_loc: 0.029  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:52:48] d2.utils.events INFO:  eta: 7:00:25  iter: 2899  total_loss: 0.4883  loss_cls: 0.1465  loss_box_reg: 0.3033  loss_rpn_cls: 0.01035  loss_rpn_loc: 0.03275  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:53:06] d2.utils.events INFO:  eta: 7:00:07  iter: 2919  total_loss: 0.4851  loss_cls: 0.1393  loss_box_reg: 0.3085  loss_rpn_cls: 0.009177  loss_rpn_loc: 0.02951  time: 0.8860  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:53:24] d2.utils.events INFO:  eta: 6:59:38  iter: 2939  total_loss: 0.4669  loss_cls: 0.1506  loss_box_reg: 0.2744  loss_rpn_cls: 0.007516  loss_rpn_loc: 0.03149  time: 0.8860  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:53:42] d2.utils.events INFO:  eta: 6:59:14  iter: 2959  total_loss: 0.5042  loss_cls: 0.1369  loss_box_reg: 0.3197  loss_rpn_cls: 0.01182  loss_rpn_loc: 0.03126  time: 0.8859  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:54:00] d2.utils.events INFO:  eta: 6:59:02  iter: 2979  total_loss: 0.4633  loss_cls: 0.1329  loss_box_reg: 0.305  loss_rpn_cls: 0.01354  loss_rpn_loc: 0.02927  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:54:18] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 05:54:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 05:54:18] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 05:54:18] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 05:54:18] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 05:54:20] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1184 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:01:04
[04/03 05:54:25] d2.evaluation.evaluator INFO: Inference done 52/548. Dataloading: 0.0009 s/iter. Inference: 0.1184 s/iter. Eval: 0.0034 s/iter. Total: 0.1228 s/iter. ETA=0:01:00
[04/03 05:54:30] d2.evaluation.evaluator INFO: Inference done 94/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0019 s/iter. Total: 0.1214 s/iter. ETA=0:00:55
[04/03 05:54:35] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0013 s/iter. Total: 0.1210 s/iter. ETA=0:00:49
[04/03 05:54:40] d2.evaluation.evaluator INFO: Inference done 178/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0011 s/iter. Total: 0.1208 s/iter. ETA=0:00:44
[04/03 05:54:45] d2.evaluation.evaluator INFO: Inference done 220/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0009 s/iter. Total: 0.1206 s/iter. ETA=0:00:39
[04/03 05:54:50] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0008 s/iter. Total: 0.1205 s/iter. ETA=0:00:34
[04/03 05:54:55] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1205 s/iter. ETA=0:00:29
[04/03 05:55:00] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1205 s/iter. ETA=0:00:24
[04/03 05:55:05] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1204 s/iter. ETA=0:00:19
[04/03 05:55:10] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:14
[04/03 05:55:15] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:09
[04/03 05:55:20] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:04
[04/03 05:55:25] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.453351 (0.120540 s / iter per device, on 1 devices)
[04/03 05:55:25] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118883 s / iter per device, on 1 devices)
[04/03 05:55:25] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 05:55:25] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 05:55:25] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 05:55:25] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 05:55:25] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.51 seconds.
[04/03 05:55:25] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 05:55:26] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 5.537 | 10.775 | 5.022  | 1.941 | 11.016 | 15.248 |
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 05:55:26] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 4.804  | people          | 2.344  | bicycle    | 1.107 |
| car        | 32.484 | van             | 12.569 | truck      | 0.000 |
| tricycle   | 2.663  | awning-tricycle | 0.917  | bus        | 0.000 |
| motor      | 3.603  | others          | 0.411  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 05:55:26] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 05:55:26] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 05:55:26] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 05:55:26] d2.evaluation.testing INFO: copypaste: 5.5366,10.7752,5.0216,1.9407,11.0158,15.2485,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 05:55:26] d2.utils.events INFO:  eta: 6:58:30  iter: 2999  total_loss: 0.5514  loss_cls: 0.1653  loss_box_reg: 0.305  loss_rpn_cls: 0.01669  loss_rpn_loc: 0.03748  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:55:44] d2.utils.events INFO:  eta: 6:58:01  iter: 3019  total_loss: 0.5024  loss_cls: 0.1463  loss_box_reg: 0.3021  loss_rpn_cls: 0.01168  loss_rpn_loc: 0.02948  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:56:02] d2.utils.events INFO:  eta: 6:58:00  iter: 3039  total_loss: 0.4794  loss_cls: 0.1544  loss_box_reg: 0.2857  loss_rpn_cls: 0.01547  loss_rpn_loc: 0.03591  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:56:20] d2.utils.events INFO:  eta: 6:57:57  iter: 3059  total_loss: 0.491  loss_cls: 0.1611  loss_box_reg: 0.2824  loss_rpn_cls: 0.01241  loss_rpn_loc: 0.02883  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 05:56:37] d2.utils.events INFO:  eta: 6:56:39  iter: 3079  total_loss: 0.4259  loss_cls: 0.1409  loss_box_reg: 0.2468  loss_rpn_cls: 0.0103  loss_rpn_loc: 0.02729  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:56:55] d2.utils.events INFO:  eta: 6:56:14  iter: 3099  total_loss: 0.5036  loss_cls: 0.1465  loss_box_reg: 0.2894  loss_rpn_cls: 0.006906  loss_rpn_loc: 0.03051  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:57:13] d2.utils.events INFO:  eta: 6:56:18  iter: 3119  total_loss: 0.4405  loss_cls: 0.1387  loss_box_reg: 0.2569  loss_rpn_cls: 0.009052  loss_rpn_loc: 0.02288  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:57:31] d2.utils.events INFO:  eta: 6:56:25  iter: 3139  total_loss: 0.5182  loss_cls: 0.1654  loss_box_reg: 0.3088  loss_rpn_cls: 0.01133  loss_rpn_loc: 0.03694  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:57:48] d2.utils.events INFO:  eta: 6:55:13  iter: 3159  total_loss: 0.5216  loss_cls: 0.1478  loss_box_reg: 0.309  loss_rpn_cls: 0.01142  loss_rpn_loc: 0.02588  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 05:58:06] d2.utils.events INFO:  eta: 6:54:39  iter: 3179  total_loss: 0.4725  loss_cls: 0.154  loss_box_reg: 0.3088  loss_rpn_cls: 0.01318  loss_rpn_loc: 0.02826  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:58:24] d2.utils.events INFO:  eta: 6:54:21  iter: 3199  total_loss: 0.4358  loss_cls: 0.145  loss_box_reg: 0.2518  loss_rpn_cls: 0.01188  loss_rpn_loc: 0.02308  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:58:42] d2.utils.events INFO:  eta: 6:55:21  iter: 3219  total_loss: 0.5042  loss_cls: 0.176  loss_box_reg: 0.3083  loss_rpn_cls: 0.009447  loss_rpn_loc: 0.03236  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:59:00] d2.utils.events INFO:  eta: 6:55:16  iter: 3239  total_loss: 0.4729  loss_cls: 0.1442  loss_box_reg: 0.265  loss_rpn_cls: 0.01009  loss_rpn_loc: 0.03552  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 05:59:18] d2.utils.events INFO:  eta: 6:55:02  iter: 3259  total_loss: 0.3103  loss_cls: 0.09591  loss_box_reg: 0.1924  loss_rpn_cls: 0.009665  loss_rpn_loc: 0.02569  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:59:35] d2.utils.events INFO:  eta: 6:54:35  iter: 3279  total_loss: 0.4934  loss_cls: 0.1476  loss_box_reg: 0.3008  loss_rpn_cls: 0.007215  loss_rpn_loc: 0.03332  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 05:59:54] d2.utils.events INFO:  eta: 6:54:35  iter: 3299  total_loss: 0.4302  loss_cls: 0.1422  loss_box_reg: 0.2683  loss_rpn_cls: 0.009025  loss_rpn_loc: 0.02973  time: 0.8867  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:00:12] d2.utils.events INFO:  eta: 6:54:04  iter: 3319  total_loss: 0.4562  loss_cls: 0.1254  loss_box_reg: 0.2647  loss_rpn_cls: 0.01025  loss_rpn_loc: 0.03032  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:00:30] d2.utils.events INFO:  eta: 6:53:55  iter: 3339  total_loss: 0.4662  loss_cls: 0.1071  loss_box_reg: 0.305  loss_rpn_cls: 0.005927  loss_rpn_loc: 0.02359  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:00:48] d2.utils.events INFO:  eta: 6:53:44  iter: 3359  total_loss: 0.4564  loss_cls: 0.1411  loss_box_reg: 0.2495  loss_rpn_cls: 0.01167  loss_rpn_loc: 0.02953  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:01:05] d2.utils.events INFO:  eta: 6:53:23  iter: 3379  total_loss: 0.4566  loss_cls: 0.1425  loss_box_reg: 0.2752  loss_rpn_cls: 0.009332  loss_rpn_loc: 0.02945  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:01:23] d2.utils.events INFO:  eta: 6:53:05  iter: 3399  total_loss: 0.4327  loss_cls: 0.1212  loss_box_reg: 0.2806  loss_rpn_cls: 0.007907  loss_rpn_loc: 0.03599  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:01:40] d2.utils.events INFO:  eta: 6:52:50  iter: 3419  total_loss: 0.4528  loss_cls: 0.1383  loss_box_reg: 0.2783  loss_rpn_cls: 0.00833  loss_rpn_loc: 0.03277  time: 0.8867  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:01:59] d2.utils.events INFO:  eta: 6:53:09  iter: 3439  total_loss: 0.424  loss_cls: 0.1556  loss_box_reg: 0.2519  loss_rpn_cls: 0.008924  loss_rpn_loc: 0.02397  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:02:16] d2.utils.events INFO:  eta: 6:52:51  iter: 3459  total_loss: 0.4324  loss_cls: 0.1306  loss_box_reg: 0.2525  loss_rpn_cls: 0.008404  loss_rpn_loc: 0.02501  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:02:33] d2.utils.events INFO:  eta: 6:52:33  iter: 3479  total_loss: 0.4133  loss_cls: 0.1164  loss_box_reg: 0.2704  loss_rpn_cls: 0.005945  loss_rpn_loc: 0.02276  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:02:51] d2.utils.events INFO:  eta: 6:51:39  iter: 3499  total_loss: 0.4707  loss_cls: 0.1367  loss_box_reg: 0.2687  loss_rpn_cls: 0.0131  loss_rpn_loc: 0.03473  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:03:08] d2.utils.events INFO:  eta: 6:50:52  iter: 3519  total_loss: 0.3921  loss_cls: 0.1058  loss_box_reg: 0.2526  loss_rpn_cls: 0.007301  loss_rpn_loc: 0.03084  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:03:27] d2.utils.events INFO:  eta: 6:50:39  iter: 3539  total_loss: 0.4379  loss_cls: 0.124  loss_box_reg: 0.2644  loss_rpn_cls: 0.01044  loss_rpn_loc: 0.03133  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:03:45] d2.utils.events INFO:  eta: 6:50:37  iter: 3559  total_loss: 0.4982  loss_cls: 0.1225  loss_box_reg: 0.284  loss_rpn_cls: 0.01013  loss_rpn_loc: 0.03033  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:04:03] d2.utils.events INFO:  eta: 6:50:48  iter: 3579  total_loss: 0.3966  loss_cls: 0.1213  loss_box_reg: 0.2564  loss_rpn_cls: 0.006026  loss_rpn_loc: 0.02382  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:04:21] d2.utils.events INFO:  eta: 6:50:24  iter: 3599  total_loss: 0.4698  loss_cls: 0.1528  loss_box_reg: 0.3171  loss_rpn_cls: 0.01248  loss_rpn_loc: 0.03333  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:04:39] d2.utils.events INFO:  eta: 6:50:12  iter: 3619  total_loss: 0.4119  loss_cls: 0.1353  loss_box_reg: 0.2495  loss_rpn_cls: 0.0104  loss_rpn_loc: 0.02537  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:04:56] d2.utils.events INFO:  eta: 6:49:56  iter: 3639  total_loss: 0.5103  loss_cls: 0.1569  loss_box_reg: 0.2898  loss_rpn_cls: 0.013  loss_rpn_loc: 0.03144  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:05:14] d2.utils.events INFO:  eta: 6:49:51  iter: 3659  total_loss: 0.4342  loss_cls: 0.1167  loss_box_reg: 0.2843  loss_rpn_cls: 0.008959  loss_rpn_loc: 0.03357  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:05:32] d2.utils.events INFO:  eta: 6:50:09  iter: 3679  total_loss: 0.3955  loss_cls: 0.1089  loss_box_reg: 0.2484  loss_rpn_cls: 0.01082  loss_rpn_loc: 0.02691  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:05:50] d2.utils.events INFO:  eta: 6:50:42  iter: 3699  total_loss: 0.4444  loss_cls: 0.1259  loss_box_reg: 0.2825  loss_rpn_cls: 0.006212  loss_rpn_loc: 0.02654  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:06:07] d2.utils.events INFO:  eta: 6:50:25  iter: 3719  total_loss: 0.4389  loss_cls: 0.1157  loss_box_reg: 0.2774  loss_rpn_cls: 0.006798  loss_rpn_loc: 0.01993  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:06:25] d2.utils.events INFO:  eta: 6:49:44  iter: 3739  total_loss: 0.3966  loss_cls: 0.1158  loss_box_reg: 0.2496  loss_rpn_cls: 0.008232  loss_rpn_loc: 0.0276  time: 0.8866  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:06:41] d2.utils.events INFO:  eta: 6:48:45  iter: 3759  total_loss: 0.4991  loss_cls: 0.1472  loss_box_reg: 0.3209  loss_rpn_cls: 0.007398  loss_rpn_loc: 0.04026  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:06:59] d2.utils.events INFO:  eta: 6:48:36  iter: 3779  total_loss: 0.4418  loss_cls: 0.1234  loss_box_reg: 0.2737  loss_rpn_cls: 0.01008  loss_rpn_loc: 0.02475  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:07:17] d2.utils.events INFO:  eta: 6:48:09  iter: 3799  total_loss: 0.5073  loss_cls: 0.1451  loss_box_reg: 0.2859  loss_rpn_cls: 0.0139  loss_rpn_loc: 0.02887  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:07:35] d2.utils.events INFO:  eta: 6:47:55  iter: 3819  total_loss: 0.4475  loss_cls: 0.125  loss_box_reg: 0.2757  loss_rpn_cls: 0.009866  loss_rpn_loc: 0.02496  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:07:53] d2.utils.events INFO:  eta: 6:46:59  iter: 3839  total_loss: 0.4036  loss_cls: 0.1306  loss_box_reg: 0.2332  loss_rpn_cls: 0.007983  loss_rpn_loc: 0.03295  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:08:10] d2.utils.events INFO:  eta: 6:46:29  iter: 3859  total_loss: 0.43  loss_cls: 0.1371  loss_box_reg: 0.2568  loss_rpn_cls: 0.008536  loss_rpn_loc: 0.02686  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:08:28] d2.utils.events INFO:  eta: 6:46:11  iter: 3879  total_loss: 0.4457  loss_cls: 0.1227  loss_box_reg: 0.2815  loss_rpn_cls: 0.008517  loss_rpn_loc: 0.0305  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:08:46] d2.utils.events INFO:  eta: 6:45:12  iter: 3899  total_loss: 0.5322  loss_cls: 0.1712  loss_box_reg: 0.3003  loss_rpn_cls: 0.01014  loss_rpn_loc: 0.03202  time: 0.8864  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 06:09:04] d2.utils.events INFO:  eta: 6:44:44  iter: 3919  total_loss: 0.4171  loss_cls: 0.1116  loss_box_reg: 0.2665  loss_rpn_cls: 0.009767  loss_rpn_loc: 0.02595  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:09:21] d2.utils.events INFO:  eta: 6:44:06  iter: 3939  total_loss: 0.4191  loss_cls: 0.118  loss_box_reg: 0.2608  loss_rpn_cls: 0.008367  loss_rpn_loc: 0.02089  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:09:40] d2.utils.events INFO:  eta: 6:43:55  iter: 3959  total_loss: 0.4096  loss_cls: 0.1027  loss_box_reg: 0.2573  loss_rpn_cls: 0.006737  loss_rpn_loc: 0.02477  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:09:58] d2.utils.events INFO:  eta: 6:43:46  iter: 3979  total_loss: 0.3713  loss_cls: 0.1084  loss_box_reg: 0.2411  loss_rpn_cls: 0.005438  loss_rpn_loc: 0.0258  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:10:16] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 06:10:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 06:10:17] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 06:10:17] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 06:10:17] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 06:10:18] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1197 s/iter. ETA=0:01:04
[04/03 06:10:23] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:59
[04/03 06:10:28] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:54
[04/03 06:10:33] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:49
[04/03 06:10:38] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:44
[04/03 06:10:44] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:39
[04/03 06:10:49] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:34
[04/03 06:10:54] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:29
[04/03 06:10:59] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:24
[04/03 06:11:04] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:19
[04/03 06:11:09] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:14
[04/03 06:11:14] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:09
[04/03 06:11:19] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:03
[04/03 06:11:23] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.369295 (0.120385 s / iter per device, on 1 devices)
[04/03 06:11:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119005 s / iter per device, on 1 devices)
[04/03 06:11:23] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 06:11:23] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 06:11:23] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 06:11:23] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 06:11:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.47 seconds.
[04/03 06:11:24] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 06:11:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.100 | 11.990 | 5.452  | 2.194 | 12.090 | 16.995 |
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 06:11:24] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.503  | people          | 2.905  | bicycle    | 1.835 |
| car        | 33.870 | van             | 13.486 | truck      | 0.000 |
| tricycle   | 3.394  | awning-tricycle | 1.189  | bus        | 0.000 |
| motor      | 4.658  | others          | 0.261  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 06:11:24] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 06:11:24] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 06:11:24] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 06:11:24] d2.evaluation.testing INFO: copypaste: 6.1001,11.9903,5.4522,2.1943,12.0902,16.9947,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 06:11:24] d2.utils.events INFO:  eta: 6:43:28  iter: 3999  total_loss: 0.4564  loss_cls: 0.1368  loss_box_reg: 0.2898  loss_rpn_cls: 0.007635  loss_rpn_loc: 0.04005  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:11:41] d2.utils.events INFO:  eta: 6:42:51  iter: 4019  total_loss: 0.4993  loss_cls: 0.1591  loss_box_reg: 0.2825  loss_rpn_cls: 0.02012  loss_rpn_loc: 0.0413  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:11:59] d2.utils.events INFO:  eta: 6:42:37  iter: 4039  total_loss: 0.4251  loss_cls: 0.1175  loss_box_reg: 0.272  loss_rpn_cls: 0.00856  loss_rpn_loc: 0.02871  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:12:17] d2.utils.events INFO:  eta: 6:42:04  iter: 4059  total_loss: 0.4504  loss_cls: 0.1319  loss_box_reg: 0.2808  loss_rpn_cls: 0.006582  loss_rpn_loc: 0.02885  time: 0.8866  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:12:35] d2.utils.events INFO:  eta: 6:42:01  iter: 4079  total_loss: 0.3879  loss_cls: 0.1012  loss_box_reg: 0.2552  loss_rpn_cls: 0.00576  loss_rpn_loc: 0.02175  time: 0.8867  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:12:52] d2.utils.events INFO:  eta: 6:41:35  iter: 4099  total_loss: 0.4797  loss_cls: 0.1318  loss_box_reg: 0.3118  loss_rpn_cls: 0.01154  loss_rpn_loc: 0.03615  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:13:11] d2.utils.events INFO:  eta: 6:41:25  iter: 4119  total_loss: 0.3958  loss_cls: 0.1057  loss_box_reg: 0.2278  loss_rpn_cls: 0.009902  loss_rpn_loc: 0.02309  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:13:29] d2.utils.events INFO:  eta: 6:41:07  iter: 4139  total_loss: 0.4427  loss_cls: 0.1094  loss_box_reg: 0.2914  loss_rpn_cls: 0.00906  loss_rpn_loc: 0.02467  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:13:47] d2.utils.events INFO:  eta: 6:40:57  iter: 4159  total_loss: 0.3985  loss_cls: 0.1208  loss_box_reg: 0.2523  loss_rpn_cls: 0.006327  loss_rpn_loc: 0.02463  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:14:05] d2.utils.events INFO:  eta: 6:40:39  iter: 4179  total_loss: 0.3849  loss_cls: 0.09919  loss_box_reg: 0.2524  loss_rpn_cls: 0.006289  loss_rpn_loc: 0.02627  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:14:23] d2.utils.events INFO:  eta: 6:40:33  iter: 4199  total_loss: 0.3514  loss_cls: 0.0924  loss_box_reg: 0.2449  loss_rpn_cls: 0.004769  loss_rpn_loc: 0.0195  time: 0.8872  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:14:41] d2.utils.events INFO:  eta: 6:39:57  iter: 4219  total_loss: 0.4243  loss_cls: 0.1147  loss_box_reg: 0.2584  loss_rpn_cls: 0.01126  loss_rpn_loc: 0.0321  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:14:59] d2.utils.events INFO:  eta: 6:39:12  iter: 4239  total_loss: 0.4144  loss_cls: 0.1159  loss_box_reg: 0.2626  loss_rpn_cls: 0.008067  loss_rpn_loc: 0.02788  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:15:17] d2.utils.events INFO:  eta: 6:38:37  iter: 4259  total_loss: 0.4627  loss_cls: 0.1256  loss_box_reg: 0.2506  loss_rpn_cls: 0.008328  loss_rpn_loc: 0.03155  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:15:34] d2.utils.events INFO:  eta: 6:37:59  iter: 4279  total_loss: 0.4167  loss_cls: 0.1183  loss_box_reg: 0.2516  loss_rpn_cls: 0.007873  loss_rpn_loc: 0.03019  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:15:51] d2.utils.events INFO:  eta: 6:36:56  iter: 4299  total_loss: 0.4001  loss_cls: 0.1037  loss_box_reg: 0.2552  loss_rpn_cls: 0.005998  loss_rpn_loc: 0.02795  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:16:10] d2.utils.events INFO:  eta: 6:36:46  iter: 4319  total_loss: 0.3404  loss_cls: 0.08315  loss_box_reg: 0.2268  loss_rpn_cls: 0.006092  loss_rpn_loc: 0.01976  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:16:28] d2.utils.events INFO:  eta: 6:36:33  iter: 4339  total_loss: 0.3158  loss_cls: 0.07278  loss_box_reg: 0.2164  loss_rpn_cls: 0.01029  loss_rpn_loc: 0.01966  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:16:46] d2.utils.events INFO:  eta: 6:36:27  iter: 4359  total_loss: 0.4198  loss_cls: 0.1138  loss_box_reg: 0.2651  loss_rpn_cls: 0.007641  loss_rpn_loc: 0.03164  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:17:03] d2.utils.events INFO:  eta: 6:35:48  iter: 4379  total_loss: 0.4489  loss_cls: 0.1224  loss_box_reg: 0.2567  loss_rpn_cls: 0.006446  loss_rpn_loc: 0.03302  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:17:20] d2.utils.events INFO:  eta: 6:35:30  iter: 4399  total_loss: 0.405  loss_cls: 0.1247  loss_box_reg: 0.2655  loss_rpn_cls: 0.007024  loss_rpn_loc: 0.02814  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:17:38] d2.utils.events INFO:  eta: 6:35:21  iter: 4419  total_loss: 0.4315  loss_cls: 0.111  loss_box_reg: 0.2776  loss_rpn_cls: 0.0078  loss_rpn_loc: 0.0309  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:17:56] d2.utils.events INFO:  eta: 6:35:05  iter: 4439  total_loss: 0.389  loss_cls: 0.1022  loss_box_reg: 0.2656  loss_rpn_cls: 0.004712  loss_rpn_loc: 0.02008  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:18:14] d2.utils.events INFO:  eta: 6:35:12  iter: 4459  total_loss: 0.3933  loss_cls: 0.1062  loss_box_reg: 0.2592  loss_rpn_cls: 0.004921  loss_rpn_loc: 0.02511  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:18:31] d2.utils.events INFO:  eta: 6:34:28  iter: 4479  total_loss: 0.3585  loss_cls: 0.1096  loss_box_reg: 0.2325  loss_rpn_cls: 0.005151  loss_rpn_loc: 0.02497  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:18:49] d2.utils.events INFO:  eta: 6:34:10  iter: 4499  total_loss: 0.427  loss_cls: 0.116  loss_box_reg: 0.2656  loss_rpn_cls: 0.006831  loss_rpn_loc: 0.02563  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:19:07] d2.utils.events INFO:  eta: 6:34:31  iter: 4519  total_loss: 0.3859  loss_cls: 0.09756  loss_box_reg: 0.2369  loss_rpn_cls: 0.004823  loss_rpn_loc: 0.02728  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:19:24] d2.utils.events INFO:  eta: 6:33:36  iter: 4539  total_loss: 0.4309  loss_cls: 0.1016  loss_box_reg: 0.2997  loss_rpn_cls: 0.005624  loss_rpn_loc: 0.02388  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:19:42] d2.utils.events INFO:  eta: 6:33:14  iter: 4559  total_loss: 0.3655  loss_cls: 0.08254  loss_box_reg: 0.2442  loss_rpn_cls: 0.007049  loss_rpn_loc: 0.02276  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:20:00] d2.utils.events INFO:  eta: 6:32:26  iter: 4579  total_loss: 0.424  loss_cls: 0.1128  loss_box_reg: 0.2672  loss_rpn_cls: 0.005309  loss_rpn_loc: 0.02964  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:20:18] d2.utils.events INFO:  eta: 6:32:23  iter: 4599  total_loss: 0.4179  loss_cls: 0.1223  loss_box_reg: 0.2535  loss_rpn_cls: 0.006606  loss_rpn_loc: 0.03163  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:20:36] d2.utils.events INFO:  eta: 6:32:00  iter: 4619  total_loss: 0.4081  loss_cls: 0.1041  loss_box_reg: 0.2414  loss_rpn_cls: 0.006643  loss_rpn_loc: 0.02764  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:20:55] d2.utils.events INFO:  eta: 6:32:22  iter: 4639  total_loss: 0.2998  loss_cls: 0.09213  loss_box_reg: 0.1814  loss_rpn_cls: 0.005955  loss_rpn_loc: 0.02193  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:21:13] d2.utils.events INFO:  eta: 6:32:04  iter: 4659  total_loss: 0.3386  loss_cls: 0.09347  loss_box_reg: 0.2273  loss_rpn_cls: 0.006628  loss_rpn_loc: 0.02376  time: 0.8872  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:21:30] d2.utils.events INFO:  eta: 6:31:24  iter: 4679  total_loss: 0.4307  loss_cls: 0.1239  loss_box_reg: 0.2809  loss_rpn_cls: 0.005572  loss_rpn_loc: 0.03207  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:21:48] d2.utils.events INFO:  eta: 6:30:59  iter: 4699  total_loss: 0.4415  loss_cls: 0.1082  loss_box_reg: 0.3002  loss_rpn_cls: 0.007006  loss_rpn_loc: 0.02711  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:22:06] d2.utils.events INFO:  eta: 6:30:51  iter: 4719  total_loss: 0.3913  loss_cls: 0.1085  loss_box_reg: 0.2384  loss_rpn_cls: 0.004211  loss_rpn_loc: 0.02733  time: 0.8872  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:22:23] d2.utils.events INFO:  eta: 6:30:18  iter: 4739  total_loss: 0.3556  loss_cls: 0.1044  loss_box_reg: 0.2235  loss_rpn_cls: 0.006265  loss_rpn_loc: 0.02458  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:22:41] d2.utils.events INFO:  eta: 6:30:10  iter: 4759  total_loss: 0.4541  loss_cls: 0.1282  loss_box_reg: 0.266  loss_rpn_cls: 0.006039  loss_rpn_loc: 0.03038  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:22:59] d2.utils.events INFO:  eta: 6:30:04  iter: 4779  total_loss: 0.3582  loss_cls: 0.08553  loss_box_reg: 0.2173  loss_rpn_cls: 0.00448  loss_rpn_loc: 0.02712  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:23:17] d2.utils.events INFO:  eta: 6:30:03  iter: 4799  total_loss: 0.3553  loss_cls: 0.1184  loss_box_reg: 0.2286  loss_rpn_cls: 0.005666  loss_rpn_loc: 0.0276  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:23:35] d2.utils.events INFO:  eta: 6:29:34  iter: 4819  total_loss: 0.4346  loss_cls: 0.1034  loss_box_reg: 0.2623  loss_rpn_cls: 0.009031  loss_rpn_loc: 0.03147  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:23:53] d2.utils.events INFO:  eta: 6:29:28  iter: 4839  total_loss: 0.4403  loss_cls: 0.1218  loss_box_reg: 0.2608  loss_rpn_cls: 0.008173  loss_rpn_loc: 0.02916  time: 0.8874  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:24:12] d2.utils.events INFO:  eta: 6:29:33  iter: 4859  total_loss: 0.3546  loss_cls: 0.09757  loss_box_reg: 0.2368  loss_rpn_cls: 0.004032  loss_rpn_loc: 0.0237  time: 0.8876  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:24:30] d2.utils.events INFO:  eta: 6:29:20  iter: 4879  total_loss: 0.419  loss_cls: 0.1211  loss_box_reg: 0.2346  loss_rpn_cls: 0.005094  loss_rpn_loc: 0.0229  time: 0.8876  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:24:48] d2.utils.events INFO:  eta: 6:29:05  iter: 4899  total_loss: 0.3702  loss_cls: 0.1059  loss_box_reg: 0.2286  loss_rpn_cls: 0.006001  loss_rpn_loc: 0.01944  time: 0.8876  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:25:05] d2.utils.events INFO:  eta: 6:28:33  iter: 4919  total_loss: 0.4517  loss_cls: 0.1268  loss_box_reg: 0.2834  loss_rpn_cls: 0.006942  loss_rpn_loc: 0.032  time: 0.8874  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:25:23] d2.utils.events INFO:  eta: 6:28:31  iter: 4939  total_loss: 0.403  loss_cls: 0.0992  loss_box_reg: 0.2341  loss_rpn_cls: 0.005675  loss_rpn_loc: 0.02912  time: 0.8875  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:25:41] d2.utils.events INFO:  eta: 6:28:18  iter: 4959  total_loss: 0.3931  loss_cls: 0.1112  loss_box_reg: 0.2682  loss_rpn_cls: 0.004796  loss_rpn_loc: 0.02349  time: 0.8876  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:26:00] d2.utils.events INFO:  eta: 6:28:07  iter: 4979  total_loss: 0.3789  loss_cls: 0.1163  loss_box_reg: 0.2511  loss_rpn_cls: 0.004426  loss_rpn_loc: 0.02614  time: 0.8877  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:26:17] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 06:26:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 06:26:17] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 06:26:17] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 06:26:18] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 06:26:19] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:01:04
[04/03 06:26:24] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:59
[04/03 06:26:29] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:54
[04/03 06:26:34] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:49
[04/03 06:26:39] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:44
[04/03 06:26:44] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:39
[04/03 06:26:49] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:34
[04/03 06:26:55] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:29
[04/03 06:27:00] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:24
[04/03 06:27:05] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:19
[04/03 06:27:10] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:14
[04/03 06:27:15] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:09
[04/03 06:27:20] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:03
[04/03 06:27:24] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.343417 (0.120338 s / iter per device, on 1 devices)
[04/03 06:27:24] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119012 s / iter per device, on 1 devices)
[04/03 06:27:24] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 06:27:24] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 06:27:24] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 06:27:24] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 06:27:25] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.48 seconds.
[04/03 06:27:25] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 06:27:25] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.158 | 12.117 | 5.593  | 2.357 | 12.400 | 15.648 |
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 06:27:25] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.688  | people          | 3.292  | bicycle    | 2.076 |
| car        | 33.544 | van             | 12.788 | truck      | 0.000 |
| tricycle   | 3.257  | awning-tricycle | 0.924  | bus        | 0.000 |
| motor      | 5.021  | others          | 0.148  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 06:27:25] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 06:27:25] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 06:27:25] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 06:27:25] d2.evaluation.testing INFO: copypaste: 6.1581,12.1168,5.5930,2.3571,12.3999,15.6480,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 06:27:25] d2.utils.events INFO:  eta: 6:27:42  iter: 4999  total_loss: 0.3919  loss_cls: 0.09542  loss_box_reg: 0.2466  loss_rpn_cls: 0.006094  loss_rpn_loc: 0.03022  time: 0.8876  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:27:43] d2.utils.events INFO:  eta: 6:27:52  iter: 5019  total_loss: 0.3933  loss_cls: 0.09761  loss_box_reg: 0.2482  loss_rpn_cls: 0.007233  loss_rpn_loc: 0.02289  time: 0.8876  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:28:01] d2.utils.events INFO:  eta: 6:27:35  iter: 5039  total_loss: 0.339  loss_cls: 0.08628  loss_box_reg: 0.2313  loss_rpn_cls: 0.005614  loss_rpn_loc: 0.02333  time: 0.8877  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:28:18] d2.utils.events INFO:  eta: 6:27:52  iter: 5059  total_loss: 0.2941  loss_cls: 0.07073  loss_box_reg: 0.1979  loss_rpn_cls: 0.007488  loss_rpn_loc: 0.01805  time: 0.8877  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:28:36] d2.utils.events INFO:  eta: 6:27:17  iter: 5079  total_loss: 0.449  loss_cls: 0.1222  loss_box_reg: 0.2596  loss_rpn_cls: 0.01224  loss_rpn_loc: 0.02793  time: 0.8877  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:28:54] d2.utils.events INFO:  eta: 6:26:59  iter: 5099  total_loss: 0.4429  loss_cls: 0.1101  loss_box_reg: 0.2776  loss_rpn_cls: 0.008409  loss_rpn_loc: 0.0351  time: 0.8876  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:29:12] d2.utils.events INFO:  eta: 6:25:50  iter: 5119  total_loss: 0.3988  loss_cls: 0.1095  loss_box_reg: 0.2441  loss_rpn_cls: 0.006277  loss_rpn_loc: 0.02686  time: 0.8876  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:29:29] d2.utils.events INFO:  eta: 6:25:25  iter: 5139  total_loss: 0.4378  loss_cls: 0.1277  loss_box_reg: 0.2688  loss_rpn_cls: 0.006979  loss_rpn_loc: 0.02729  time: 0.8876  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:29:46] d2.utils.events INFO:  eta: 6:24:49  iter: 5159  total_loss: 0.393  loss_cls: 0.1213  loss_box_reg: 0.2301  loss_rpn_cls: 0.009661  loss_rpn_loc: 0.02967  time: 0.8875  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:30:04] d2.utils.events INFO:  eta: 6:24:33  iter: 5179  total_loss: 0.3335  loss_cls: 0.08488  loss_box_reg: 0.2166  loss_rpn_cls: 0.005497  loss_rpn_loc: 0.02164  time: 0.8875  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:30:22] d2.utils.events INFO:  eta: 6:23:57  iter: 5199  total_loss: 0.3854  loss_cls: 0.0993  loss_box_reg: 0.2371  loss_rpn_cls: 0.006104  loss_rpn_loc: 0.02683  time: 0.8875  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:30:40] d2.utils.events INFO:  eta: 6:23:37  iter: 5219  total_loss: 0.4387  loss_cls: 0.1069  loss_box_reg: 0.2874  loss_rpn_cls: 0.008141  loss_rpn_loc: 0.0309  time: 0.8875  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:30:58] d2.utils.events INFO:  eta: 6:23:38  iter: 5239  total_loss: 0.3527  loss_cls: 0.1082  loss_box_reg: 0.2294  loss_rpn_cls: 0.008724  loss_rpn_loc: 0.02624  time: 0.8875  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:31:15] d2.utils.events INFO:  eta: 6:23:04  iter: 5259  total_loss: 0.444  loss_cls: 0.1249  loss_box_reg: 0.2741  loss_rpn_cls: 0.007861  loss_rpn_loc: 0.02907  time: 0.8874  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:31:33] d2.utils.events INFO:  eta: 6:23:03  iter: 5279  total_loss: 0.309  loss_cls: 0.07589  loss_box_reg: 0.1975  loss_rpn_cls: 0.003482  loss_rpn_loc: 0.02283  time: 0.8874  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:31:51] d2.utils.events INFO:  eta: 6:23:13  iter: 5299  total_loss: 0.3451  loss_cls: 0.08585  loss_box_reg: 0.2232  loss_rpn_cls: 0.005483  loss_rpn_loc: 0.02331  time: 0.8874  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:32:08] d2.utils.events INFO:  eta: 6:22:28  iter: 5319  total_loss: 0.5158  loss_cls: 0.1653  loss_box_reg: 0.2724  loss_rpn_cls: 0.01241  loss_rpn_loc: 0.03637  time: 0.8874  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:32:26] d2.utils.events INFO:  eta: 6:22:09  iter: 5339  total_loss: 0.3821  loss_cls: 0.1052  loss_box_reg: 0.2385  loss_rpn_cls: 0.009133  loss_rpn_loc: 0.02138  time: 0.8874  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:32:44] d2.utils.events INFO:  eta: 6:21:18  iter: 5359  total_loss: 0.3853  loss_cls: 0.1023  loss_box_reg: 0.2545  loss_rpn_cls: 0.006698  loss_rpn_loc: 0.02499  time: 0.8874  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:33:02] d2.utils.events INFO:  eta: 6:21:17  iter: 5379  total_loss: 0.3517  loss_cls: 0.0898  loss_box_reg: 0.2307  loss_rpn_cls: 0.007638  loss_rpn_loc: 0.02412  time: 0.8874  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:33:19] d2.utils.events INFO:  eta: 6:21:04  iter: 5399  total_loss: 0.4842  loss_cls: 0.1297  loss_box_reg: 0.3038  loss_rpn_cls: 0.007884  loss_rpn_loc: 0.04007  time: 0.8873  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:33:37] d2.utils.events INFO:  eta: 6:20:41  iter: 5419  total_loss: 0.3721  loss_cls: 0.1018  loss_box_reg: 0.2716  loss_rpn_cls: 0.004987  loss_rpn_loc: 0.02276  time: 0.8872  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:33:54] d2.utils.events INFO:  eta: 6:20:18  iter: 5439  total_loss: 0.4208  loss_cls: 0.1137  loss_box_reg: 0.2722  loss_rpn_cls: 0.006113  loss_rpn_loc: 0.02546  time: 0.8873  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:34:12] d2.utils.events INFO:  eta: 6:20:03  iter: 5459  total_loss: 0.4135  loss_cls: 0.1213  loss_box_reg: 0.2581  loss_rpn_cls: 0.005637  loss_rpn_loc: 0.0248  time: 0.8873  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:34:30] d2.utils.events INFO:  eta: 6:19:53  iter: 5479  total_loss: 0.3429  loss_cls: 0.0893  loss_box_reg: 0.2272  loss_rpn_cls: 0.006237  loss_rpn_loc: 0.02404  time: 0.8873  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:34:48] d2.utils.events INFO:  eta: 6:19:46  iter: 5499  total_loss: 0.352  loss_cls: 0.09199  loss_box_reg: 0.2407  loss_rpn_cls: 0.003281  loss_rpn_loc: 0.02028  time: 0.8873  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:35:05] d2.utils.events INFO:  eta: 6:19:12  iter: 5519  total_loss: 0.3864  loss_cls: 0.1079  loss_box_reg: 0.2394  loss_rpn_cls: 0.004554  loss_rpn_loc: 0.02579  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:35:23] d2.utils.events INFO:  eta: 6:18:59  iter: 5539  total_loss: 0.3978  loss_cls: 0.1053  loss_box_reg: 0.2552  loss_rpn_cls: 0.005462  loss_rpn_loc: 0.03052  time: 0.8872  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:35:41] d2.utils.events INFO:  eta: 6:18:52  iter: 5559  total_loss: 0.3276  loss_cls: 0.08015  loss_box_reg: 0.2134  loss_rpn_cls: 0.005289  loss_rpn_loc: 0.02407  time: 0.8872  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:35:59] d2.utils.events INFO:  eta: 6:18:52  iter: 5579  total_loss: 0.3596  loss_cls: 0.08011  loss_box_reg: 0.2273  loss_rpn_cls: 0.006667  loss_rpn_loc: 0.0281  time: 0.8873  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:36:17] d2.utils.events INFO:  eta: 6:18:26  iter: 5599  total_loss: 0.3165  loss_cls: 0.07639  loss_box_reg: 0.201  loss_rpn_cls: 0.005157  loss_rpn_loc: 0.01891  time: 0.8873  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:36:35] d2.utils.events INFO:  eta: 6:18:01  iter: 5619  total_loss: 0.3789  loss_cls: 0.09666  loss_box_reg: 0.2415  loss_rpn_cls: 0.007377  loss_rpn_loc: 0.028  time: 0.8873  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:36:52] d2.utils.events INFO:  eta: 6:17:17  iter: 5639  total_loss: 0.3689  loss_cls: 0.09271  loss_box_reg: 0.2251  loss_rpn_cls: 0.006859  loss_rpn_loc: 0.0255  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:37:09] d2.utils.events INFO:  eta: 6:16:57  iter: 5659  total_loss: 0.2898  loss_cls: 0.08663  loss_box_reg: 0.198  loss_rpn_cls: 0.003178  loss_rpn_loc: 0.02676  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:37:26] d2.utils.events INFO:  eta: 6:16:32  iter: 5679  total_loss: 0.3417  loss_cls: 0.09619  loss_box_reg: 0.2223  loss_rpn_cls: 0.003765  loss_rpn_loc: 0.02222  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:37:44] d2.utils.events INFO:  eta: 6:16:09  iter: 5699  total_loss: 0.2989  loss_cls: 0.07707  loss_box_reg: 0.2064  loss_rpn_cls: 0.005588  loss_rpn_loc: 0.01412  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:38:02] d2.utils.events INFO:  eta: 6:15:49  iter: 5719  total_loss: 0.3494  loss_cls: 0.09056  loss_box_reg: 0.2221  loss_rpn_cls: 0.006463  loss_rpn_loc: 0.02095  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:38:20] d2.utils.events INFO:  eta: 6:15:48  iter: 5739  total_loss: 0.3695  loss_cls: 0.09669  loss_box_reg: 0.2223  loss_rpn_cls: 0.005727  loss_rpn_loc: 0.02199  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:38:38] d2.utils.events INFO:  eta: 6:15:35  iter: 5759  total_loss: 0.3998  loss_cls: 0.1034  loss_box_reg: 0.26  loss_rpn_cls: 0.004398  loss_rpn_loc: 0.02888  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:38:56] d2.utils.events INFO:  eta: 6:15:18  iter: 5779  total_loss: 0.4275  loss_cls: 0.1178  loss_box_reg: 0.2659  loss_rpn_cls: 0.007925  loss_rpn_loc: 0.03205  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:39:13] d2.utils.events INFO:  eta: 6:14:38  iter: 5799  total_loss: 0.3059  loss_cls: 0.07728  loss_box_reg: 0.1991  loss_rpn_cls: 0.005191  loss_rpn_loc: 0.01808  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:39:31] d2.utils.events INFO:  eta: 6:13:38  iter: 5819  total_loss: 0.3864  loss_cls: 0.1109  loss_box_reg: 0.2457  loss_rpn_cls: 0.002927  loss_rpn_loc: 0.02806  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:39:50] d2.utils.events INFO:  eta: 6:14:16  iter: 5839  total_loss: 0.3348  loss_cls: 0.07564  loss_box_reg: 0.2272  loss_rpn_cls: 0.003619  loss_rpn_loc: 0.01979  time: 0.8872  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:40:07] d2.utils.events INFO:  eta: 6:13:44  iter: 5859  total_loss: 0.3352  loss_cls: 0.09109  loss_box_reg: 0.237  loss_rpn_cls: 0.002805  loss_rpn_loc: 0.02181  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:40:25] d2.utils.events INFO:  eta: 6:13:34  iter: 5879  total_loss: 0.3861  loss_cls: 0.0911  loss_box_reg: 0.2573  loss_rpn_cls: 0.005799  loss_rpn_loc: 0.02838  time: 0.8872  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:40:43] d2.utils.events INFO:  eta: 6:13:09  iter: 5899  total_loss: 0.3579  loss_cls: 0.07824  loss_box_reg: 0.2398  loss_rpn_cls: 0.004014  loss_rpn_loc: 0.02092  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:41:01] d2.utils.events INFO:  eta: 6:13:19  iter: 5919  total_loss: 0.2939  loss_cls: 0.07921  loss_box_reg: 0.1823  loss_rpn_cls: 0.003951  loss_rpn_loc: 0.02036  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:41:19] d2.utils.events INFO:  eta: 6:12:56  iter: 5939  total_loss: 0.3915  loss_cls: 0.09943  loss_box_reg: 0.2408  loss_rpn_cls: 0.004995  loss_rpn_loc: 0.02609  time: 0.8872  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:41:36] d2.utils.events INFO:  eta: 6:12:29  iter: 5959  total_loss: 0.3794  loss_cls: 0.1113  loss_box_reg: 0.2317  loss_rpn_cls: 0.004849  loss_rpn_loc: 0.0275  time: 0.8872  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:41:53] d2.utils.events INFO:  eta: 6:10:46  iter: 5979  total_loss: 0.3135  loss_cls: 0.09135  loss_box_reg: 0.1906  loss_rpn_cls: 0.004109  loss_rpn_loc: 0.02496  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:42:12] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 06:42:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 06:42:12] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 06:42:12] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 06:42:12] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 06:42:14] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1184 s/iter. Eval: 0.0002 s/iter. Total: 0.1193 s/iter. ETA=0:01:04
[04/03 06:42:19] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:59
[04/03 06:42:24] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:00:54
[04/03 06:42:29] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:49
[04/03 06:42:34] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:44
[04/03 06:42:39] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:39
[04/03 06:42:44] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 06:42:49] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 06:42:54] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 06:42:59] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 06:43:04] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 06:43:09] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:09
[04/03 06:43:14] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:03
[04/03 06:43:18] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.331994 (0.120317 s / iter per device, on 1 devices)
[04/03 06:43:18] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118960 s / iter per device, on 1 devices)
[04/03 06:43:18] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 06:43:18] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 06:43:19] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 06:43:19] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.48 seconds.
[04/03 06:43:19] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 06:43:19] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.031 | 12.187 | 5.364  | 2.152 | 12.226 | 18.154 |
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 06:43:19] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.423  | people          | 3.747  | bicycle    | 2.089 |
| car        | 31.064 | van             | 11.926 | truck      | 0.000 |
| tricycle   | 4.196  | awning-tricycle | 1.304  | bus        | 0.000 |
| motor      | 5.308  | others          | 0.289  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 06:43:19] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 06:43:19] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 06:43:19] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 06:43:19] d2.evaluation.testing INFO: copypaste: 6.0315,12.1870,5.3641,2.1524,12.2264,18.1539,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 06:43:19] d2.utils.events INFO:  eta: 6:11:11  iter: 5999  total_loss: 0.3511  loss_cls: 0.09436  loss_box_reg: 0.2251  loss_rpn_cls: 0.00502  loss_rpn_loc: 0.02939  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:43:37] d2.utils.events INFO:  eta: 6:10:47  iter: 6019  total_loss: 0.3144  loss_cls: 0.08108  loss_box_reg: 0.2016  loss_rpn_cls: 0.002827  loss_rpn_loc: 0.01987  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:43:54] d2.utils.events INFO:  eta: 6:09:52  iter: 6039  total_loss: 0.3761  loss_cls: 0.09313  loss_box_reg: 0.2397  loss_rpn_cls: 0.003725  loss_rpn_loc: 0.02645  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:44:12] d2.utils.events INFO:  eta: 6:09:21  iter: 6059  total_loss: 0.3136  loss_cls: 0.07548  loss_box_reg: 0.2021  loss_rpn_cls: 0.003155  loss_rpn_loc: 0.01752  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:44:29] d2.utils.events INFO:  eta: 6:09:03  iter: 6079  total_loss: 0.3994  loss_cls: 0.1019  loss_box_reg: 0.2571  loss_rpn_cls: 0.006795  loss_rpn_loc: 0.0262  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:44:47] d2.utils.events INFO:  eta: 6:08:59  iter: 6099  total_loss: 0.3838  loss_cls: 0.09389  loss_box_reg: 0.2438  loss_rpn_cls: 0.006316  loss_rpn_loc: 0.02838  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:45:06] d2.utils.events INFO:  eta: 6:09:25  iter: 6119  total_loss: 0.27  loss_cls: 0.07245  loss_box_reg: 0.179  loss_rpn_cls: 0.002571  loss_rpn_loc: 0.01877  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:45:23] d2.utils.events INFO:  eta: 6:09:01  iter: 6139  total_loss: 0.3717  loss_cls: 0.1032  loss_box_reg: 0.2533  loss_rpn_cls: 0.00359  loss_rpn_loc: 0.02768  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:45:40] d2.utils.events INFO:  eta: 6:09:25  iter: 6159  total_loss: 0.2979  loss_cls: 0.07763  loss_box_reg: 0.195  loss_rpn_cls: 0.003889  loss_rpn_loc: 0.02164  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:45:58] d2.utils.events INFO:  eta: 6:08:48  iter: 6179  total_loss: 0.3532  loss_cls: 0.09509  loss_box_reg: 0.228  loss_rpn_cls: 0.003524  loss_rpn_loc: 0.02054  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:46:17] d2.utils.events INFO:  eta: 6:08:55  iter: 6199  total_loss: 0.3805  loss_cls: 0.0983  loss_box_reg: 0.2445  loss_rpn_cls: 0.003604  loss_rpn_loc: 0.02514  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:46:34] d2.utils.events INFO:  eta: 6:08:46  iter: 6219  total_loss: 0.3024  loss_cls: 0.08024  loss_box_reg: 0.1816  loss_rpn_cls: 0.0048  loss_rpn_loc: 0.02541  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:46:52] d2.utils.events INFO:  eta: 6:08:28  iter: 6239  total_loss: 0.3006  loss_cls: 0.07184  loss_box_reg: 0.2115  loss_rpn_cls: 0.004844  loss_rpn_loc: 0.02309  time: 0.8870  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 06:47:10] d2.utils.events INFO:  eta: 6:08:21  iter: 6259  total_loss: 0.3596  loss_cls: 0.09084  loss_box_reg: 0.2299  loss_rpn_cls: 0.006512  loss_rpn_loc: 0.02735  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:47:28] d2.utils.events INFO:  eta: 6:08:12  iter: 6279  total_loss: 0.2854  loss_cls: 0.06574  loss_box_reg: 0.2036  loss_rpn_cls: 0.004646  loss_rpn_loc: 0.01856  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:47:46] d2.utils.events INFO:  eta: 6:07:54  iter: 6299  total_loss: 0.3256  loss_cls: 0.08352  loss_box_reg: 0.2103  loss_rpn_cls: 0.002589  loss_rpn_loc: 0.02256  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:48:04] d2.utils.events INFO:  eta: 6:07:49  iter: 6319  total_loss: 0.3388  loss_cls: 0.07978  loss_box_reg: 0.2118  loss_rpn_cls: 0.003172  loss_rpn_loc: 0.02308  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:48:21] d2.utils.events INFO:  eta: 6:07:10  iter: 6339  total_loss: 0.4282  loss_cls: 0.1043  loss_box_reg: 0.2647  loss_rpn_cls: 0.007482  loss_rpn_loc: 0.03345  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:48:39] d2.utils.events INFO:  eta: 6:07:01  iter: 6359  total_loss: 0.2849  loss_cls: 0.07633  loss_box_reg: 0.2021  loss_rpn_cls: 0.005113  loss_rpn_loc: 0.01911  time: 0.8870  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 06:48:57] d2.utils.events INFO:  eta: 6:07:17  iter: 6379  total_loss: 0.3361  loss_cls: 0.07444  loss_box_reg: 0.2342  loss_rpn_cls: 0.004918  loss_rpn_loc: 0.02196  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:49:15] d2.utils.events INFO:  eta: 6:07:16  iter: 6399  total_loss: 0.3645  loss_cls: 0.09951  loss_box_reg: 0.2352  loss_rpn_cls: 0.005976  loss_rpn_loc: 0.0265  time: 0.8872  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:49:32] d2.utils.events INFO:  eta: 6:06:42  iter: 6419  total_loss: 0.3757  loss_cls: 0.09682  loss_box_reg: 0.248  loss_rpn_cls: 0.003961  loss_rpn_loc: 0.02607  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:49:50] d2.utils.events INFO:  eta: 6:06:24  iter: 6439  total_loss: 0.2725  loss_cls: 0.06658  loss_box_reg: 0.1799  loss_rpn_cls: 0.002094  loss_rpn_loc: 0.01665  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:50:08] d2.utils.events INFO:  eta: 6:05:56  iter: 6459  total_loss: 0.3615  loss_cls: 0.09537  loss_box_reg: 0.2202  loss_rpn_cls: 0.005425  loss_rpn_loc: 0.02599  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:50:25] d2.utils.events INFO:  eta: 6:05:14  iter: 6479  total_loss: 0.2795  loss_cls: 0.06396  loss_box_reg: 0.1839  loss_rpn_cls: 0.004526  loss_rpn_loc: 0.02123  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:50:43] d2.utils.events INFO:  eta: 6:04:56  iter: 6499  total_loss: 0.3494  loss_cls: 0.08808  loss_box_reg: 0.2287  loss_rpn_cls: 0.00521  loss_rpn_loc: 0.03252  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:51:01] d2.utils.events INFO:  eta: 6:05:05  iter: 6519  total_loss: 0.336  loss_cls: 0.07382  loss_box_reg: 0.2237  loss_rpn_cls: 0.003418  loss_rpn_loc: 0.02354  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:51:18] d2.utils.events INFO:  eta: 6:04:54  iter: 6539  total_loss: 0.3987  loss_cls: 0.0851  loss_box_reg: 0.2577  loss_rpn_cls: 0.003013  loss_rpn_loc: 0.02483  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:51:36] d2.utils.events INFO:  eta: 6:05:03  iter: 6559  total_loss: 0.2997  loss_cls: 0.07004  loss_box_reg: 0.1951  loss_rpn_cls: 0.003413  loss_rpn_loc: 0.02501  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:51:54] d2.utils.events INFO:  eta: 6:04:09  iter: 6579  total_loss: 0.3664  loss_cls: 0.07407  loss_box_reg: 0.2409  loss_rpn_cls: 0.004134  loss_rpn_loc: 0.02069  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:52:11] d2.utils.events INFO:  eta: 6:03:53  iter: 6599  total_loss: 0.3143  loss_cls: 0.07833  loss_box_reg: 0.2141  loss_rpn_cls: 0.004402  loss_rpn_loc: 0.02568  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:52:29] d2.utils.events INFO:  eta: 6:03:33  iter: 6619  total_loss: 0.3619  loss_cls: 0.09859  loss_box_reg: 0.2065  loss_rpn_cls: 0.006013  loss_rpn_loc: 0.02197  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:52:47] d2.utils.events INFO:  eta: 6:03:52  iter: 6639  total_loss: 0.3882  loss_cls: 0.1264  loss_box_reg: 0.2443  loss_rpn_cls: 0.008271  loss_rpn_loc: 0.02497  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:53:05] d2.utils.events INFO:  eta: 6:03:31  iter: 6659  total_loss: 0.3601  loss_cls: 0.09313  loss_box_reg: 0.2201  loss_rpn_cls: 0.006705  loss_rpn_loc: 0.02763  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:53:23] d2.utils.events INFO:  eta: 6:03:21  iter: 6679  total_loss: 0.3706  loss_cls: 0.09621  loss_box_reg: 0.2236  loss_rpn_cls: 0.004027  loss_rpn_loc: 0.02834  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:53:41] d2.utils.events INFO:  eta: 6:03:05  iter: 6699  total_loss: 0.3379  loss_cls: 0.08657  loss_box_reg: 0.2236  loss_rpn_cls: 0.004611  loss_rpn_loc: 0.02873  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:53:58] d2.utils.events INFO:  eta: 6:02:47  iter: 6719  total_loss: 0.3146  loss_cls: 0.07452  loss_box_reg: 0.2043  loss_rpn_cls: 0.00266  loss_rpn_loc: 0.02623  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:54:15] d2.utils.events INFO:  eta: 6:02:22  iter: 6739  total_loss: 0.3484  loss_cls: 0.08139  loss_box_reg: 0.2106  loss_rpn_cls: 0.004538  loss_rpn_loc: 0.02037  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 06:54:33] d2.utils.events INFO:  eta: 6:01:46  iter: 6759  total_loss: 0.3707  loss_cls: 0.0976  loss_box_reg: 0.2413  loss_rpn_cls: 0.006869  loss_rpn_loc: 0.02496  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:54:51] d2.utils.events INFO:  eta: 6:01:43  iter: 6779  total_loss: 0.3188  loss_cls: 0.07871  loss_box_reg: 0.2039  loss_rpn_cls: 0.005464  loss_rpn_loc: 0.03151  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:55:09] d2.utils.events INFO:  eta: 6:01:30  iter: 6799  total_loss: 0.2753  loss_cls: 0.07052  loss_box_reg: 0.1839  loss_rpn_cls: 0.002636  loss_rpn_loc: 0.01484  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:55:27] d2.utils.events INFO:  eta: 6:00:36  iter: 6819  total_loss: 0.3895  loss_cls: 0.1051  loss_box_reg: 0.2446  loss_rpn_cls: 0.01158  loss_rpn_loc: 0.02772  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:55:44] d2.utils.events INFO:  eta: 5:59:29  iter: 6839  total_loss: 0.3248  loss_cls: 0.07546  loss_box_reg: 0.2224  loss_rpn_cls: 0.003931  loss_rpn_loc: 0.01866  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:56:01] d2.utils.events INFO:  eta: 5:59:08  iter: 6859  total_loss: 0.3042  loss_cls: 0.07925  loss_box_reg: 0.1957  loss_rpn_cls: 0.004397  loss_rpn_loc: 0.02318  time: 0.8867  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:56:19] d2.utils.events INFO:  eta: 5:58:48  iter: 6879  total_loss: 0.2936  loss_cls: 0.0655  loss_box_reg: 0.2062  loss_rpn_cls: 0.003495  loss_rpn_loc: 0.01755  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:56:36] d2.utils.events INFO:  eta: 5:58:33  iter: 6899  total_loss: 0.2896  loss_cls: 0.06818  loss_box_reg: 0.2007  loss_rpn_cls: 0.002539  loss_rpn_loc: 0.02086  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:56:54] d2.utils.events INFO:  eta: 5:58:13  iter: 6919  total_loss: 0.2662  loss_cls: 0.07006  loss_box_reg: 0.1859  loss_rpn_cls: 0.003687  loss_rpn_loc: 0.02099  time: 0.8867  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:57:13] d2.utils.events INFO:  eta: 5:58:00  iter: 6939  total_loss: 0.3703  loss_cls: 0.09218  loss_box_reg: 0.227  loss_rpn_cls: 0.003376  loss_rpn_loc: 0.02663  time: 0.8867  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 06:57:31] d2.utils.events INFO:  eta: 5:58:10  iter: 6959  total_loss: 0.346  loss_cls: 0.08881  loss_box_reg: 0.2186  loss_rpn_cls: 0.003657  loss_rpn_loc: 0.02285  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:57:49] d2.utils.events INFO:  eta: 5:58:44  iter: 6979  total_loss: 0.3527  loss_cls: 0.09743  loss_box_reg: 0.2214  loss_rpn_cls: 0.003746  loss_rpn_loc: 0.02171  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:58:06] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 06:58:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 06:58:06] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 06:58:06] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 06:58:06] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 06:58:08] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:01:03
[04/03 06:58:13] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:59
[04/03 06:58:18] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:54
[04/03 06:58:23] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:49
[04/03 06:58:28] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:44
[04/03 06:58:33] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:39
[04/03 06:58:38] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 06:58:43] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 06:58:48] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 06:58:53] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:19
[04/03 06:58:59] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 06:59:04] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:09
[04/03 06:59:09] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:03
[04/03 06:59:13] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.321090 (0.120297 s / iter per device, on 1 devices)
[04/03 06:59:13] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118946 s / iter per device, on 1 devices)
[04/03 06:59:13] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 06:59:13] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 06:59:13] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 06:59:13] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 06:59:14] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.48 seconds.
[04/03 06:59:14] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 06:59:14] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 5.672 | 11.363 | 5.125  | 2.023 | 11.522 | 13.690 |
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 06:59:14] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.643  | people          | 2.769  | bicycle    | 1.986 |
| car        | 32.535 | van             | 11.531 | truck      | 0.000 |
| tricycle   | 3.636  | awning-tricycle | 0.298  | bus        | 0.000 |
| motor      | 3.997  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 06:59:14] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 06:59:14] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 06:59:14] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 06:59:14] d2.evaluation.testing INFO: copypaste: 5.6722,11.3634,5.1249,2.0230,11.5215,13.6902,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 06:59:14] d2.utils.events INFO:  eta: 5:57:54  iter: 6999  total_loss: 0.369  loss_cls: 0.09716  loss_box_reg: 0.2217  loss_rpn_cls: 0.004405  loss_rpn_loc: 0.02802  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 06:59:31] d2.utils.events INFO:  eta: 5:57:47  iter: 7019  total_loss: 0.3064  loss_cls: 0.06965  loss_box_reg: 0.2017  loss_rpn_cls: 0.005317  loss_rpn_loc: 0.02441  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 06:59:50] d2.utils.events INFO:  eta: 5:57:55  iter: 7039  total_loss: 0.3346  loss_cls: 0.08353  loss_box_reg: 0.2329  loss_rpn_cls: 0.004112  loss_rpn_loc: 0.02334  time: 0.8868  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 07:00:07] d2.utils.events INFO:  eta: 5:57:32  iter: 7059  total_loss: 0.2779  loss_cls: 0.07157  loss_box_reg: 0.1925  loss_rpn_cls: 0.004091  loss_rpn_loc: 0.0186  time: 0.8867  data_time: 0.0029  lr: 0.0002  max_mem: 15391M
[04/03 07:00:24] d2.utils.events INFO:  eta: 5:56:45  iter: 7079  total_loss: 0.2889  loss_cls: 0.07631  loss_box_reg: 0.2089  loss_rpn_cls: 0.004452  loss_rpn_loc: 0.02551  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:00:42] d2.utils.events INFO:  eta: 5:56:56  iter: 7099  total_loss: 0.3536  loss_cls: 0.08139  loss_box_reg: 0.228  loss_rpn_cls: 0.003564  loss_rpn_loc: 0.02212  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:01:00] d2.utils.events INFO:  eta: 5:56:13  iter: 7119  total_loss: 0.3141  loss_cls: 0.07729  loss_box_reg: 0.2163  loss_rpn_cls: 0.005515  loss_rpn_loc: 0.0244  time: 0.8867  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:01:18] d2.utils.events INFO:  eta: 5:56:02  iter: 7139  total_loss: 0.3635  loss_cls: 0.09464  loss_box_reg: 0.2355  loss_rpn_cls: 0.005928  loss_rpn_loc: 0.02949  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:01:36] d2.utils.events INFO:  eta: 5:55:55  iter: 7159  total_loss: 0.2717  loss_cls: 0.06729  loss_box_reg: 0.1877  loss_rpn_cls: 0.002782  loss_rpn_loc: 0.0284  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:01:54] d2.utils.events INFO:  eta: 5:55:37  iter: 7179  total_loss: 0.3177  loss_cls: 0.08585  loss_box_reg: 0.2084  loss_rpn_cls: 0.004975  loss_rpn_loc: 0.02337  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:02:12] d2.utils.events INFO:  eta: 5:55:01  iter: 7199  total_loss: 0.3236  loss_cls: 0.07866  loss_box_reg: 0.2185  loss_rpn_cls: 0.005757  loss_rpn_loc: 0.02834  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:02:30] d2.utils.events INFO:  eta: 5:54:46  iter: 7219  total_loss: 0.2671  loss_cls: 0.06652  loss_box_reg: 0.1897  loss_rpn_cls: 0.002393  loss_rpn_loc: 0.01821  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:02:48] d2.utils.events INFO:  eta: 5:54:50  iter: 7239  total_loss: 0.2614  loss_cls: 0.06368  loss_box_reg: 0.1805  loss_rpn_cls: 0.001884  loss_rpn_loc: 0.01713  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:03:05] d2.utils.events INFO:  eta: 5:54:08  iter: 7259  total_loss: 0.3772  loss_cls: 0.0911  loss_box_reg: 0.2364  loss_rpn_cls: 0.005341  loss_rpn_loc: 0.0245  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:03:23] d2.utils.events INFO:  eta: 5:53:47  iter: 7279  total_loss: 0.3493  loss_cls: 0.08644  loss_box_reg: 0.2276  loss_rpn_cls: 0.006296  loss_rpn_loc: 0.02865  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:03:40] d2.utils.events INFO:  eta: 5:53:25  iter: 7299  total_loss: 0.3494  loss_cls: 0.1081  loss_box_reg: 0.2304  loss_rpn_cls: 0.003171  loss_rpn_loc: 0.01977  time: 0.8868  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 07:03:59] d2.utils.events INFO:  eta: 5:53:16  iter: 7319  total_loss: 0.3311  loss_cls: 0.08113  loss_box_reg: 0.2235  loss_rpn_cls: 0.00211  loss_rpn_loc: 0.02  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:04:17] d2.utils.events INFO:  eta: 5:53:21  iter: 7339  total_loss: 0.3477  loss_cls: 0.09448  loss_box_reg: 0.2214  loss_rpn_cls: 0.004454  loss_rpn_loc: 0.02822  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:04:35] d2.utils.events INFO:  eta: 5:53:22  iter: 7359  total_loss: 0.2906  loss_cls: 0.06554  loss_box_reg: 0.191  loss_rpn_cls: 0.00338  loss_rpn_loc: 0.01742  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:04:53] d2.utils.events INFO:  eta: 5:52:28  iter: 7379  total_loss: 0.3603  loss_cls: 0.08024  loss_box_reg: 0.2277  loss_rpn_cls: 0.003225  loss_rpn_loc: 0.02437  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:05:10] d2.utils.events INFO:  eta: 5:52:00  iter: 7399  total_loss: 0.2526  loss_cls: 0.0663  loss_box_reg: 0.1775  loss_rpn_cls: 0.004083  loss_rpn_loc: 0.01998  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:05:28] d2.utils.events INFO:  eta: 5:51:53  iter: 7419  total_loss: 0.3187  loss_cls: 0.07616  loss_box_reg: 0.199  loss_rpn_cls: 0.002826  loss_rpn_loc: 0.0222  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:05:47] d2.utils.events INFO:  eta: 5:51:50  iter: 7439  total_loss: 0.3412  loss_cls: 0.08314  loss_box_reg: 0.2194  loss_rpn_cls: 0.005455  loss_rpn_loc: 0.02524  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:06:05] d2.utils.events INFO:  eta: 5:51:33  iter: 7459  total_loss: 0.3066  loss_cls: 0.07806  loss_box_reg: 0.2014  loss_rpn_cls: 0.003723  loss_rpn_loc: 0.02483  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:06:23] d2.utils.events INFO:  eta: 5:52:00  iter: 7479  total_loss: 0.3186  loss_cls: 0.07662  loss_box_reg: 0.1983  loss_rpn_cls: 0.004599  loss_rpn_loc: 0.0257  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:06:40] d2.utils.events INFO:  eta: 5:51:37  iter: 7499  total_loss: 0.3259  loss_cls: 0.08251  loss_box_reg: 0.1952  loss_rpn_cls: 0.002729  loss_rpn_loc: 0.02068  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:06:58] d2.utils.events INFO:  eta: 5:50:23  iter: 7519  total_loss: 0.2897  loss_cls: 0.07037  loss_box_reg: 0.1869  loss_rpn_cls: 0.002901  loss_rpn_loc: 0.02036  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:07:15] d2.utils.events INFO:  eta: 5:50:01  iter: 7539  total_loss: 0.2849  loss_cls: 0.07661  loss_box_reg: 0.2039  loss_rpn_cls: 0.001463  loss_rpn_loc: 0.01804  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:07:33] d2.utils.events INFO:  eta: 5:49:39  iter: 7559  total_loss: 0.2678  loss_cls: 0.06557  loss_box_reg: 0.1833  loss_rpn_cls: 0.003109  loss_rpn_loc: 0.01814  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:07:51] d2.utils.events INFO:  eta: 5:49:38  iter: 7579  total_loss: 0.2402  loss_cls: 0.05642  loss_box_reg: 0.1528  loss_rpn_cls: 0.004051  loss_rpn_loc: 0.02247  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:08:09] d2.utils.events INFO:  eta: 5:49:11  iter: 7599  total_loss: 0.3354  loss_cls: 0.08052  loss_box_reg: 0.2113  loss_rpn_cls: 0.00292  loss_rpn_loc: 0.02642  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:08:26] d2.utils.events INFO:  eta: 5:49:10  iter: 7619  total_loss: 0.3063  loss_cls: 0.07237  loss_box_reg: 0.2018  loss_rpn_cls: 0.003725  loss_rpn_loc: 0.02064  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:08:44] d2.utils.events INFO:  eta: 5:48:39  iter: 7639  total_loss: 0.287  loss_cls: 0.06346  loss_box_reg: 0.1925  loss_rpn_cls: 0.002664  loss_rpn_loc: 0.01878  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:09:01] d2.utils.events INFO:  eta: 5:48:18  iter: 7659  total_loss: 0.3063  loss_cls: 0.07266  loss_box_reg: 0.1985  loss_rpn_cls: 0.005217  loss_rpn_loc: 0.0259  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:09:19] d2.utils.events INFO:  eta: 5:47:54  iter: 7679  total_loss: 0.3842  loss_cls: 0.08824  loss_box_reg: 0.2518  loss_rpn_cls: 0.002888  loss_rpn_loc: 0.02927  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:09:37] d2.utils.events INFO:  eta: 5:47:36  iter: 7699  total_loss: 0.2993  loss_cls: 0.05685  loss_box_reg: 0.2111  loss_rpn_cls: 0.003023  loss_rpn_loc: 0.02419  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:09:54] d2.utils.events INFO:  eta: 5:47:16  iter: 7719  total_loss: 0.2974  loss_cls: 0.0827  loss_box_reg: 0.1777  loss_rpn_cls: 0.004026  loss_rpn_loc: 0.0203  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:10:12] d2.utils.events INFO:  eta: 5:47:08  iter: 7739  total_loss: 0.3419  loss_cls: 0.07991  loss_box_reg: 0.2368  loss_rpn_cls: 0.003877  loss_rpn_loc: 0.0271  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:10:30] d2.utils.events INFO:  eta: 5:46:50  iter: 7759  total_loss: 0.2863  loss_cls: 0.07245  loss_box_reg: 0.1822  loss_rpn_cls: 0.002709  loss_rpn_loc: 0.02099  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:10:48] d2.utils.events INFO:  eta: 5:46:29  iter: 7779  total_loss: 0.301  loss_cls: 0.06921  loss_box_reg: 0.2102  loss_rpn_cls: 0.004079  loss_rpn_loc: 0.01844  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:11:05] d2.utils.events INFO:  eta: 5:46:02  iter: 7799  total_loss: 0.3904  loss_cls: 0.09152  loss_box_reg: 0.2318  loss_rpn_cls: 0.004065  loss_rpn_loc: 0.02396  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:11:23] d2.utils.events INFO:  eta: 5:45:53  iter: 7819  total_loss: 0.2447  loss_cls: 0.07351  loss_box_reg: 0.1674  loss_rpn_cls: 0.002575  loss_rpn_loc: 0.01645  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:11:41] d2.utils.events INFO:  eta: 5:45:46  iter: 7839  total_loss: 0.2401  loss_cls: 0.05948  loss_box_reg: 0.1575  loss_rpn_cls: 0.002404  loss_rpn_loc: 0.01814  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:11:59] d2.utils.events INFO:  eta: 5:45:34  iter: 7859  total_loss: 0.3267  loss_cls: 0.08237  loss_box_reg: 0.217  loss_rpn_cls: 0.004852  loss_rpn_loc: 0.02912  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:12:17] d2.utils.events INFO:  eta: 5:45:31  iter: 7879  total_loss: 0.3186  loss_cls: 0.07812  loss_box_reg: 0.2104  loss_rpn_cls: 0.006113  loss_rpn_loc: 0.02301  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:12:35] d2.utils.events INFO:  eta: 5:44:58  iter: 7899  total_loss: 0.3146  loss_cls: 0.07499  loss_box_reg: 0.2054  loss_rpn_cls: 0.00618  loss_rpn_loc: 0.02412  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:12:53] d2.utils.events INFO:  eta: 5:44:55  iter: 7919  total_loss: 0.2782  loss_cls: 0.06295  loss_box_reg: 0.1821  loss_rpn_cls: 0.002499  loss_rpn_loc: 0.02012  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:13:10] d2.utils.events INFO:  eta: 5:44:11  iter: 7939  total_loss: 0.344  loss_cls: 0.08144  loss_box_reg: 0.2409  loss_rpn_cls: 0.003881  loss_rpn_loc: 0.02704  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:13:29] d2.utils.events INFO:  eta: 5:43:51  iter: 7959  total_loss: 0.3401  loss_cls: 0.08877  loss_box_reg: 0.218  loss_rpn_cls: 0.002636  loss_rpn_loc: 0.01939  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:13:46] d2.utils.events INFO:  eta: 5:43:23  iter: 7979  total_loss: 0.2932  loss_cls: 0.06858  loss_box_reg: 0.2077  loss_rpn_cls: 0.002786  loss_rpn_loc: 0.02187  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:14:04] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 07:14:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 07:14:05] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 07:14:05] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 07:14:05] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 07:14:06] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1191 s/iter. ETA=0:01:03
[04/03 07:14:11] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0010 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:59
[04/03 07:14:16] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:54
[04/03 07:14:21] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:49
[04/03 07:14:27] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:44
[04/03 07:14:32] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:39
[04/03 07:14:37] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 07:14:42] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 07:14:47] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 07:14:52] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 07:14:57] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:14
[04/03 07:15:02] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:09
[04/03 07:15:07] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:03
[04/03 07:15:11] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.259018 (0.120182 s / iter per device, on 1 devices)
[04/03 07:15:11] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118818 s / iter per device, on 1 devices)
[04/03 07:15:11] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 07:15:11] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 07:15:11] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 07:15:11] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 07:15:12] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.45 seconds.
[04/03 07:15:12] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 07:15:12] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 5.878 | 11.326 | 5.479  | 2.064 | 11.900 | 15.938 |
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 07:15:12] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.241  | people          | 2.738  | bicycle    | 2.027 |
| car        | 33.195 | van             | 12.958 | truck      | 0.000 |
| tricycle   | 2.738  | awning-tricycle | 0.448  | bus        | 0.000 |
| motor      | 4.142  | others          | 0.175  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 07:15:12] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 07:15:12] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 07:15:12] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 07:15:12] d2.evaluation.testing INFO: copypaste: 5.8783,11.3258,5.4791,2.0638,11.8998,15.9377,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 07:15:12] d2.utils.events INFO:  eta: 5:43:22  iter: 7999  total_loss: 0.3304  loss_cls: 0.07365  loss_box_reg: 0.2209  loss_rpn_cls: 0.002679  loss_rpn_loc: 0.02017  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:15:29] d2.utils.events INFO:  eta: 5:42:58  iter: 8019  total_loss: 0.3156  loss_cls: 0.08186  loss_box_reg: 0.1901  loss_rpn_cls: 0.004136  loss_rpn_loc: 0.02312  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:15:47] d2.utils.events INFO:  eta: 5:42:34  iter: 8039  total_loss: 0.3081  loss_cls: 0.06677  loss_box_reg: 0.207  loss_rpn_cls: 0.002268  loss_rpn_loc: 0.01949  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:16:05] d2.utils.events INFO:  eta: 5:42:18  iter: 8059  total_loss: 0.2859  loss_cls: 0.07303  loss_box_reg: 0.194  loss_rpn_cls: 0.003527  loss_rpn_loc: 0.02056  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:16:23] d2.utils.events INFO:  eta: 5:42:20  iter: 8079  total_loss: 0.2605  loss_cls: 0.0582  loss_box_reg: 0.1771  loss_rpn_cls: 0.002733  loss_rpn_loc: 0.01607  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:16:41] d2.utils.events INFO:  eta: 5:41:40  iter: 8099  total_loss: 0.2798  loss_cls: 0.0681  loss_box_reg: 0.1842  loss_rpn_cls: 0.004445  loss_rpn_loc: 0.02306  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:16:59] d2.utils.events INFO:  eta: 5:41:21  iter: 8119  total_loss: 0.3122  loss_cls: 0.06911  loss_box_reg: 0.1916  loss_rpn_cls: 0.006308  loss_rpn_loc: 0.01713  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:17:16] d2.utils.events INFO:  eta: 5:40:52  iter: 8139  total_loss: 0.3603  loss_cls: 0.09223  loss_box_reg: 0.2234  loss_rpn_cls: 0.005948  loss_rpn_loc: 0.02275  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:17:34] d2.utils.events INFO:  eta: 5:40:26  iter: 8159  total_loss: 0.293  loss_cls: 0.0696  loss_box_reg: 0.1945  loss_rpn_cls: 0.006563  loss_rpn_loc: 0.01899  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:17:51] d2.utils.events INFO:  eta: 5:40:08  iter: 8179  total_loss: 0.3801  loss_cls: 0.108  loss_box_reg: 0.2348  loss_rpn_cls: 0.004055  loss_rpn_loc: 0.02592  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:18:09] d2.utils.events INFO:  eta: 5:39:47  iter: 8199  total_loss: 0.2974  loss_cls: 0.07346  loss_box_reg: 0.1993  loss_rpn_cls: 0.002348  loss_rpn_loc: 0.0241  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:18:27] d2.utils.events INFO:  eta: 5:39:43  iter: 8219  total_loss: 0.2468  loss_cls: 0.05322  loss_box_reg: 0.1911  loss_rpn_cls: 0.001491  loss_rpn_loc: 0.01415  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:18:45] d2.utils.events INFO:  eta: 5:38:57  iter: 8239  total_loss: 0.2651  loss_cls: 0.06226  loss_box_reg: 0.173  loss_rpn_cls: 0.002691  loss_rpn_loc: 0.0165  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:19:03] d2.utils.events INFO:  eta: 5:38:56  iter: 8259  total_loss: 0.2972  loss_cls: 0.07637  loss_box_reg: 0.2043  loss_rpn_cls: 0.003222  loss_rpn_loc: 0.02236  time: 0.8870  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:19:21] d2.utils.events INFO:  eta: 5:38:39  iter: 8279  total_loss: 0.3134  loss_cls: 0.08404  loss_box_reg: 0.205  loss_rpn_cls: 0.003168  loss_rpn_loc: 0.01873  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:19:39] d2.utils.events INFO:  eta: 5:38:47  iter: 8299  total_loss: 0.3012  loss_cls: 0.07356  loss_box_reg: 0.1827  loss_rpn_cls: 0.004777  loss_rpn_loc: 0.02457  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:19:57] d2.utils.events INFO:  eta: 5:38:02  iter: 8319  total_loss: 0.3177  loss_cls: 0.09048  loss_box_reg: 0.1916  loss_rpn_cls: 0.004564  loss_rpn_loc: 0.02347  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:20:15] d2.utils.events INFO:  eta: 5:37:44  iter: 8339  total_loss: 0.3199  loss_cls: 0.07587  loss_box_reg: 0.2178  loss_rpn_cls: 0.002477  loss_rpn_loc: 0.0197  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:20:32] d2.utils.events INFO:  eta: 5:37:13  iter: 8359  total_loss: 0.3386  loss_cls: 0.08192  loss_box_reg: 0.2187  loss_rpn_cls: 0.005649  loss_rpn_loc: 0.026  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:20:50] d2.utils.events INFO:  eta: 5:37:06  iter: 8379  total_loss: 0.3388  loss_cls: 0.07285  loss_box_reg: 0.2109  loss_rpn_cls: 0.004296  loss_rpn_loc: 0.02525  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:21:08] d2.utils.events INFO:  eta: 5:37:27  iter: 8399  total_loss: 0.3543  loss_cls: 0.0843  loss_box_reg: 0.2199  loss_rpn_cls: 0.004297  loss_rpn_loc: 0.0286  time: 0.8871  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:21:26] d2.utils.events INFO:  eta: 5:37:01  iter: 8419  total_loss: 0.2861  loss_cls: 0.05838  loss_box_reg: 0.1929  loss_rpn_cls: 0.001853  loss_rpn_loc: 0.01803  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:21:44] d2.utils.events INFO:  eta: 5:36:28  iter: 8439  total_loss: 0.3254  loss_cls: 0.07496  loss_box_reg: 0.2015  loss_rpn_cls: 0.002524  loss_rpn_loc: 0.01783  time: 0.8872  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:22:02] d2.utils.events INFO:  eta: 5:35:54  iter: 8459  total_loss: 0.2827  loss_cls: 0.0756  loss_box_reg: 0.1922  loss_rpn_cls: 0.002761  loss_rpn_loc: 0.02562  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:22:19] d2.utils.events INFO:  eta: 5:35:20  iter: 8479  total_loss: 0.2953  loss_cls: 0.07983  loss_box_reg: 0.1787  loss_rpn_cls: 0.005594  loss_rpn_loc: 0.02359  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:22:37] d2.utils.events INFO:  eta: 5:35:08  iter: 8499  total_loss: 0.2984  loss_cls: 0.06688  loss_box_reg: 0.1773  loss_rpn_cls: 0.003991  loss_rpn_loc: 0.01823  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:22:55] d2.utils.events INFO:  eta: 5:35:17  iter: 8519  total_loss: 0.2568  loss_cls: 0.06331  loss_box_reg: 0.1761  loss_rpn_cls: 0.004525  loss_rpn_loc: 0.02208  time: 0.8871  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:23:13] d2.utils.events INFO:  eta: 5:34:42  iter: 8539  total_loss: 0.353  loss_cls: 0.08885  loss_box_reg: 0.2268  loss_rpn_cls: 0.004239  loss_rpn_loc: 0.02746  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:23:30] d2.utils.events INFO:  eta: 5:34:20  iter: 8559  total_loss: 0.2888  loss_cls: 0.06948  loss_box_reg: 0.1937  loss_rpn_cls: 0.00296  loss_rpn_loc: 0.02004  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:23:48] d2.utils.events INFO:  eta: 5:34:02  iter: 8579  total_loss: 0.2766  loss_cls: 0.06286  loss_box_reg: 0.1904  loss_rpn_cls: 0.003668  loss_rpn_loc: 0.01869  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:24:05] d2.utils.events INFO:  eta: 5:33:44  iter: 8599  total_loss: 0.3204  loss_cls: 0.09534  loss_box_reg: 0.2017  loss_rpn_cls: 0.006293  loss_rpn_loc: 0.02377  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:24:24] d2.utils.events INFO:  eta: 5:33:44  iter: 8619  total_loss: 0.2523  loss_cls: 0.06216  loss_box_reg: 0.1918  loss_rpn_cls: 0.002996  loss_rpn_loc: 0.02074  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:24:41] d2.utils.events INFO:  eta: 5:33:17  iter: 8639  total_loss: 0.2778  loss_cls: 0.07168  loss_box_reg: 0.1883  loss_rpn_cls: 0.00232  loss_rpn_loc: 0.01688  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:24:58] d2.utils.events INFO:  eta: 5:32:50  iter: 8659  total_loss: 0.3447  loss_cls: 0.1001  loss_box_reg: 0.2095  loss_rpn_cls: 0.00254  loss_rpn_loc: 0.02763  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:25:15] d2.utils.events INFO:  eta: 5:32:36  iter: 8679  total_loss: 0.2924  loss_cls: 0.0792  loss_box_reg: 0.1734  loss_rpn_cls: 0.002859  loss_rpn_loc: 0.0182  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:25:33] d2.utils.events INFO:  eta: 5:32:14  iter: 8699  total_loss: 0.2993  loss_cls: 0.09655  loss_box_reg: 0.1877  loss_rpn_cls: 0.003025  loss_rpn_loc: 0.02131  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:25:51] d2.utils.events INFO:  eta: 5:33:04  iter: 8719  total_loss: 0.2665  loss_cls: 0.06558  loss_box_reg: 0.1658  loss_rpn_cls: 0.003092  loss_rpn_loc: 0.02218  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:26:10] d2.utils.events INFO:  eta: 5:32:58  iter: 8739  total_loss: 0.3022  loss_cls: 0.09049  loss_box_reg: 0.2081  loss_rpn_cls: 0.001615  loss_rpn_loc: 0.02268  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:26:28] d2.utils.events INFO:  eta: 5:32:56  iter: 8759  total_loss: 0.3348  loss_cls: 0.08403  loss_box_reg: 0.2083  loss_rpn_cls: 0.002052  loss_rpn_loc: 0.02706  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:26:45] d2.utils.events INFO:  eta: 5:32:12  iter: 8779  total_loss: 0.2385  loss_cls: 0.06427  loss_box_reg: 0.1633  loss_rpn_cls: 0.002209  loss_rpn_loc: 0.02014  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:27:03] d2.utils.events INFO:  eta: 5:31:54  iter: 8799  total_loss: 0.3687  loss_cls: 0.07816  loss_box_reg: 0.2477  loss_rpn_cls: 0.002691  loss_rpn_loc: 0.02318  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:27:21] d2.utils.events INFO:  eta: 5:32:02  iter: 8819  total_loss: 0.2733  loss_cls: 0.05688  loss_box_reg: 0.2012  loss_rpn_cls: 0.004994  loss_rpn_loc: 0.01742  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:27:39] d2.utils.events INFO:  eta: 5:31:29  iter: 8839  total_loss: 0.3113  loss_cls: 0.07931  loss_box_reg: 0.1993  loss_rpn_cls: 0.003543  loss_rpn_loc: 0.0214  time: 0.8870  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 07:27:57] d2.utils.events INFO:  eta: 5:31:50  iter: 8859  total_loss: 0.2539  loss_cls: 0.06507  loss_box_reg: 0.1758  loss_rpn_cls: 0.0031  loss_rpn_loc: 0.0256  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:28:14] d2.utils.events INFO:  eta: 5:30:42  iter: 8879  total_loss: 0.2336  loss_cls: 0.05674  loss_box_reg: 0.1615  loss_rpn_cls: 0.002247  loss_rpn_loc: 0.01492  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:28:31] d2.utils.events INFO:  eta: 5:31:00  iter: 8899  total_loss: 0.2719  loss_cls: 0.06122  loss_box_reg: 0.178  loss_rpn_cls: 0.003263  loss_rpn_loc: 0.01928  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:28:49] d2.utils.events INFO:  eta: 5:30:33  iter: 8919  total_loss: 0.3079  loss_cls: 0.08256  loss_box_reg: 0.2031  loss_rpn_cls: 0.004561  loss_rpn_loc: 0.02439  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:29:08] d2.utils.events INFO:  eta: 5:31:01  iter: 8939  total_loss: 0.3091  loss_cls: 0.07433  loss_box_reg: 0.2049  loss_rpn_cls: 0.003444  loss_rpn_loc: 0.02054  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:29:26] d2.utils.events INFO:  eta: 5:30:23  iter: 8959  total_loss: 0.3649  loss_cls: 0.0872  loss_box_reg: 0.2596  loss_rpn_cls: 0.003536  loss_rpn_loc: 0.02653  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:29:43] d2.utils.events INFO:  eta: 5:30:06  iter: 8979  total_loss: 0.244  loss_cls: 0.0534  loss_box_reg: 0.1627  loss_rpn_cls: 0.002398  loss_rpn_loc: 0.01771  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:30:01] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 07:30:01] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 07:30:01] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 07:30:01] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 07:30:01] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 07:30:03] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:01:04
[04/03 07:30:08] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0003 s/iter. Total: 0.1201 s/iter. ETA=0:00:59
[04/03 07:30:13] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:54
[04/03 07:30:18] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:49
[04/03 07:30:23] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:44
[04/03 07:30:28] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:39
[04/03 07:30:33] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:34
[04/03 07:30:38] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:29
[04/03 07:30:43] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:24
[04/03 07:30:48] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:19
[04/03 07:30:53] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:14
[04/03 07:30:58] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:09
[04/03 07:31:03] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:03
[04/03 07:31:08] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.322810 (0.120300 s / iter per device, on 1 devices)
[04/03 07:31:08] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118968 s / iter per device, on 1 devices)
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 07:31:08] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 07:31:08] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.45 seconds.
[04/03 07:31:08] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 07:31:08] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 5.983 | 11.573 | 5.439  | 2.316 | 12.247 | 14.686 |
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 07:31:08] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.724  | people          | 3.901  | bicycle    | 2.390 |
| car        | 32.008 | van             | 12.746 | truck      | 0.000 |
| tricycle   | 1.173  | awning-tricycle | 0.572  | bus        | 0.000 |
| motor      | 5.297  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 07:31:08] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 07:31:08] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 07:31:08] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 07:31:08] d2.evaluation.testing INFO: copypaste: 5.9828,11.5731,5.4393,2.3162,12.2469,14.6865,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 07:31:08] d2.utils.events INFO:  eta: 5:29:38  iter: 8999  total_loss: 0.2533  loss_cls: 0.05646  loss_box_reg: 0.1649  loss_rpn_cls: 0.003714  loss_rpn_loc: 0.01325  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:31:26] d2.utils.events INFO:  eta: 5:29:20  iter: 9019  total_loss: 0.3102  loss_cls: 0.06488  loss_box_reg: 0.2072  loss_rpn_cls: 0.002876  loss_rpn_loc: 0.01726  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:31:43] d2.utils.events INFO:  eta: 5:28:54  iter: 9039  total_loss: 0.3729  loss_cls: 0.07799  loss_box_reg: 0.2554  loss_rpn_cls: 0.004173  loss_rpn_loc: 0.02588  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:32:02] d2.utils.events INFO:  eta: 5:28:55  iter: 9059  total_loss: 0.2626  loss_cls: 0.06565  loss_box_reg: 0.1858  loss_rpn_cls: 0.001956  loss_rpn_loc: 0.01769  time: 0.8870  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:32:20] d2.utils.events INFO:  eta: 5:28:36  iter: 9079  total_loss: 0.3079  loss_cls: 0.07902  loss_box_reg: 0.2014  loss_rpn_cls: 0.001324  loss_rpn_loc: 0.01492  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:32:38] d2.utils.events INFO:  eta: 5:28:19  iter: 9099  total_loss: 0.2613  loss_cls: 0.07427  loss_box_reg: 0.174  loss_rpn_cls: 0.003476  loss_rpn_loc: 0.02242  time: 0.8870  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:32:56] d2.utils.events INFO:  eta: 5:28:24  iter: 9119  total_loss: 0.2627  loss_cls: 0.0558  loss_box_reg: 0.1673  loss_rpn_cls: 0.002338  loss_rpn_loc: 0.0217  time: 0.8871  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:33:13] d2.utils.events INFO:  eta: 5:28:18  iter: 9139  total_loss: 0.2927  loss_cls: 0.06836  loss_box_reg: 0.1986  loss_rpn_cls: 0.003384  loss_rpn_loc: 0.02019  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:33:30] d2.utils.events INFO:  eta: 5:27:41  iter: 9159  total_loss: 0.3253  loss_cls: 0.0771  loss_box_reg: 0.211  loss_rpn_cls: 0.002469  loss_rpn_loc: 0.02108  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:33:48] d2.utils.events INFO:  eta: 5:27:23  iter: 9179  total_loss: 0.3235  loss_cls: 0.08728  loss_box_reg: 0.1991  loss_rpn_cls: 0.00269  loss_rpn_loc: 0.0259  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:34:06] d2.utils.events INFO:  eta: 5:27:09  iter: 9199  total_loss: 0.234  loss_cls: 0.05218  loss_box_reg: 0.165  loss_rpn_cls: 0.0008956  loss_rpn_loc: 0.01604  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:34:23] d2.utils.events INFO:  eta: 5:26:19  iter: 9219  total_loss: 0.304  loss_cls: 0.07988  loss_box_reg: 0.1866  loss_rpn_cls: 0.004795  loss_rpn_loc: 0.0207  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:34:41] d2.utils.events INFO:  eta: 5:26:13  iter: 9239  total_loss: 0.314  loss_cls: 0.07896  loss_box_reg: 0.2077  loss_rpn_cls: 0.002071  loss_rpn_loc: 0.02195  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:34:58] d2.utils.events INFO:  eta: 5:25:55  iter: 9259  total_loss: 0.2923  loss_cls: 0.06524  loss_box_reg: 0.1979  loss_rpn_cls: 0.001505  loss_rpn_loc: 0.02416  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:35:16] d2.utils.events INFO:  eta: 5:25:26  iter: 9279  total_loss: 0.2983  loss_cls: 0.07266  loss_box_reg: 0.2045  loss_rpn_cls: 0.001527  loss_rpn_loc: 0.02598  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:35:35] d2.utils.events INFO:  eta: 5:25:20  iter: 9299  total_loss: 0.2709  loss_cls: 0.06921  loss_box_reg: 0.1887  loss_rpn_cls: 0.001966  loss_rpn_loc: 0.02127  time: 0.8870  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:35:52] d2.utils.events INFO:  eta: 5:24:50  iter: 9319  total_loss: 0.3175  loss_cls: 0.07778  loss_box_reg: 0.2021  loss_rpn_cls: 0.002342  loss_rpn_loc: 0.02566  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:36:09] d2.utils.events INFO:  eta: 5:23:52  iter: 9339  total_loss: 0.2574  loss_cls: 0.06303  loss_box_reg: 0.1823  loss_rpn_cls: 0.003268  loss_rpn_loc: 0.01514  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:36:27] d2.utils.events INFO:  eta: 5:23:45  iter: 9359  total_loss: 0.3262  loss_cls: 0.07459  loss_box_reg: 0.2139  loss_rpn_cls: 0.002521  loss_rpn_loc: 0.02036  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:36:44] d2.utils.events INFO:  eta: 5:23:15  iter: 9379  total_loss: 0.2767  loss_cls: 0.06568  loss_box_reg: 0.1894  loss_rpn_cls: 0.001878  loss_rpn_loc: 0.0191  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:37:02] d2.utils.events INFO:  eta: 5:22:51  iter: 9399  total_loss: 0.2928  loss_cls: 0.0669  loss_box_reg: 0.2078  loss_rpn_cls: 0.002284  loss_rpn_loc: 0.02289  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:37:20] d2.utils.events INFO:  eta: 5:22:18  iter: 9419  total_loss: 0.2995  loss_cls: 0.07762  loss_box_reg: 0.2031  loss_rpn_cls: 0.002068  loss_rpn_loc: 0.02221  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:37:37] d2.utils.events INFO:  eta: 5:21:34  iter: 9439  total_loss: 0.236  loss_cls: 0.06084  loss_box_reg: 0.1624  loss_rpn_cls: 0.002008  loss_rpn_loc: 0.0145  time: 0.8867  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 07:37:55] d2.utils.events INFO:  eta: 5:21:42  iter: 9459  total_loss: 0.2772  loss_cls: 0.06442  loss_box_reg: 0.1826  loss_rpn_cls: 0.001767  loss_rpn_loc: 0.02113  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:38:13] d2.utils.events INFO:  eta: 5:21:35  iter: 9479  total_loss: 0.2893  loss_cls: 0.06354  loss_box_reg: 0.1924  loss_rpn_cls: 0.001501  loss_rpn_loc: 0.02387  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:38:31] d2.utils.events INFO:  eta: 5:21:12  iter: 9499  total_loss: 0.3476  loss_cls: 0.08261  loss_box_reg: 0.2268  loss_rpn_cls: 0.002426  loss_rpn_loc: 0.02788  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:38:49] d2.utils.events INFO:  eta: 5:20:59  iter: 9519  total_loss: 0.3312  loss_cls: 0.09059  loss_box_reg: 0.2011  loss_rpn_cls: 0.003067  loss_rpn_loc: 0.0233  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:39:07] d2.utils.events INFO:  eta: 5:20:43  iter: 9539  total_loss: 0.2472  loss_cls: 0.05974  loss_box_reg: 0.162  loss_rpn_cls: 0.001694  loss_rpn_loc: 0.01614  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:39:25] d2.utils.events INFO:  eta: 5:20:33  iter: 9559  total_loss: 0.3361  loss_cls: 0.08359  loss_box_reg: 0.2222  loss_rpn_cls: 0.003655  loss_rpn_loc: 0.02426  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:39:43] d2.utils.events INFO:  eta: 5:20:15  iter: 9579  total_loss: 0.2567  loss_cls: 0.05589  loss_box_reg: 0.1818  loss_rpn_cls: 0.001972  loss_rpn_loc: 0.01573  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:40:00] d2.utils.events INFO:  eta: 5:19:47  iter: 9599  total_loss: 0.2479  loss_cls: 0.06327  loss_box_reg: 0.1821  loss_rpn_cls: 0.001728  loss_rpn_loc: 0.01907  time: 0.8868  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:40:18] d2.utils.events INFO:  eta: 5:18:41  iter: 9619  total_loss: 0.2338  loss_cls: 0.05905  loss_box_reg: 0.1539  loss_rpn_cls: 0.001998  loss_rpn_loc: 0.01965  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:40:36] d2.utils.events INFO:  eta: 5:18:23  iter: 9639  total_loss: 0.3007  loss_cls: 0.07071  loss_box_reg: 0.1969  loss_rpn_cls: 0.003752  loss_rpn_loc: 0.02309  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:40:54] d2.utils.events INFO:  eta: 5:18:53  iter: 9659  total_loss: 0.2597  loss_cls: 0.06084  loss_box_reg: 0.1648  loss_rpn_cls: 0.001724  loss_rpn_loc: 0.01637  time: 0.8869  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:41:12] d2.utils.events INFO:  eta: 5:18:37  iter: 9679  total_loss: 0.2767  loss_cls: 0.06802  loss_box_reg: 0.1868  loss_rpn_cls: 0.001852  loss_rpn_loc: 0.01552  time: 0.8869  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:41:30] d2.utils.events INFO:  eta: 5:18:18  iter: 9699  total_loss: 0.2934  loss_cls: 0.06656  loss_box_reg: 0.1928  loss_rpn_cls: 0.001758  loss_rpn_loc: 0.01941  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:41:47] d2.utils.events INFO:  eta: 5:16:59  iter: 9719  total_loss: 0.2847  loss_cls: 0.07263  loss_box_reg: 0.1799  loss_rpn_cls: 0.002151  loss_rpn_loc: 0.02517  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:42:05] d2.utils.events INFO:  eta: 5:16:33  iter: 9739  total_loss: 0.306  loss_cls: 0.06512  loss_box_reg: 0.196  loss_rpn_cls: 0.0046  loss_rpn_loc: 0.02113  time: 0.8869  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:42:23] d2.utils.events INFO:  eta: 5:16:28  iter: 9759  total_loss: 0.2617  loss_cls: 0.05276  loss_box_reg: 0.1753  loss_rpn_cls: 0.00209  loss_rpn_loc: 0.01812  time: 0.8869  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:42:40] d2.utils.events INFO:  eta: 5:15:57  iter: 9779  total_loss: 0.2875  loss_cls: 0.06658  loss_box_reg: 0.1973  loss_rpn_cls: 0.002604  loss_rpn_loc: 0.023  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:42:58] d2.utils.events INFO:  eta: 5:15:45  iter: 9799  total_loss: 0.3053  loss_cls: 0.06796  loss_box_reg: 0.1864  loss_rpn_cls: 0.003454  loss_rpn_loc: 0.02255  time: 0.8868  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:43:15] d2.utils.events INFO:  eta: 5:15:27  iter: 9819  total_loss: 0.2732  loss_cls: 0.07206  loss_box_reg: 0.1772  loss_rpn_cls: 0.002897  loss_rpn_loc: 0.02225  time: 0.8868  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:43:33] d2.utils.events INFO:  eta: 5:14:57  iter: 9839  total_loss: 0.3176  loss_cls: 0.06659  loss_box_reg: 0.2084  loss_rpn_cls: 0.001921  loss_rpn_loc: 0.02205  time: 0.8867  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:43:50] d2.utils.events INFO:  eta: 5:14:22  iter: 9859  total_loss: 0.2991  loss_cls: 0.07037  loss_box_reg: 0.1922  loss_rpn_cls: 0.002387  loss_rpn_loc: 0.02565  time: 0.8867  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:44:06] d2.utils.events INFO:  eta: 5:13:22  iter: 9879  total_loss: 0.3281  loss_cls: 0.0806  loss_box_reg: 0.2124  loss_rpn_cls: 0.002348  loss_rpn_loc: 0.02469  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:44:25] d2.utils.events INFO:  eta: 5:13:20  iter: 9899  total_loss: 0.3114  loss_cls: 0.06962  loss_box_reg: 0.2034  loss_rpn_cls: 0.003256  loss_rpn_loc: 0.02199  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:44:42] d2.utils.events INFO:  eta: 5:12:40  iter: 9919  total_loss: 0.2888  loss_cls: 0.06067  loss_box_reg: 0.1923  loss_rpn_cls: 0.002057  loss_rpn_loc: 0.02615  time: 0.8866  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:45:00] d2.utils.events INFO:  eta: 5:12:10  iter: 9939  total_loss: 0.3566  loss_cls: 0.08191  loss_box_reg: 0.2189  loss_rpn_cls: 0.002496  loss_rpn_loc: 0.02877  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:45:18] d2.utils.events INFO:  eta: 5:11:57  iter: 9959  total_loss: 0.2332  loss_cls: 0.0647  loss_box_reg: 0.1537  loss_rpn_cls: 0.00197  loss_rpn_loc: 0.02123  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:45:36] d2.utils.events INFO:  eta: 5:11:35  iter: 9979  total_loss: 0.2398  loss_cls: 0.05742  loss_box_reg: 0.163  loss_rpn_cls: 0.002249  loss_rpn_loc: 0.0164  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:45:54] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 07:45:54] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 07:45:54] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 07:45:54] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 07:45:54] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 07:45:55] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:01:04
[04/03 07:46:00] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:59
[04/03 07:46:05] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:54
[04/03 07:46:11] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:49
[04/03 07:46:16] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:44
[04/03 07:46:21] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:39
[04/03 07:46:26] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 07:46:31] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 07:46:36] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 07:46:41] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 07:46:46] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:14
[04/03 07:46:51] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:08
[04/03 07:46:56] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:03
[04/03 07:47:00] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.248010 (0.120162 s / iter per device, on 1 devices)
[04/03 07:47:00] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118857 s / iter per device, on 1 devices)
[04/03 07:47:00] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 07:47:00] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 07:47:00] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 07:47:00] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 07:47:01] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 07:47:01] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 07:47:01] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.367 | 11.856 | 5.974  | 2.301 | 13.093 | 12.978 |
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 07:47:01] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.166  | people          | 3.835  | bicycle    | 2.719 |
| car        | 34.913 | van             | 14.243 | truck      | 0.000 |
| tricycle   | 2.261  | awning-tricycle | 0.660  | bus        | 0.000 |
| motor      | 5.241  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 07:47:01] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 07:47:01] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 07:47:01] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 07:47:01] d2.evaluation.testing INFO: copypaste: 6.3671,11.8562,5.9744,2.3006,13.0928,12.9775,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 07:47:01] d2.utils.events INFO:  eta: 5:10:58  iter: 9999  total_loss: 0.2157  loss_cls: 0.04867  loss_box_reg: 0.1481  loss_rpn_cls: 0.001621  loss_rpn_loc: 0.01824  time: 0.8866  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:47:18] d2.utils.events INFO:  eta: 5:10:27  iter: 10019  total_loss: 0.2452  loss_cls: 0.06418  loss_box_reg: 0.1669  loss_rpn_cls: 0.001962  loss_rpn_loc: 0.01866  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:47:36] d2.utils.events INFO:  eta: 5:10:03  iter: 10039  total_loss: 0.2404  loss_cls: 0.05313  loss_box_reg: 0.1671  loss_rpn_cls: 0.001752  loss_rpn_loc: 0.0181  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:47:54] d2.utils.events INFO:  eta: 5:09:31  iter: 10059  total_loss: 0.2686  loss_cls: 0.07461  loss_box_reg: 0.1783  loss_rpn_cls: 0.002216  loss_rpn_loc: 0.02123  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:48:12] d2.utils.events INFO:  eta: 5:09:21  iter: 10079  total_loss: 0.3249  loss_cls: 0.07489  loss_box_reg: 0.2099  loss_rpn_cls: 0.003871  loss_rpn_loc: 0.02097  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:48:29] d2.utils.events INFO:  eta: 5:08:55  iter: 10099  total_loss: 0.2543  loss_cls: 0.06701  loss_box_reg: 0.1637  loss_rpn_cls: 0.00173  loss_rpn_loc: 0.01591  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:48:46] d2.utils.events INFO:  eta: 5:07:49  iter: 10119  total_loss: 0.3178  loss_cls: 0.07952  loss_box_reg: 0.2161  loss_rpn_cls: 0.00499  loss_rpn_loc: 0.02306  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:49:03] d2.utils.events INFO:  eta: 5:07:28  iter: 10139  total_loss: 0.2457  loss_cls: 0.05488  loss_box_reg: 0.173  loss_rpn_cls: 0.001745  loss_rpn_loc: 0.01429  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:49:21] d2.utils.events INFO:  eta: 5:07:29  iter: 10159  total_loss: 0.2842  loss_cls: 0.06583  loss_box_reg: 0.1958  loss_rpn_cls: 0.001489  loss_rpn_loc: 0.01692  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:49:39] d2.utils.events INFO:  eta: 5:06:56  iter: 10179  total_loss: 0.2803  loss_cls: 0.07555  loss_box_reg: 0.1786  loss_rpn_cls: 0.00226  loss_rpn_loc: 0.02306  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:49:56] d2.utils.events INFO:  eta: 5:06:26  iter: 10199  total_loss: 0.2642  loss_cls: 0.05947  loss_box_reg: 0.1735  loss_rpn_cls: 0.001993  loss_rpn_loc: 0.02044  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:50:14] d2.utils.events INFO:  eta: 5:06:14  iter: 10219  total_loss: 0.2754  loss_cls: 0.0584  loss_box_reg: 0.1805  loss_rpn_cls: 0.001555  loss_rpn_loc: 0.01601  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:50:32] d2.utils.events INFO:  eta: 5:05:55  iter: 10239  total_loss: 0.2712  loss_cls: 0.07139  loss_box_reg: 0.1814  loss_rpn_cls: 0.002214  loss_rpn_loc: 0.01953  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:50:50] d2.utils.events INFO:  eta: 5:05:37  iter: 10259  total_loss: 0.3628  loss_cls: 0.08886  loss_box_reg: 0.2386  loss_rpn_cls: 0.003014  loss_rpn_loc: 0.02433  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:51:07] d2.utils.events INFO:  eta: 5:05:01  iter: 10279  total_loss: 0.264  loss_cls: 0.06024  loss_box_reg: 0.1814  loss_rpn_cls: 0.001937  loss_rpn_loc: 0.02368  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:51:25] d2.utils.events INFO:  eta: 5:04:29  iter: 10299  total_loss: 0.2656  loss_cls: 0.06162  loss_box_reg: 0.1856  loss_rpn_cls: 0.00255  loss_rpn_loc: 0.02252  time: 0.8863  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 07:51:43] d2.utils.events INFO:  eta: 5:04:36  iter: 10319  total_loss: 0.2117  loss_cls: 0.04266  loss_box_reg: 0.147  loss_rpn_cls: 0.001675  loss_rpn_loc: 0.01457  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:52:01] d2.utils.events INFO:  eta: 5:04:28  iter: 10339  total_loss: 0.2376  loss_cls: 0.05715  loss_box_reg: 0.1677  loss_rpn_cls: 0.002244  loss_rpn_loc: 0.0168  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:52:18] d2.utils.events INFO:  eta: 5:04:00  iter: 10359  total_loss: 0.2691  loss_cls: 0.06572  loss_box_reg: 0.1731  loss_rpn_cls: 0.001697  loss_rpn_loc: 0.01978  time: 0.8863  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 07:52:36] d2.utils.events INFO:  eta: 5:03:41  iter: 10379  total_loss: 0.317  loss_cls: 0.08889  loss_box_reg: 0.2103  loss_rpn_cls: 0.002578  loss_rpn_loc: 0.02314  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:52:54] d2.utils.events INFO:  eta: 5:03:20  iter: 10399  total_loss: 0.2865  loss_cls: 0.07991  loss_box_reg: 0.1899  loss_rpn_cls: 0.003281  loss_rpn_loc: 0.02104  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:53:13] d2.utils.events INFO:  eta: 5:03:26  iter: 10419  total_loss: 0.2921  loss_cls: 0.07118  loss_box_reg: 0.1892  loss_rpn_cls: 0.002188  loss_rpn_loc: 0.01938  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:53:30] d2.utils.events INFO:  eta: 5:03:08  iter: 10439  total_loss: 0.2908  loss_cls: 0.06814  loss_box_reg: 0.1802  loss_rpn_cls: 0.003535  loss_rpn_loc: 0.02316  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:53:49] d2.utils.events INFO:  eta: 5:02:50  iter: 10459  total_loss: 0.251  loss_cls: 0.05945  loss_box_reg: 0.1761  loss_rpn_cls: 0.002572  loss_rpn_loc: 0.01787  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:54:06] d2.utils.events INFO:  eta: 5:02:29  iter: 10479  total_loss: 0.2848  loss_cls: 0.07142  loss_box_reg: 0.1822  loss_rpn_cls: 0.002566  loss_rpn_loc: 0.02601  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:54:23] d2.utils.events INFO:  eta: 5:01:57  iter: 10499  total_loss: 0.2832  loss_cls: 0.06284  loss_box_reg: 0.1974  loss_rpn_cls: 0.003059  loss_rpn_loc: 0.01843  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:54:42] d2.utils.events INFO:  eta: 5:01:49  iter: 10519  total_loss: 0.2807  loss_cls: 0.0829  loss_box_reg: 0.1823  loss_rpn_cls: 0.002149  loss_rpn_loc: 0.02185  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:55:00] d2.utils.events INFO:  eta: 5:01:39  iter: 10539  total_loss: 0.319  loss_cls: 0.07233  loss_box_reg: 0.1959  loss_rpn_cls: 0.002028  loss_rpn_loc: 0.02897  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:55:18] d2.utils.events INFO:  eta: 5:01:21  iter: 10559  total_loss: 0.2606  loss_cls: 0.06786  loss_box_reg: 0.1729  loss_rpn_cls: 0.003644  loss_rpn_loc: 0.01956  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:55:35] d2.utils.events INFO:  eta: 5:01:03  iter: 10579  total_loss: 0.2554  loss_cls: 0.05809  loss_box_reg: 0.1823  loss_rpn_cls: 0.001718  loss_rpn_loc: 0.02355  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:55:53] d2.utils.events INFO:  eta: 5:01:21  iter: 10599  total_loss: 0.2805  loss_cls: 0.0523  loss_box_reg: 0.1908  loss_rpn_cls: 0.002831  loss_rpn_loc: 0.02301  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:56:11] d2.utils.events INFO:  eta: 5:01:30  iter: 10619  total_loss: 0.2785  loss_cls: 0.06364  loss_box_reg: 0.1771  loss_rpn_cls: 0.003126  loss_rpn_loc: 0.02087  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:56:27] d2.utils.events INFO:  eta: 5:01:04  iter: 10639  total_loss: 0.3083  loss_cls: 0.07701  loss_box_reg: 0.2044  loss_rpn_cls: 0.003709  loss_rpn_loc: 0.02045  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:56:46] d2.utils.events INFO:  eta: 5:00:37  iter: 10659  total_loss: 0.3046  loss_cls: 0.0733  loss_box_reg: 0.2005  loss_rpn_cls: 0.002293  loss_rpn_loc: 0.02248  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:57:04] d2.utils.events INFO:  eta: 5:00:02  iter: 10679  total_loss: 0.2968  loss_cls: 0.0743  loss_box_reg: 0.1885  loss_rpn_cls: 0.003158  loss_rpn_loc: 0.02416  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:57:22] d2.utils.events INFO:  eta: 5:00:19  iter: 10699  total_loss: 0.264  loss_cls: 0.06252  loss_box_reg: 0.1761  loss_rpn_cls: 0.003343  loss_rpn_loc: 0.01906  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:57:39] d2.utils.events INFO:  eta: 5:00:01  iter: 10719  total_loss: 0.2595  loss_cls: 0.0558  loss_box_reg: 0.1717  loss_rpn_cls: 0.001057  loss_rpn_loc: 0.0196  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:57:58] d2.utils.events INFO:  eta: 4:59:50  iter: 10739  total_loss: 0.2298  loss_cls: 0.06263  loss_box_reg: 0.1561  loss_rpn_cls: 0.001578  loss_rpn_loc: 0.01694  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:58:16] d2.utils.events INFO:  eta: 4:59:25  iter: 10759  total_loss: 0.1985  loss_cls: 0.04205  loss_box_reg: 0.1414  loss_rpn_cls: 0.001115  loss_rpn_loc: 0.01624  time: 0.8865  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:58:34] d2.utils.events INFO:  eta: 4:59:10  iter: 10779  total_loss: 0.2779  loss_cls: 0.06304  loss_box_reg: 0.1831  loss_rpn_cls: 0.001599  loss_rpn_loc: 0.0212  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 07:58:52] d2.utils.events INFO:  eta: 4:59:03  iter: 10799  total_loss: 0.2619  loss_cls: 0.04964  loss_box_reg: 0.176  loss_rpn_cls: 0.0007949  loss_rpn_loc: 0.01972  time: 0.8866  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:59:10] d2.utils.events INFO:  eta: 4:59:00  iter: 10819  total_loss: 0.2876  loss_cls: 0.05052  loss_box_reg: 0.2072  loss_rpn_cls: 0.001727  loss_rpn_loc: 0.02355  time: 0.8866  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 07:59:27] d2.utils.events INFO:  eta: 4:58:23  iter: 10839  total_loss: 0.3041  loss_cls: 0.07558  loss_box_reg: 0.1839  loss_rpn_cls: 0.003359  loss_rpn_loc: 0.02043  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 07:59:45] d2.utils.events INFO:  eta: 4:58:03  iter: 10859  total_loss: 0.2523  loss_cls: 0.0534  loss_box_reg: 0.1732  loss_rpn_cls: 0.001897  loss_rpn_loc: 0.01863  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:00:02] d2.utils.events INFO:  eta: 4:57:47  iter: 10879  total_loss: 0.2459  loss_cls: 0.06237  loss_box_reg: 0.1653  loss_rpn_cls: 0.001927  loss_rpn_loc: 0.01958  time: 0.8865  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:00:20] d2.utils.events INFO:  eta: 4:57:40  iter: 10899  total_loss: 0.2582  loss_cls: 0.06365  loss_box_reg: 0.1651  loss_rpn_cls: 0.003014  loss_rpn_loc: 0.02207  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:00:37] d2.utils.events INFO:  eta: 4:57:17  iter: 10919  total_loss: 0.2399  loss_cls: 0.05447  loss_box_reg: 0.1597  loss_rpn_cls: 0.001617  loss_rpn_loc: 0.01707  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:00:55] d2.utils.events INFO:  eta: 4:57:39  iter: 10939  total_loss: 0.2391  loss_cls: 0.05051  loss_box_reg: 0.1531  loss_rpn_cls: 0.002226  loss_rpn_loc: 0.0204  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:01:13] d2.utils.events INFO:  eta: 4:57:41  iter: 10959  total_loss: 0.2827  loss_cls: 0.06245  loss_box_reg: 0.2  loss_rpn_cls: 0.001602  loss_rpn_loc: 0.02308  time: 0.8865  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:01:30] d2.utils.events INFO:  eta: 4:57:19  iter: 10979  total_loss: 0.2638  loss_cls: 0.06413  loss_box_reg: 0.1764  loss_rpn_cls: 0.002141  loss_rpn_loc: 0.02066  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:01:47] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 08:01:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 08:01:48] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 08:01:48] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 08:01:48] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 08:01:49] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1189 s/iter. ETA=0:01:03
[04/03 08:01:54] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0003 s/iter. Total: 0.1200 s/iter. ETA=0:00:59
[04/03 08:01:59] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:54
[04/03 08:02:04] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:49
[04/03 08:02:10] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:44
[04/03 08:02:15] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:39
[04/03 08:02:20] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:34
[04/03 08:02:25] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:29
[04/03 08:02:30] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:24
[04/03 08:02:35] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:19
[04/03 08:02:40] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 08:02:45] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:09
[04/03 08:02:50] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:03
[04/03 08:02:54] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.298498 (0.120255 s / iter per device, on 1 devices)
[04/03 08:02:54] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118883 s / iter per device, on 1 devices)
[04/03 08:02:54] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 08:02:54] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 08:02:54] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 08:02:54] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 08:02:55] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 08:02:55] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 08:02:55] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.005 | 10.922 | 5.873  | 1.978 | 12.174 | 13.529 |
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 08:02:55] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.157  | people          | 2.289  | bicycle    | 2.190 |
| car        | 34.362 | van             | 13.347 | truck      | 0.000 |
| tricycle   | 3.128  | awning-tricycle | 0.696  | bus        | 0.000 |
| motor      | 4.835  | others          | 0.045  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 08:02:55] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 08:02:55] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 08:02:55] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 08:02:55] d2.evaluation.testing INFO: copypaste: 6.0045,10.9225,5.8731,1.9776,12.1736,13.5286,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 08:02:55] d2.utils.events INFO:  eta: 4:56:16  iter: 10999  total_loss: 0.2349  loss_cls: 0.04679  loss_box_reg: 0.1675  loss_rpn_cls: 0.001368  loss_rpn_loc: 0.01907  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:03:12] d2.utils.events INFO:  eta: 4:56:43  iter: 11019  total_loss: 0.3253  loss_cls: 0.08584  loss_box_reg: 0.2086  loss_rpn_cls: 0.003985  loss_rpn_loc: 0.02624  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:03:30] d2.utils.events INFO:  eta: 4:56:44  iter: 11039  total_loss: 0.2053  loss_cls: 0.04391  loss_box_reg: 0.1421  loss_rpn_cls: 0.0009537  loss_rpn_loc: 0.01261  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:03:48] d2.utils.events INFO:  eta: 4:56:11  iter: 11059  total_loss: 0.2976  loss_cls: 0.08066  loss_box_reg: 0.1894  loss_rpn_cls: 0.003456  loss_rpn_loc: 0.02423  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:04:06] d2.utils.events INFO:  eta: 4:55:49  iter: 11079  total_loss: 0.291  loss_cls: 0.08345  loss_box_reg: 0.1806  loss_rpn_cls: 0.002311  loss_rpn_loc: 0.02467  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:04:23] d2.utils.events INFO:  eta: 4:55:36  iter: 11099  total_loss: 0.2335  loss_cls: 0.04943  loss_box_reg: 0.164  loss_rpn_cls: 0.001157  loss_rpn_loc: 0.01484  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:04:42] d2.utils.events INFO:  eta: 4:56:05  iter: 11119  total_loss: 0.2485  loss_cls: 0.05784  loss_box_reg: 0.1744  loss_rpn_cls: 0.001601  loss_rpn_loc: 0.01513  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:04:59] d2.utils.events INFO:  eta: 4:55:37  iter: 11139  total_loss: 0.2689  loss_cls: 0.05789  loss_box_reg: 0.1882  loss_rpn_cls: 0.003928  loss_rpn_loc: 0.02158  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:05:16] d2.utils.events INFO:  eta: 4:55:09  iter: 11159  total_loss: 0.2698  loss_cls: 0.06499  loss_box_reg: 0.1713  loss_rpn_cls: 0.002651  loss_rpn_loc: 0.02463  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:05:34] d2.utils.events INFO:  eta: 4:55:17  iter: 11179  total_loss: 0.2034  loss_cls: 0.04043  loss_box_reg: 0.1458  loss_rpn_cls: 0.002544  loss_rpn_loc: 0.01925  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:05:52] d2.utils.events INFO:  eta: 4:55:15  iter: 11199  total_loss: 0.2512  loss_cls: 0.05361  loss_box_reg: 0.1658  loss_rpn_cls: 0.001389  loss_rpn_loc: 0.019  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:06:10] d2.utils.events INFO:  eta: 4:54:43  iter: 11219  total_loss: 0.2084  loss_cls: 0.04473  loss_box_reg: 0.1542  loss_rpn_cls: 0.001426  loss_rpn_loc: 0.01515  time: 0.8863  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:06:28] d2.utils.events INFO:  eta: 4:54:26  iter: 11239  total_loss: 0.2814  loss_cls: 0.07058  loss_box_reg: 0.1893  loss_rpn_cls: 0.003263  loss_rpn_loc: 0.01885  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:06:46] d2.utils.events INFO:  eta: 4:54:13  iter: 11259  total_loss: 0.3511  loss_cls: 0.08438  loss_box_reg: 0.2161  loss_rpn_cls: 0.002599  loss_rpn_loc: 0.02889  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:07:04] d2.utils.events INFO:  eta: 4:54:10  iter: 11279  total_loss: 0.2497  loss_cls: 0.04947  loss_box_reg: 0.1719  loss_rpn_cls: 0.00253  loss_rpn_loc: 0.0208  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:07:22] d2.utils.events INFO:  eta: 4:54:08  iter: 11299  total_loss: 0.2536  loss_cls: 0.05777  loss_box_reg: 0.1604  loss_rpn_cls: 0.001896  loss_rpn_loc: 0.0208  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:07:40] d2.utils.events INFO:  eta: 4:53:40  iter: 11319  total_loss: 0.2305  loss_cls: 0.04854  loss_box_reg: 0.156  loss_rpn_cls: 0.001502  loss_rpn_loc: 0.01673  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:07:58] d2.utils.events INFO:  eta: 4:53:28  iter: 11339  total_loss: 0.3082  loss_cls: 0.06639  loss_box_reg: 0.203  loss_rpn_cls: 0.00165  loss_rpn_loc: 0.02202  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:08:16] d2.utils.events INFO:  eta: 4:53:14  iter: 11359  total_loss: 0.263  loss_cls: 0.05649  loss_box_reg: 0.1703  loss_rpn_cls: 0.002671  loss_rpn_loc: 0.02262  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:08:33] d2.utils.events INFO:  eta: 4:52:52  iter: 11379  total_loss: 0.2177  loss_cls: 0.05404  loss_box_reg: 0.1496  loss_rpn_cls: 0.001499  loss_rpn_loc: 0.01943  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:08:51] d2.utils.events INFO:  eta: 4:52:38  iter: 11399  total_loss: 0.3122  loss_cls: 0.06248  loss_box_reg: 0.197  loss_rpn_cls: 0.002941  loss_rpn_loc: 0.02651  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:09:08] d2.utils.events INFO:  eta: 4:51:44  iter: 11419  total_loss: 0.2413  loss_cls: 0.05684  loss_box_reg: 0.1696  loss_rpn_cls: 0.003855  loss_rpn_loc: 0.01522  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:09:26] d2.utils.events INFO:  eta: 4:51:26  iter: 11439  total_loss: 0.2219  loss_cls: 0.05075  loss_box_reg: 0.1519  loss_rpn_cls: 0.002646  loss_rpn_loc: 0.01623  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:09:44] d2.utils.events INFO:  eta: 4:51:08  iter: 11459  total_loss: 0.1904  loss_cls: 0.04384  loss_box_reg: 0.1353  loss_rpn_cls: 0.001449  loss_rpn_loc: 0.01299  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:10:02] d2.utils.events INFO:  eta: 4:50:53  iter: 11479  total_loss: 0.293  loss_cls: 0.07141  loss_box_reg: 0.1958  loss_rpn_cls: 0.002143  loss_rpn_loc: 0.02371  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:10:19] d2.utils.events INFO:  eta: 4:50:34  iter: 11499  total_loss: 0.3491  loss_cls: 0.08502  loss_box_reg: 0.2264  loss_rpn_cls: 0.003676  loss_rpn_loc: 0.03187  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:10:37] d2.utils.events INFO:  eta: 4:50:06  iter: 11519  total_loss: 0.2767  loss_cls: 0.06375  loss_box_reg: 0.1766  loss_rpn_cls: 0.001496  loss_rpn_loc: 0.02162  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:10:54] d2.utils.events INFO:  eta: 4:49:44  iter: 11539  total_loss: 0.2684  loss_cls: 0.06017  loss_box_reg: 0.1718  loss_rpn_cls: 0.001657  loss_rpn_loc: 0.02505  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:11:12] d2.utils.events INFO:  eta: 4:49:18  iter: 11559  total_loss: 0.253  loss_cls: 0.05263  loss_box_reg: 0.1841  loss_rpn_cls: 0.001352  loss_rpn_loc: 0.01612  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:11:31] d2.utils.events INFO:  eta: 4:49:04  iter: 11579  total_loss: 0.229  loss_cls: 0.04429  loss_box_reg: 0.163  loss_rpn_cls: 0.001104  loss_rpn_loc: 0.01521  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:11:48] d2.utils.events INFO:  eta: 4:48:20  iter: 11599  total_loss: 0.2679  loss_cls: 0.06446  loss_box_reg: 0.1622  loss_rpn_cls: 0.002213  loss_rpn_loc: 0.02044  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:12:06] d2.utils.events INFO:  eta: 4:47:57  iter: 11619  total_loss: 0.2314  loss_cls: 0.05009  loss_box_reg: 0.1632  loss_rpn_cls: 0.001288  loss_rpn_loc: 0.01685  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:12:24] d2.utils.events INFO:  eta: 4:48:07  iter: 11639  total_loss: 0.2613  loss_cls: 0.06818  loss_box_reg: 0.1673  loss_rpn_cls: 0.003486  loss_rpn_loc: 0.02005  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:12:42] d2.utils.events INFO:  eta: 4:47:34  iter: 11659  total_loss: 0.2526  loss_cls: 0.06634  loss_box_reg: 0.1644  loss_rpn_cls: 0.002944  loss_rpn_loc: 0.02279  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:13:00] d2.utils.events INFO:  eta: 4:47:31  iter: 11679  total_loss: 0.2636  loss_cls: 0.05616  loss_box_reg: 0.1539  loss_rpn_cls: 0.001946  loss_rpn_loc: 0.01945  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:13:17] d2.utils.events INFO:  eta: 4:46:51  iter: 11699  total_loss: 0.2262  loss_cls: 0.04755  loss_box_reg: 0.1573  loss_rpn_cls: 0.001834  loss_rpn_loc: 0.01758  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:13:35] d2.utils.events INFO:  eta: 4:46:55  iter: 11719  total_loss: 0.2954  loss_cls: 0.06672  loss_box_reg: 0.1948  loss_rpn_cls: 0.001439  loss_rpn_loc: 0.02465  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:13:53] d2.utils.events INFO:  eta: 4:46:30  iter: 11739  total_loss: 0.2105  loss_cls: 0.04988  loss_box_reg: 0.1518  loss_rpn_cls: 0.001102  loss_rpn_loc: 0.0129  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:14:11] d2.utils.events INFO:  eta: 4:46:17  iter: 11759  total_loss: 0.2509  loss_cls: 0.0571  loss_box_reg: 0.1841  loss_rpn_cls: 0.002188  loss_rpn_loc: 0.0182  time: 0.8865  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:14:29] d2.utils.events INFO:  eta: 4:45:40  iter: 11779  total_loss: 0.286  loss_cls: 0.06986  loss_box_reg: 0.1931  loss_rpn_cls: 0.0008737  loss_rpn_loc: 0.02337  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:14:46] d2.utils.events INFO:  eta: 4:45:11  iter: 11799  total_loss: 0.3266  loss_cls: 0.07586  loss_box_reg: 0.1989  loss_rpn_cls: 0.001702  loss_rpn_loc: 0.02026  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:15:04] d2.utils.events INFO:  eta: 4:44:51  iter: 11819  total_loss: 0.2616  loss_cls: 0.05475  loss_box_reg: 0.1757  loss_rpn_cls: 0.003148  loss_rpn_loc: 0.01934  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:15:21] d2.utils.events INFO:  eta: 4:44:53  iter: 11839  total_loss: 0.2228  loss_cls: 0.05012  loss_box_reg: 0.1444  loss_rpn_cls: 0.001345  loss_rpn_loc: 0.01572  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:15:39] d2.utils.events INFO:  eta: 4:44:54  iter: 11859  total_loss: 0.2442  loss_cls: 0.0566  loss_box_reg: 0.1652  loss_rpn_cls: 0.003582  loss_rpn_loc: 0.01795  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:15:57] d2.utils.events INFO:  eta: 4:44:57  iter: 11879  total_loss: 0.3205  loss_cls: 0.08403  loss_box_reg: 0.2112  loss_rpn_cls: 0.002364  loss_rpn_loc: 0.02204  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:16:14] d2.utils.events INFO:  eta: 4:44:18  iter: 11899  total_loss: 0.2903  loss_cls: 0.06635  loss_box_reg: 0.2064  loss_rpn_cls: 0.00181  loss_rpn_loc: 0.02277  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:16:32] d2.utils.events INFO:  eta: 4:43:56  iter: 11919  total_loss: 0.3189  loss_cls: 0.08282  loss_box_reg: 0.2098  loss_rpn_cls: 0.001871  loss_rpn_loc: 0.02738  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:16:49] d2.utils.events INFO:  eta: 4:43:32  iter: 11939  total_loss: 0.2761  loss_cls: 0.07143  loss_box_reg: 0.1694  loss_rpn_cls: 0.002146  loss_rpn_loc: 0.02035  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:17:07] d2.utils.events INFO:  eta: 4:43:02  iter: 11959  total_loss: 0.3007  loss_cls: 0.07799  loss_box_reg: 0.1927  loss_rpn_cls: 0.002841  loss_rpn_loc: 0.02432  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:17:24] d2.utils.events INFO:  eta: 4:43:02  iter: 11979  total_loss: 0.2766  loss_cls: 0.05404  loss_box_reg: 0.1654  loss_rpn_cls: 0.0007662  loss_rpn_loc: 0.01819  time: 0.8863  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:17:42] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 08:17:42] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 08:17:42] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 08:17:42] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 08:17:42] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 08:17:44] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 08:17:49] d2.evaluation.evaluator INFO: Inference done 52/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0036 s/iter. Total: 0.1231 s/iter. ETA=0:01:01
[04/03 08:17:54] d2.evaluation.evaluator INFO: Inference done 94/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0020 s/iter. Total: 0.1217 s/iter. ETA=0:00:55
[04/03 08:17:59] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0014 s/iter. Total: 0.1213 s/iter. ETA=0:00:49
[04/03 08:18:04] d2.evaluation.evaluator INFO: Inference done 178/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0011 s/iter. Total: 0.1211 s/iter. ETA=0:00:44
[04/03 08:18:09] d2.evaluation.evaluator INFO: Inference done 220/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0009 s/iter. Total: 0.1209 s/iter. ETA=0:00:39
[04/03 08:18:14] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0008 s/iter. Total: 0.1207 s/iter. ETA=0:00:34
[04/03 08:18:19] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1205 s/iter. ETA=0:00:29
[04/03 08:18:24] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1205 s/iter. ETA=0:00:24
[04/03 08:18:29] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0006 s/iter. Total: 0.1204 s/iter. ETA=0:00:19
[04/03 08:18:34] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1204 s/iter. ETA=0:00:14
[04/03 08:18:39] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:09
[04/03 08:18:44] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:04
[04/03 08:18:49] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.450334 (0.120535 s / iter per device, on 1 devices)
[04/03 08:18:49] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118931 s / iter per device, on 1 devices)
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 08:18:49] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 08:18:49] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.43 seconds.
[04/03 08:18:49] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 08:18:49] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.522 | 12.458 | 6.063  | 2.530 | 13.326 | 16.314 |
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 08:18:49] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.303  | people          | 3.883  | bicycle    | 2.491 |
| car        | 34.050 | van             | 14.867 | truck      | 0.000 |
| tricycle   | 2.471  | awning-tricycle | 0.267  | bus        | 0.000 |
| motor      | 6.155  | others          | 0.254  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 08:18:49] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 08:18:49] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 08:18:49] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 08:18:49] d2.evaluation.testing INFO: copypaste: 6.5220,12.4577,6.0632,2.5295,13.3257,16.3142,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 08:18:49] d2.utils.events INFO:  eta: 4:43:10  iter: 11999  total_loss: 0.2209  loss_cls: 0.05443  loss_box_reg: 0.1652  loss_rpn_cls: 0.0009098  loss_rpn_loc: 0.01839  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:19:08] d2.utils.events INFO:  eta: 4:43:08  iter: 12019  total_loss: 0.2579  loss_cls: 0.05929  loss_box_reg: 0.1727  loss_rpn_cls: 0.001201  loss_rpn_loc: 0.01778  time: 0.8864  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:19:26] d2.utils.events INFO:  eta: 4:42:50  iter: 12039  total_loss: 0.2339  loss_cls: 0.05267  loss_box_reg: 0.1508  loss_rpn_cls: 0.001368  loss_rpn_loc: 0.01913  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:19:44] d2.utils.events INFO:  eta: 4:42:47  iter: 12059  total_loss: 0.2447  loss_cls: 0.05632  loss_box_reg: 0.1712  loss_rpn_cls: 0.001038  loss_rpn_loc: 0.01448  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:20:02] d2.utils.events INFO:  eta: 4:42:13  iter: 12079  total_loss: 0.268  loss_cls: 0.04654  loss_box_reg: 0.1828  loss_rpn_cls: 0.001902  loss_rpn_loc: 0.01731  time: 0.8864  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:20:20] d2.utils.events INFO:  eta: 4:42:18  iter: 12099  total_loss: 0.2688  loss_cls: 0.05934  loss_box_reg: 0.1889  loss_rpn_cls: 0.001524  loss_rpn_loc: 0.0198  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:20:37] d2.utils.events INFO:  eta: 4:41:35  iter: 12119  total_loss: 0.27  loss_cls: 0.05672  loss_box_reg: 0.1723  loss_rpn_cls: 0.001557  loss_rpn_loc: 0.0244  time: 0.8864  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:20:55] d2.utils.events INFO:  eta: 4:41:40  iter: 12139  total_loss: 0.2217  loss_cls: 0.04808  loss_box_reg: 0.1673  loss_rpn_cls: 0.001529  loss_rpn_loc: 0.01873  time: 0.8864  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:21:12] d2.utils.events INFO:  eta: 4:40:59  iter: 12159  total_loss: 0.2798  loss_cls: 0.06206  loss_box_reg: 0.1942  loss_rpn_cls: 0.001109  loss_rpn_loc: 0.01651  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:21:30] d2.utils.events INFO:  eta: 4:40:33  iter: 12179  total_loss: 0.2694  loss_cls: 0.05735  loss_box_reg: 0.1794  loss_rpn_cls: 0.002816  loss_rpn_loc: 0.01913  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:21:48] d2.utils.events INFO:  eta: 4:40:06  iter: 12199  total_loss: 0.2505  loss_cls: 0.05439  loss_box_reg: 0.1729  loss_rpn_cls: 0.00147  loss_rpn_loc: 0.01823  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:22:05] d2.utils.events INFO:  eta: 4:40:05  iter: 12219  total_loss: 0.2736  loss_cls: 0.06364  loss_box_reg: 0.182  loss_rpn_cls: 0.002289  loss_rpn_loc: 0.01875  time: 0.8863  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:22:23] d2.utils.events INFO:  eta: 4:39:50  iter: 12239  total_loss: 0.2504  loss_cls: 0.05936  loss_box_reg: 0.168  loss_rpn_cls: 0.001148  loss_rpn_loc: 0.02487  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:22:41] d2.utils.events INFO:  eta: 4:39:30  iter: 12259  total_loss: 0.2418  loss_cls: 0.05164  loss_box_reg: 0.1674  loss_rpn_cls: 0.002929  loss_rpn_loc: 0.02075  time: 0.8863  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:22:58] d2.utils.events INFO:  eta: 4:39:04  iter: 12279  total_loss: 0.2552  loss_cls: 0.05735  loss_box_reg: 0.176  loss_rpn_cls: 0.00177  loss_rpn_loc: 0.02309  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:23:16] d2.utils.events INFO:  eta: 4:38:26  iter: 12299  total_loss: 0.1864  loss_cls: 0.04031  loss_box_reg: 0.1354  loss_rpn_cls: 0.001789  loss_rpn_loc: 0.01266  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:23:33] d2.utils.events INFO:  eta: 4:37:55  iter: 12319  total_loss: 0.2764  loss_cls: 0.05619  loss_box_reg: 0.1764  loss_rpn_cls: 0.001831  loss_rpn_loc: 0.02023  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:23:50] d2.utils.events INFO:  eta: 4:37:27  iter: 12339  total_loss: 0.2674  loss_cls: 0.05753  loss_box_reg: 0.1847  loss_rpn_cls: 0.003881  loss_rpn_loc: 0.02191  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:24:08] d2.utils.events INFO:  eta: 4:37:13  iter: 12359  total_loss: 0.2213  loss_cls: 0.04713  loss_box_reg: 0.1518  loss_rpn_cls: 0.001055  loss_rpn_loc: 0.02194  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:24:26] d2.utils.events INFO:  eta: 4:37:07  iter: 12379  total_loss: 0.2442  loss_cls: 0.05919  loss_box_reg: 0.1626  loss_rpn_cls: 0.001435  loss_rpn_loc: 0.01823  time: 0.8861  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:24:44] d2.utils.events INFO:  eta: 4:36:57  iter: 12399  total_loss: 0.2442  loss_cls: 0.0549  loss_box_reg: 0.1709  loss_rpn_cls: 0.001577  loss_rpn_loc: 0.02076  time: 0.8862  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 08:25:02] d2.utils.events INFO:  eta: 4:36:55  iter: 12419  total_loss: 0.2431  loss_cls: 0.05328  loss_box_reg: 0.1673  loss_rpn_cls: 0.001437  loss_rpn_loc: 0.01742  time: 0.8862  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 08:25:19] d2.utils.events INFO:  eta: 4:36:32  iter: 12439  total_loss: 0.2409  loss_cls: 0.05366  loss_box_reg: 0.1656  loss_rpn_cls: 0.002257  loss_rpn_loc: 0.02029  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:25:37] d2.utils.events INFO:  eta: 4:36:08  iter: 12459  total_loss: 0.2571  loss_cls: 0.06155  loss_box_reg: 0.1795  loss_rpn_cls: 0.002511  loss_rpn_loc: 0.01754  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:25:55] d2.utils.events INFO:  eta: 4:35:57  iter: 12479  total_loss: 0.2724  loss_cls: 0.0543  loss_box_reg: 0.1885  loss_rpn_cls: 0.002028  loss_rpn_loc: 0.02098  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:26:12] d2.utils.events INFO:  eta: 4:35:52  iter: 12499  total_loss: 0.2374  loss_cls: 0.05309  loss_box_reg: 0.1694  loss_rpn_cls: 0.001584  loss_rpn_loc: 0.02101  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:26:30] d2.utils.events INFO:  eta: 4:35:16  iter: 12519  total_loss: 0.2187  loss_cls: 0.04155  loss_box_reg: 0.167  loss_rpn_cls: 0.001265  loss_rpn_loc: 0.01291  time: 0.8861  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:26:47] d2.utils.events INFO:  eta: 4:35:03  iter: 12539  total_loss: 0.25  loss_cls: 0.05329  loss_box_reg: 0.163  loss_rpn_cls: 0.001131  loss_rpn_loc: 0.01629  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:27:05] d2.utils.events INFO:  eta: 4:34:38  iter: 12559  total_loss: 0.2508  loss_cls: 0.05762  loss_box_reg: 0.1778  loss_rpn_cls: 0.0008174  loss_rpn_loc: 0.01907  time: 0.8861  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:27:22] d2.utils.events INFO:  eta: 4:34:07  iter: 12579  total_loss: 0.2912  loss_cls: 0.06167  loss_box_reg: 0.2005  loss_rpn_cls: 0.001342  loss_rpn_loc: 0.02072  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:27:40] d2.utils.events INFO:  eta: 4:33:55  iter: 12599  total_loss: 0.2118  loss_cls: 0.04245  loss_box_reg: 0.1412  loss_rpn_cls: 0.001491  loss_rpn_loc: 0.01448  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:27:58] d2.utils.events INFO:  eta: 4:33:40  iter: 12619  total_loss: 0.2088  loss_cls: 0.04932  loss_box_reg: 0.1389  loss_rpn_cls: 0.00123  loss_rpn_loc: 0.0167  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:28:16] d2.utils.events INFO:  eta: 4:33:19  iter: 12639  total_loss: 0.2313  loss_cls: 0.05077  loss_box_reg: 0.1585  loss_rpn_cls: 0.002515  loss_rpn_loc: 0.01831  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:28:33] d2.utils.events INFO:  eta: 4:33:02  iter: 12659  total_loss: 0.2034  loss_cls: 0.04477  loss_box_reg: 0.1398  loss_rpn_cls: 0.001536  loss_rpn_loc: 0.01843  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:28:51] d2.utils.events INFO:  eta: 4:32:23  iter: 12679  total_loss: 0.2316  loss_cls: 0.04612  loss_box_reg: 0.1739  loss_rpn_cls: 0.001646  loss_rpn_loc: 0.01759  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:29:09] d2.utils.events INFO:  eta: 4:32:05  iter: 12699  total_loss: 0.2278  loss_cls: 0.05327  loss_box_reg: 0.1612  loss_rpn_cls: 0.001174  loss_rpn_loc: 0.01522  time: 0.8861  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:29:27] d2.utils.events INFO:  eta: 4:31:46  iter: 12719  total_loss: 0.259  loss_cls: 0.05854  loss_box_reg: 0.178  loss_rpn_cls: 0.00229  loss_rpn_loc: 0.02762  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:29:45] d2.utils.events INFO:  eta: 4:31:30  iter: 12739  total_loss: 0.2048  loss_cls: 0.04898  loss_box_reg: 0.151  loss_rpn_cls: 0.0008841  loss_rpn_loc: 0.01465  time: 0.8861  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:30:03] d2.utils.events INFO:  eta: 4:31:12  iter: 12759  total_loss: 0.2374  loss_cls: 0.05083  loss_box_reg: 0.1713  loss_rpn_cls: 0.001342  loss_rpn_loc: 0.01991  time: 0.8861  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:30:21] d2.utils.events INFO:  eta: 4:31:03  iter: 12779  total_loss: 0.2519  loss_cls: 0.06591  loss_box_reg: 0.1678  loss_rpn_cls: 0.001523  loss_rpn_loc: 0.02433  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:30:39] d2.utils.events INFO:  eta: 4:30:36  iter: 12799  total_loss: 0.2027  loss_cls: 0.04137  loss_box_reg: 0.1442  loss_rpn_cls: 0.0006974  loss_rpn_loc: 0.01646  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:30:56] d2.utils.events INFO:  eta: 4:30:18  iter: 12819  total_loss: 0.2652  loss_cls: 0.06079  loss_box_reg: 0.1754  loss_rpn_cls: 0.002156  loss_rpn_loc: 0.0196  time: 0.8861  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:31:14] d2.utils.events INFO:  eta: 4:30:00  iter: 12839  total_loss: 0.2194  loss_cls: 0.04453  loss_box_reg: 0.1343  loss_rpn_cls: 0.001221  loss_rpn_loc: 0.01747  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:31:32] d2.utils.events INFO:  eta: 4:29:42  iter: 12859  total_loss: 0.2438  loss_cls: 0.06865  loss_box_reg: 0.1498  loss_rpn_cls: 0.001447  loss_rpn_loc: 0.0201  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:31:50] d2.utils.events INFO:  eta: 4:29:25  iter: 12879  total_loss: 0.2561  loss_cls: 0.05738  loss_box_reg: 0.1723  loss_rpn_cls: 0.001313  loss_rpn_loc: 0.02514  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:32:08] d2.utils.events INFO:  eta: 4:29:07  iter: 12899  total_loss: 0.2426  loss_cls: 0.04958  loss_box_reg: 0.1663  loss_rpn_cls: 0.002194  loss_rpn_loc: 0.02044  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:32:26] d2.utils.events INFO:  eta: 4:29:04  iter: 12919  total_loss: 0.2215  loss_cls: 0.04488  loss_box_reg: 0.1665  loss_rpn_cls: 0.001621  loss_rpn_loc: 0.0187  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:32:43] d2.utils.events INFO:  eta: 4:28:40  iter: 12939  total_loss: 0.2408  loss_cls: 0.05525  loss_box_reg: 0.1616  loss_rpn_cls: 0.001369  loss_rpn_loc: 0.01993  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:33:01] d2.utils.events INFO:  eta: 4:28:23  iter: 12959  total_loss: 0.2748  loss_cls: 0.06499  loss_box_reg: 0.189  loss_rpn_cls: 0.001115  loss_rpn_loc: 0.01968  time: 0.8862  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 08:33:19] d2.utils.events INFO:  eta: 4:28:00  iter: 12979  total_loss: 0.2518  loss_cls: 0.05735  loss_box_reg: 0.1707  loss_rpn_cls: 0.00175  loss_rpn_loc: 0.01682  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:33:38] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 08:33:38] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 08:33:38] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 08:33:38] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 08:33:38] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 08:33:40] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:01:04
[04/03 08:33:45] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:59
[04/03 08:33:50] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:54
[04/03 08:33:55] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:49
[04/03 08:34:00] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:44
[04/03 08:34:05] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:39
[04/03 08:34:10] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:34
[04/03 08:34:15] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 08:34:20] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 08:34:25] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0006 s/iter. Total: 0.1204 s/iter. ETA=0:00:19
[04/03 08:34:30] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0006 s/iter. Total: 0.1203 s/iter. ETA=0:00:14
[04/03 08:34:35] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0005 s/iter. Total: 0.1203 s/iter. ETA=0:00:09
[04/03 08:34:40] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0005 s/iter. Total: 0.1203 s/iter. ETA=0:00:04
[04/03 08:34:44] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.424270 (0.120487 s / iter per device, on 1 devices)
[04/03 08:34:44] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118824 s / iter per device, on 1 devices)
[04/03 08:34:44] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 08:34:44] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 08:34:45] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 08:34:45] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.46 seconds.
[04/03 08:34:45] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 08:34:45] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.504 | 12.293 | 6.067  | 2.285 | 13.442 | 16.232 |
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 08:34:45] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.103  | people          | 4.239  | bicycle    | 3.090 |
| car        | 34.181 | van             | 14.842 | truck      | 0.000 |
| tricycle   | 3.105  | awning-tricycle | 0.604  | bus        | 0.000 |
| motor      | 5.316  | others          | 0.059  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 08:34:45] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 08:34:45] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 08:34:45] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 08:34:45] d2.evaluation.testing INFO: copypaste: 6.5036,12.2928,6.0665,2.2853,13.4419,16.2320,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 08:34:45] d2.utils.events INFO:  eta: 4:27:58  iter: 12999  total_loss: 0.2711  loss_cls: 0.06206  loss_box_reg: 0.1698  loss_rpn_cls: 0.001258  loss_rpn_loc: 0.02065  time: 0.8862  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 08:35:03] d2.utils.events INFO:  eta: 4:27:20  iter: 13019  total_loss: 0.2443  loss_cls: 0.06728  loss_box_reg: 0.1822  loss_rpn_cls: 0.001592  loss_rpn_loc: 0.0203  time: 0.8862  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:35:20] d2.utils.events INFO:  eta: 4:26:44  iter: 13039  total_loss: 0.257  loss_cls: 0.04927  loss_box_reg: 0.1779  loss_rpn_cls: 0.001342  loss_rpn_loc: 0.017  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:35:38] d2.utils.events INFO:  eta: 4:26:24  iter: 13059  total_loss: 0.3102  loss_cls: 0.07123  loss_box_reg: 0.2112  loss_rpn_cls: 0.001692  loss_rpn_loc: 0.02592  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:35:56] d2.utils.events INFO:  eta: 4:26:31  iter: 13079  total_loss: 0.2236  loss_cls: 0.0444  loss_box_reg: 0.15  loss_rpn_cls: 0.00277  loss_rpn_loc: 0.01662  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:36:14] d2.utils.events INFO:  eta: 4:26:18  iter: 13099  total_loss: 0.2274  loss_cls: 0.04338  loss_box_reg: 0.1514  loss_rpn_cls: 0.001422  loss_rpn_loc: 0.01937  time: 0.8862  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:36:32] d2.utils.events INFO:  eta: 4:26:09  iter: 13119  total_loss: 0.23  loss_cls: 0.05279  loss_box_reg: 0.1634  loss_rpn_cls: 0.001125  loss_rpn_loc: 0.018  time: 0.8863  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:36:49] d2.utils.events INFO:  eta: 4:25:33  iter: 13139  total_loss: 0.2826  loss_cls: 0.06412  loss_box_reg: 0.1917  loss_rpn_cls: 0.001316  loss_rpn_loc: 0.01689  time: 0.8862  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:37:07] d2.utils.events INFO:  eta: 4:25:28  iter: 13159  total_loss: 0.2547  loss_cls: 0.05861  loss_box_reg: 0.1724  loss_rpn_cls: 0.002192  loss_rpn_loc: 0.01973  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:37:24] d2.utils.events INFO:  eta: 4:25:05  iter: 13179  total_loss: 0.2326  loss_cls: 0.04565  loss_box_reg: 0.1618  loss_rpn_cls: 0.001257  loss_rpn_loc: 0.01778  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:37:42] d2.utils.events INFO:  eta: 4:24:37  iter: 13199  total_loss: 0.2484  loss_cls: 0.04863  loss_box_reg: 0.1704  loss_rpn_cls: 0.002013  loss_rpn_loc: 0.01908  time: 0.8862  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:37:59] d2.utils.events INFO:  eta: 4:24:19  iter: 13219  total_loss: 0.2184  loss_cls: 0.05404  loss_box_reg: 0.1547  loss_rpn_cls: 0.001233  loss_rpn_loc: 0.0138  time: 0.8862  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:38:17] d2.utils.events INFO:  eta: 4:24:08  iter: 13239  total_loss: 0.2351  loss_cls: 0.05969  loss_box_reg: 0.1547  loss_rpn_cls: 0.002064  loss_rpn_loc: 0.02352  time: 0.8862  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:38:34] d2.utils.events INFO:  eta: 4:23:28  iter: 13259  total_loss: 0.2742  loss_cls: 0.05766  loss_box_reg: 0.1869  loss_rpn_cls: 0.001286  loss_rpn_loc: 0.02142  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:38:52] d2.utils.events INFO:  eta: 4:23:36  iter: 13279  total_loss: 0.2458  loss_cls: 0.05763  loss_box_reg: 0.1636  loss_rpn_cls: 0.001287  loss_rpn_loc: 0.02295  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:39:10] d2.utils.events INFO:  eta: 4:23:08  iter: 13299  total_loss: 0.2617  loss_cls: 0.05356  loss_box_reg: 0.1765  loss_rpn_cls: 0.001071  loss_rpn_loc: 0.01899  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:39:27] d2.utils.events INFO:  eta: 4:22:50  iter: 13319  total_loss: 0.2703  loss_cls: 0.05521  loss_box_reg: 0.1827  loss_rpn_cls: 0.001495  loss_rpn_loc: 0.02334  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:39:45] d2.utils.events INFO:  eta: 4:22:43  iter: 13339  total_loss: 0.2107  loss_cls: 0.04319  loss_box_reg: 0.1539  loss_rpn_cls: 0.001697  loss_rpn_loc: 0.01652  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:40:02] d2.utils.events INFO:  eta: 4:22:14  iter: 13359  total_loss: 0.2373  loss_cls: 0.05896  loss_box_reg: 0.1613  loss_rpn_cls: 0.001305  loss_rpn_loc: 0.02236  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:40:20] d2.utils.events INFO:  eta: 4:21:51  iter: 13379  total_loss: 0.2235  loss_cls: 0.05399  loss_box_reg: 0.1464  loss_rpn_cls: 0.001585  loss_rpn_loc: 0.01643  time: 0.8860  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:40:38] d2.utils.events INFO:  eta: 4:21:26  iter: 13399  total_loss: 0.2061  loss_cls: 0.03946  loss_box_reg: 0.1416  loss_rpn_cls: 0.001515  loss_rpn_loc: 0.01355  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:40:55] d2.utils.events INFO:  eta: 4:20:54  iter: 13419  total_loss: 0.2  loss_cls: 0.03113  loss_box_reg: 0.1426  loss_rpn_cls: 0.001136  loss_rpn_loc: 0.01333  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:41:13] d2.utils.events INFO:  eta: 4:20:37  iter: 13439  total_loss: 0.2549  loss_cls: 0.05475  loss_box_reg: 0.1701  loss_rpn_cls: 0.001537  loss_rpn_loc: 0.02108  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:41:31] d2.utils.events INFO:  eta: 4:20:27  iter: 13459  total_loss: 0.2179  loss_cls: 0.05201  loss_box_reg: 0.1423  loss_rpn_cls: 0.0006867  loss_rpn_loc: 0.01658  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:41:49] d2.utils.events INFO:  eta: 4:19:51  iter: 13479  total_loss: 0.254  loss_cls: 0.05698  loss_box_reg: 0.1754  loss_rpn_cls: 0.001019  loss_rpn_loc: 0.0198  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:42:07] d2.utils.events INFO:  eta: 4:19:36  iter: 13499  total_loss: 0.2478  loss_cls: 0.05714  loss_box_reg: 0.173  loss_rpn_cls: 0.001903  loss_rpn_loc: 0.01973  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:42:24] d2.utils.events INFO:  eta: 4:19:22  iter: 13519  total_loss: 0.3083  loss_cls: 0.1011  loss_box_reg: 0.1749  loss_rpn_cls: 0.003775  loss_rpn_loc: 0.02101  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:42:42] d2.utils.events INFO:  eta: 4:18:57  iter: 13539  total_loss: 0.3311  loss_cls: 0.08355  loss_box_reg: 0.1955  loss_rpn_cls: 0.001579  loss_rpn_loc: 0.01919  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:42:59] d2.utils.events INFO:  eta: 4:18:43  iter: 13559  total_loss: 0.2463  loss_cls: 0.06691  loss_box_reg: 0.1476  loss_rpn_cls: 0.002086  loss_rpn_loc: 0.01861  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:43:16] d2.utils.events INFO:  eta: 4:18:22  iter: 13579  total_loss: 0.2387  loss_cls: 0.05693  loss_box_reg: 0.1477  loss_rpn_cls: 0.001758  loss_rpn_loc: 0.01921  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:43:35] d2.utils.events INFO:  eta: 4:18:23  iter: 13599  total_loss: 0.2641  loss_cls: 0.07227  loss_box_reg: 0.1756  loss_rpn_cls: 0.00132  loss_rpn_loc: 0.01722  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:43:53] d2.utils.events INFO:  eta: 4:18:01  iter: 13619  total_loss: 0.2682  loss_cls: 0.07205  loss_box_reg: 0.1784  loss_rpn_cls: 0.001001  loss_rpn_loc: 0.01873  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:44:11] d2.utils.events INFO:  eta: 4:17:43  iter: 13639  total_loss: 0.2571  loss_cls: 0.0572  loss_box_reg: 0.1582  loss_rpn_cls: 0.002194  loss_rpn_loc: 0.02242  time: 0.8860  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:44:29] d2.utils.events INFO:  eta: 4:17:34  iter: 13659  total_loss: 0.2609  loss_cls: 0.05603  loss_box_reg: 0.1676  loss_rpn_cls: 0.001707  loss_rpn_loc: 0.01867  time: 0.8861  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:44:47] d2.utils.events INFO:  eta: 4:17:26  iter: 13679  total_loss: 0.226  loss_cls: 0.05507  loss_box_reg: 0.1543  loss_rpn_cls: 0.001084  loss_rpn_loc: 0.02215  time: 0.8861  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:45:05] d2.utils.events INFO:  eta: 4:17:14  iter: 13699  total_loss: 0.182  loss_cls: 0.04116  loss_box_reg: 0.1329  loss_rpn_cls: 0.0009769  loss_rpn_loc: 0.01464  time: 0.8861  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:45:22] d2.utils.events INFO:  eta: 4:16:45  iter: 13719  total_loss: 0.2488  loss_cls: 0.0637  loss_box_reg: 0.1689  loss_rpn_cls: 0.001717  loss_rpn_loc: 0.01782  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:45:40] d2.utils.events INFO:  eta: 4:16:17  iter: 13739  total_loss: 0.2342  loss_cls: 0.04965  loss_box_reg: 0.1627  loss_rpn_cls: 0.0006709  loss_rpn_loc: 0.01954  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:45:57] d2.utils.events INFO:  eta: 4:15:48  iter: 13759  total_loss: 0.2535  loss_cls: 0.06812  loss_box_reg: 0.1755  loss_rpn_cls: 0.001881  loss_rpn_loc: 0.02626  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:46:14] d2.utils.events INFO:  eta: 4:15:22  iter: 13779  total_loss: 0.2638  loss_cls: 0.05249  loss_box_reg: 0.1727  loss_rpn_cls: 0.002788  loss_rpn_loc: 0.02062  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:46:32] d2.utils.events INFO:  eta: 4:15:05  iter: 13799  total_loss: 0.225  loss_cls: 0.04636  loss_box_reg: 0.1584  loss_rpn_cls: 0.0009804  loss_rpn_loc: 0.01741  time: 0.8860  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:46:49] d2.utils.events INFO:  eta: 4:14:46  iter: 13819  total_loss: 0.2908  loss_cls: 0.06255  loss_box_reg: 0.1958  loss_rpn_cls: 0.001696  loss_rpn_loc: 0.0253  time: 0.8859  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:47:07] d2.utils.events INFO:  eta: 4:14:44  iter: 13839  total_loss: 0.2048  loss_cls: 0.04498  loss_box_reg: 0.1512  loss_rpn_cls: 0.0008978  loss_rpn_loc: 0.0135  time: 0.8860  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:47:24] d2.utils.events INFO:  eta: 4:14:11  iter: 13859  total_loss: 0.2402  loss_cls: 0.05511  loss_box_reg: 0.1576  loss_rpn_cls: 0.001472  loss_rpn_loc: 0.01765  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:47:42] d2.utils.events INFO:  eta: 4:13:50  iter: 13879  total_loss: 0.2597  loss_cls: 0.05186  loss_box_reg: 0.1632  loss_rpn_cls: 0.001492  loss_rpn_loc: 0.01989  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:48:00] d2.utils.events INFO:  eta: 4:13:46  iter: 13899  total_loss: 0.1933  loss_cls: 0.04609  loss_box_reg: 0.1307  loss_rpn_cls: 0.000963  loss_rpn_loc: 0.01477  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:48:18] d2.utils.events INFO:  eta: 4:13:28  iter: 13919  total_loss: 0.2389  loss_cls: 0.04696  loss_box_reg: 0.1615  loss_rpn_cls: 0.0009283  loss_rpn_loc: 0.02035  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:48:35] d2.utils.events INFO:  eta: 4:13:00  iter: 13939  total_loss: 0.2655  loss_cls: 0.06059  loss_box_reg: 0.1611  loss_rpn_cls: 0.001607  loss_rpn_loc: 0.02153  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:48:52] d2.utils.events INFO:  eta: 4:12:44  iter: 13959  total_loss: 0.2453  loss_cls: 0.0568  loss_box_reg: 0.1668  loss_rpn_cls: 0.001489  loss_rpn_loc: 0.01941  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:49:10] d2.utils.events INFO:  eta: 4:12:31  iter: 13979  total_loss: 0.2312  loss_cls: 0.05044  loss_box_reg: 0.1559  loss_rpn_cls: 0.001037  loss_rpn_loc: 0.01484  time: 0.8858  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:49:28] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 08:49:28] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 08:49:28] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 08:49:28] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 08:49:28] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 08:49:30] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1179 s/iter. Eval: 0.0001 s/iter. Total: 0.1189 s/iter. ETA=0:01:03
[04/03 08:49:35] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1197 s/iter. ETA=0:00:59
[04/03 08:49:40] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:54
[04/03 08:49:45] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:49
[04/03 08:49:50] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:44
[04/03 08:49:55] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:39
[04/03 08:50:00] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:34
[04/03 08:50:05] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:29
[04/03 08:50:10] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:24
[04/03 08:50:15] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:19
[04/03 08:50:20] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:14
[04/03 08:50:25] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:09
[04/03 08:50:30] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:04
[04/03 08:50:34] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.338234 (0.120328 s / iter per device, on 1 devices)
[04/03 08:50:34] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118989 s / iter per device, on 1 devices)
[04/03 08:50:34] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 08:50:34] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 08:50:34] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 08:50:34] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 08:50:35] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 08:50:35] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 08:50:35] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.262 | 11.502 | 5.897  | 2.266 | 12.840 | 12.352 |
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 08:50:35] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.468  | people          | 3.249  | bicycle    | 2.844 |
| car        | 34.731 | van             | 12.725 | truck      | 0.000 |
| tricycle   | 2.984  | awning-tricycle | 0.408  | bus        | 0.000 |
| motor      | 5.457  | others          | 0.015  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 08:50:35] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 08:50:35] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 08:50:35] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 08:50:35] d2.evaluation.testing INFO: copypaste: 6.2620,11.5021,5.8973,2.2658,12.8403,12.3515,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 08:50:35] d2.utils.events INFO:  eta: 4:11:45  iter: 13999  total_loss: 0.2391  loss_cls: 0.05519  loss_box_reg: 0.1613  loss_rpn_cls: 0.001552  loss_rpn_loc: 0.02011  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:50:53] d2.utils.events INFO:  eta: 4:11:39  iter: 14019  total_loss: 0.2379  loss_cls: 0.05483  loss_box_reg: 0.1573  loss_rpn_cls: 0.001014  loss_rpn_loc: 0.01372  time: 0.8858  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:51:11] d2.utils.events INFO:  eta: 4:11:33  iter: 14039  total_loss: 0.2122  loss_cls: 0.04826  loss_box_reg: 0.138  loss_rpn_cls: 0.001275  loss_rpn_loc: 0.01388  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:51:29] d2.utils.events INFO:  eta: 4:11:31  iter: 14059  total_loss: 0.2231  loss_cls: 0.04862  loss_box_reg: 0.1543  loss_rpn_cls: 0.001647  loss_rpn_loc: 0.0197  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:51:47] d2.utils.events INFO:  eta: 4:10:58  iter: 14079  total_loss: 0.2666  loss_cls: 0.06023  loss_box_reg: 0.1708  loss_rpn_cls: 0.002499  loss_rpn_loc: 0.02352  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:52:04] d2.utils.events INFO:  eta: 4:10:30  iter: 14099  total_loss: 0.2321  loss_cls: 0.06133  loss_box_reg: 0.1568  loss_rpn_cls: 0.002493  loss_rpn_loc: 0.01825  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:52:23] d2.utils.events INFO:  eta: 4:10:30  iter: 14119  total_loss: 0.2332  loss_cls: 0.05099  loss_box_reg: 0.16  loss_rpn_cls: 0.001855  loss_rpn_loc: 0.01577  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:52:41] d2.utils.events INFO:  eta: 4:10:36  iter: 14139  total_loss: 0.2586  loss_cls: 0.06894  loss_box_reg: 0.1687  loss_rpn_cls: 0.001695  loss_rpn_loc: 0.02387  time: 0.8859  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:52:58] d2.utils.events INFO:  eta: 4:09:57  iter: 14159  total_loss: 0.2333  loss_cls: 0.04927  loss_box_reg: 0.1674  loss_rpn_cls: 0.002109  loss_rpn_loc: 0.01869  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:53:15] d2.utils.events INFO:  eta: 4:09:37  iter: 14179  total_loss: 0.2279  loss_cls: 0.04874  loss_box_reg: 0.1466  loss_rpn_cls: 0.001704  loss_rpn_loc: 0.01684  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:53:33] d2.utils.events INFO:  eta: 4:09:21  iter: 14199  total_loss: 0.2507  loss_cls: 0.06602  loss_box_reg: 0.1704  loss_rpn_cls: 0.001056  loss_rpn_loc: 0.01986  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:53:50] d2.utils.events INFO:  eta: 4:09:01  iter: 14219  total_loss: 0.2538  loss_cls: 0.05628  loss_box_reg: 0.1674  loss_rpn_cls: 0.001668  loss_rpn_loc: 0.0198  time: 0.8858  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:54:09] d2.utils.events INFO:  eta: 4:08:49  iter: 14239  total_loss: 0.2561  loss_cls: 0.05013  loss_box_reg: 0.1596  loss_rpn_cls: 0.0007713  loss_rpn_loc: 0.01784  time: 0.8859  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:54:27] d2.utils.events INFO:  eta: 4:08:54  iter: 14259  total_loss: 0.2223  loss_cls: 0.04704  loss_box_reg: 0.1526  loss_rpn_cls: 0.001679  loss_rpn_loc: 0.01651  time: 0.8859  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:54:44] d2.utils.events INFO:  eta: 4:08:20  iter: 14279  total_loss: 0.2775  loss_cls: 0.05875  loss_box_reg: 0.1859  loss_rpn_cls: 0.001108  loss_rpn_loc: 0.02008  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:55:02] d2.utils.events INFO:  eta: 4:08:08  iter: 14299  total_loss: 0.1773  loss_cls: 0.03869  loss_box_reg: 0.1265  loss_rpn_cls: 0.0008036  loss_rpn_loc: 0.01217  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:55:20] d2.utils.events INFO:  eta: 4:07:48  iter: 14319  total_loss: 0.2423  loss_cls: 0.05363  loss_box_reg: 0.1652  loss_rpn_cls: 0.001324  loss_rpn_loc: 0.01658  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:55:38] d2.utils.events INFO:  eta: 4:07:23  iter: 14339  total_loss: 0.2274  loss_cls: 0.04214  loss_box_reg: 0.1497  loss_rpn_cls: 0.001356  loss_rpn_loc: 0.01943  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:55:55] d2.utils.events INFO:  eta: 4:07:15  iter: 14359  total_loss: 0.2653  loss_cls: 0.0646  loss_box_reg: 0.1712  loss_rpn_cls: 0.001282  loss_rpn_loc: 0.01672  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:56:13] d2.utils.events INFO:  eta: 4:06:57  iter: 14379  total_loss: 0.2116  loss_cls: 0.05141  loss_box_reg: 0.1442  loss_rpn_cls: 0.0009948  loss_rpn_loc: 0.01873  time: 0.8859  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 08:56:31] d2.utils.events INFO:  eta: 4:06:44  iter: 14399  total_loss: 0.2166  loss_cls: 0.04534  loss_box_reg: 0.1585  loss_rpn_cls: 0.00294  loss_rpn_loc: 0.01606  time: 0.8859  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:56:48] d2.utils.events INFO:  eta: 4:06:21  iter: 14419  total_loss: 0.2331  loss_cls: 0.05156  loss_box_reg: 0.1684  loss_rpn_cls: 0.001467  loss_rpn_loc: 0.01708  time: 0.8859  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:57:06] d2.utils.events INFO:  eta: 4:06:03  iter: 14439  total_loss: 0.2382  loss_cls: 0.05393  loss_box_reg: 0.1525  loss_rpn_cls: 0.002105  loss_rpn_loc: 0.01957  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:57:24] d2.utils.events INFO:  eta: 4:05:43  iter: 14459  total_loss: 0.2036  loss_cls: 0.04247  loss_box_reg: 0.1383  loss_rpn_cls: 0.002144  loss_rpn_loc: 0.01825  time: 0.8858  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 08:57:41] d2.utils.events INFO:  eta: 4:05:28  iter: 14479  total_loss: 0.2387  loss_cls: 0.05198  loss_box_reg: 0.1686  loss_rpn_cls: 0.001417  loss_rpn_loc: 0.01819  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:57:59] d2.utils.events INFO:  eta: 4:05:04  iter: 14499  total_loss: 0.2322  loss_cls: 0.04925  loss_box_reg: 0.1757  loss_rpn_cls: 0.0006723  loss_rpn_loc: 0.01451  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:58:16] d2.utils.events INFO:  eta: 4:04:46  iter: 14519  total_loss: 0.2442  loss_cls: 0.04684  loss_box_reg: 0.1772  loss_rpn_cls: 0.001282  loss_rpn_loc: 0.01655  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:58:34] d2.utils.events INFO:  eta: 4:04:28  iter: 14539  total_loss: 0.2128  loss_cls: 0.0437  loss_box_reg: 0.1457  loss_rpn_cls: 0.0008878  loss_rpn_loc: 0.01377  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:58:52] d2.utils.events INFO:  eta: 4:04:13  iter: 14559  total_loss: 0.2126  loss_cls: 0.0528  loss_box_reg: 0.147  loss_rpn_cls: 0.0005419  loss_rpn_loc: 0.01811  time: 0.8858  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 08:59:10] d2.utils.events INFO:  eta: 4:04:06  iter: 14579  total_loss: 0.1908  loss_cls: 0.04541  loss_box_reg: 0.1384  loss_rpn_cls: 0.001481  loss_rpn_loc: 0.01455  time: 0.8858  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 08:59:28] d2.utils.events INFO:  eta: 4:03:27  iter: 14599  total_loss: 0.2552  loss_cls: 0.05438  loss_box_reg: 0.1673  loss_rpn_cls: 0.001449  loss_rpn_loc: 0.0207  time: 0.8858  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 08:59:44] d2.utils.events INFO:  eta: 4:02:44  iter: 14619  total_loss: 0.2756  loss_cls: 0.06972  loss_box_reg: 0.1727  loss_rpn_cls: 0.001396  loss_rpn_loc: 0.02442  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:00:02] d2.utils.events INFO:  eta: 4:02:27  iter: 14639  total_loss: 0.235  loss_cls: 0.05564  loss_box_reg: 0.1578  loss_rpn_cls: 0.0009988  loss_rpn_loc: 0.01795  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:00:19] d2.utils.events INFO:  eta: 4:01:52  iter: 14659  total_loss: 0.2364  loss_cls: 0.05248  loss_box_reg: 0.1625  loss_rpn_cls: 0.0007989  loss_rpn_loc: 0.01392  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:00:37] d2.utils.events INFO:  eta: 4:01:44  iter: 14679  total_loss: 0.2485  loss_cls: 0.05634  loss_box_reg: 0.174  loss_rpn_cls: 0.001563  loss_rpn_loc: 0.01755  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:00:55] d2.utils.events INFO:  eta: 4:01:11  iter: 14699  total_loss: 0.222  loss_cls: 0.05353  loss_box_reg: 0.1507  loss_rpn_cls: 0.00147  loss_rpn_loc: 0.01455  time: 0.8857  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:01:12] d2.utils.events INFO:  eta: 4:00:52  iter: 14719  total_loss: 0.2455  loss_cls: 0.0605  loss_box_reg: 0.1575  loss_rpn_cls: 0.001757  loss_rpn_loc: 0.02094  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:01:29] d2.utils.events INFO:  eta: 4:00:26  iter: 14739  total_loss: 0.2733  loss_cls: 0.06249  loss_box_reg: 0.1833  loss_rpn_cls: 0.001251  loss_rpn_loc: 0.02174  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:01:47] d2.utils.events INFO:  eta: 4:00:17  iter: 14759  total_loss: 0.2175  loss_cls: 0.04782  loss_box_reg: 0.1357  loss_rpn_cls: 0.0007472  loss_rpn_loc: 0.01604  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:02:05] d2.utils.events INFO:  eta: 4:00:15  iter: 14779  total_loss: 0.2317  loss_cls: 0.04647  loss_box_reg: 0.1544  loss_rpn_cls: 0.0009238  loss_rpn_loc: 0.01944  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:02:23] d2.utils.events INFO:  eta: 4:00:27  iter: 14799  total_loss: 0.2335  loss_cls: 0.04896  loss_box_reg: 0.1629  loss_rpn_cls: 0.001107  loss_rpn_loc: 0.0181  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:02:41] d2.utils.events INFO:  eta: 4:00:17  iter: 14819  total_loss: 0.1999  loss_cls: 0.0482  loss_box_reg: 0.1403  loss_rpn_cls: 0.00119  loss_rpn_loc: 0.01633  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:02:58] d2.utils.events INFO:  eta: 3:59:34  iter: 14839  total_loss: 0.2099  loss_cls: 0.0442  loss_box_reg: 0.1538  loss_rpn_cls: 0.0008688  loss_rpn_loc: 0.0165  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:03:16] d2.utils.events INFO:  eta: 3:59:42  iter: 14859  total_loss: 0.239  loss_cls: 0.04867  loss_box_reg: 0.1648  loss_rpn_cls: 0.001085  loss_rpn_loc: 0.01709  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:03:33] d2.utils.events INFO:  eta: 3:59:30  iter: 14879  total_loss: 0.2437  loss_cls: 0.04579  loss_box_reg: 0.1653  loss_rpn_cls: 0.001323  loss_rpn_loc: 0.01595  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:03:51] d2.utils.events INFO:  eta: 3:59:10  iter: 14899  total_loss: 0.2545  loss_cls: 0.05676  loss_box_reg: 0.1841  loss_rpn_cls: 0.001467  loss_rpn_loc: 0.01905  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:04:09] d2.utils.events INFO:  eta: 3:58:52  iter: 14919  total_loss: 0.232  loss_cls: 0.05669  loss_box_reg: 0.1522  loss_rpn_cls: 0.001358  loss_rpn_loc: 0.01604  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:04:27] d2.utils.events INFO:  eta: 3:58:43  iter: 14939  total_loss: 0.2544  loss_cls: 0.06548  loss_box_reg: 0.1755  loss_rpn_cls: 0.001758  loss_rpn_loc: 0.02126  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:04:44] d2.utils.events INFO:  eta: 3:58:16  iter: 14959  total_loss: 0.2368  loss_cls: 0.06464  loss_box_reg: 0.1641  loss_rpn_cls: 0.00187  loss_rpn_loc: 0.01635  time: 0.8856  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:05:01] d2.utils.events INFO:  eta: 3:57:55  iter: 14979  total_loss: 0.266  loss_cls: 0.06514  loss_box_reg: 0.1703  loss_rpn_cls: 0.002663  loss_rpn_loc: 0.02304  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:05:19] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 09:05:19] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 09:05:19] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 09:05:20] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 09:05:20] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 09:05:21] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1184 s/iter. Eval: 0.0002 s/iter. Total: 0.1193 s/iter. ETA=0:01:04
[04/03 09:05:26] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:59
[04/03 09:05:31] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:54
[04/03 09:05:36] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:49
[04/03 09:05:41] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:44
[04/03 09:05:46] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:39
[04/03 09:05:52] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:34
[04/03 09:05:57] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:29
[04/03 09:06:02] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:24
[04/03 09:06:07] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 09:06:12] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:14
[04/03 09:06:17] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0010 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:09
[04/03 09:06:22] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0010 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:04
[04/03 09:06:26] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.420202 (0.120479 s / iter per device, on 1 devices)
[04/03 09:06:26] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119103 s / iter per device, on 1 devices)
[04/03 09:06:26] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 09:06:26] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 09:06:26] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 09:06:26] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 09:06:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.44 seconds.
[04/03 09:06:27] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 09:06:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.480 | 12.129 | 6.132  | 2.402 | 13.139 | 12.557 |
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 09:06:27] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.407  | people          | 3.687  | bicycle    | 2.825 |
| car        | 34.337 | van             | 14.291 | truck      | 0.000 |
| tricycle   | 3.031  | awning-tricycle | 0.679  | bus        | 0.000 |
| motor      | 4.995  | others          | 0.032  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 09:06:27] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 09:06:27] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 09:06:27] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 09:06:27] d2.evaluation.testing INFO: copypaste: 6.4803,12.1288,6.1325,2.4024,13.1390,12.5567,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 09:06:27] d2.utils.events INFO:  eta: 3:57:43  iter: 14999  total_loss: 0.1795  loss_cls: 0.03659  loss_box_reg: 0.1214  loss_rpn_cls: 0.001434  loss_rpn_loc: 0.01535  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:06:45] d2.utils.events INFO:  eta: 3:57:29  iter: 15019  total_loss: 0.2171  loss_cls: 0.04912  loss_box_reg: 0.1383  loss_rpn_cls: 0.0007831  loss_rpn_loc: 0.01792  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:07:03] d2.utils.events INFO:  eta: 3:57:16  iter: 15039  total_loss: 0.2306  loss_cls: 0.04221  loss_box_reg: 0.165  loss_rpn_cls: 0.001128  loss_rpn_loc: 0.01665  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:07:20] d2.utils.events INFO:  eta: 3:56:47  iter: 15059  total_loss: 0.2065  loss_cls: 0.04734  loss_box_reg: 0.142  loss_rpn_cls: 0.001533  loss_rpn_loc: 0.01765  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:07:38] d2.utils.events INFO:  eta: 3:56:25  iter: 15079  total_loss: 0.2336  loss_cls: 0.04828  loss_box_reg: 0.1579  loss_rpn_cls: 0.00151  loss_rpn_loc: 0.01864  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:07:56] d2.utils.events INFO:  eta: 3:56:14  iter: 15099  total_loss: 0.2024  loss_cls: 0.04522  loss_box_reg: 0.1374  loss_rpn_cls: 0.001266  loss_rpn_loc: 0.01671  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:08:14] d2.utils.events INFO:  eta: 3:55:50  iter: 15119  total_loss: 0.2353  loss_cls: 0.04819  loss_box_reg: 0.1622  loss_rpn_cls: 0.001167  loss_rpn_loc: 0.01851  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:08:32] d2.utils.events INFO:  eta: 3:55:27  iter: 15139  total_loss: 0.2099  loss_cls: 0.04153  loss_box_reg: 0.1396  loss_rpn_cls: 0.001372  loss_rpn_loc: 0.01513  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:08:50] d2.utils.events INFO:  eta: 3:55:24  iter: 15159  total_loss: 0.2002  loss_cls: 0.04138  loss_box_reg: 0.1323  loss_rpn_cls: 0.001271  loss_rpn_loc: 0.0214  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:09:08] d2.utils.events INFO:  eta: 3:55:12  iter: 15179  total_loss: 0.2503  loss_cls: 0.05372  loss_box_reg: 0.1516  loss_rpn_cls: 0.002649  loss_rpn_loc: 0.01929  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:09:25] d2.utils.events INFO:  eta: 3:54:55  iter: 15199  total_loss: 0.2233  loss_cls: 0.04413  loss_box_reg: 0.1504  loss_rpn_cls: 0.001191  loss_rpn_loc: 0.01805  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:09:43] d2.utils.events INFO:  eta: 3:54:33  iter: 15219  total_loss: 0.2371  loss_cls: 0.04518  loss_box_reg: 0.1606  loss_rpn_cls: 0.0019  loss_rpn_loc: 0.0162  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:10:01] d2.utils.events INFO:  eta: 3:54:13  iter: 15239  total_loss: 0.2427  loss_cls: 0.05467  loss_box_reg: 0.1566  loss_rpn_cls: 0.001285  loss_rpn_loc: 0.0222  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:10:19] d2.utils.events INFO:  eta: 3:53:44  iter: 15259  total_loss: 0.2379  loss_cls: 0.05328  loss_box_reg: 0.1739  loss_rpn_cls: 0.0008395  loss_rpn_loc: 0.01807  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:10:37] d2.utils.events INFO:  eta: 3:53:37  iter: 15279  total_loss: 0.2195  loss_cls: 0.05533  loss_box_reg: 0.1461  loss_rpn_cls: 0.001113  loss_rpn_loc: 0.01598  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:10:55] d2.utils.events INFO:  eta: 3:53:19  iter: 15299  total_loss: 0.2231  loss_cls: 0.04356  loss_box_reg: 0.1607  loss_rpn_cls: 0.001848  loss_rpn_loc: 0.01428  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:11:12] d2.utils.events INFO:  eta: 3:53:02  iter: 15319  total_loss: 0.2141  loss_cls: 0.05274  loss_box_reg: 0.1445  loss_rpn_cls: 0.003108  loss_rpn_loc: 0.01756  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:11:31] d2.utils.events INFO:  eta: 3:53:00  iter: 15339  total_loss: 0.2405  loss_cls: 0.05819  loss_box_reg: 0.1571  loss_rpn_cls: 0.001392  loss_rpn_loc: 0.02176  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:11:49] d2.utils.events INFO:  eta: 3:52:42  iter: 15359  total_loss: 0.2319  loss_cls: 0.04524  loss_box_reg: 0.1698  loss_rpn_cls: 0.001751  loss_rpn_loc: 0.01653  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:12:06] d2.utils.events INFO:  eta: 3:52:18  iter: 15379  total_loss: 0.2227  loss_cls: 0.04765  loss_box_reg: 0.1543  loss_rpn_cls: 0.001113  loss_rpn_loc: 0.01641  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:12:24] d2.utils.events INFO:  eta: 3:51:53  iter: 15399  total_loss: 0.2524  loss_cls: 0.05725  loss_box_reg: 0.1703  loss_rpn_cls: 0.001756  loss_rpn_loc: 0.01768  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:12:41] d2.utils.events INFO:  eta: 3:51:45  iter: 15419  total_loss: 0.2591  loss_cls: 0.04873  loss_box_reg: 0.1814  loss_rpn_cls: 0.001207  loss_rpn_loc: 0.0182  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:12:59] d2.utils.events INFO:  eta: 3:51:24  iter: 15439  total_loss: 0.2425  loss_cls: 0.04689  loss_box_reg: 0.1663  loss_rpn_cls: 0.001407  loss_rpn_loc: 0.01796  time: 0.8857  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:13:17] d2.utils.events INFO:  eta: 3:51:09  iter: 15459  total_loss: 0.2687  loss_cls: 0.07004  loss_box_reg: 0.1763  loss_rpn_cls: 0.001067  loss_rpn_loc: 0.02104  time: 0.8857  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:13:34] d2.utils.events INFO:  eta: 3:50:52  iter: 15479  total_loss: 0.2569  loss_cls: 0.05046  loss_box_reg: 0.1765  loss_rpn_cls: 0.00107  loss_rpn_loc: 0.02089  time: 0.8857  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:13:52] d2.utils.events INFO:  eta: 3:50:31  iter: 15499  total_loss: 0.2548  loss_cls: 0.05877  loss_box_reg: 0.1661  loss_rpn_cls: 0.001367  loss_rpn_loc: 0.01895  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:14:09] d2.utils.events INFO:  eta: 3:50:19  iter: 15519  total_loss: 0.2398  loss_cls: 0.0483  loss_box_reg: 0.1535  loss_rpn_cls: 0.001205  loss_rpn_loc: 0.0182  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:14:27] d2.utils.events INFO:  eta: 3:50:01  iter: 15539  total_loss: 0.2068  loss_cls: 0.05089  loss_box_reg: 0.1382  loss_rpn_cls: 0.001006  loss_rpn_loc: 0.01753  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:14:44] d2.utils.events INFO:  eta: 3:49:34  iter: 15559  total_loss: 0.2784  loss_cls: 0.05952  loss_box_reg: 0.1851  loss_rpn_cls: 0.002834  loss_rpn_loc: 0.02289  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:15:02] d2.utils.events INFO:  eta: 3:49:14  iter: 15579  total_loss: 0.2446  loss_cls: 0.05454  loss_box_reg: 0.1672  loss_rpn_cls: 0.0006033  loss_rpn_loc: 0.01512  time: 0.8856  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:15:20] d2.utils.events INFO:  eta: 3:48:46  iter: 15599  total_loss: 0.2619  loss_cls: 0.05934  loss_box_reg: 0.1804  loss_rpn_cls: 0.0009175  loss_rpn_loc: 0.01636  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:15:37] d2.utils.events INFO:  eta: 3:48:35  iter: 15619  total_loss: 0.2414  loss_cls: 0.05732  loss_box_reg: 0.1607  loss_rpn_cls: 0.0008511  loss_rpn_loc: 0.01518  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:15:55] d2.utils.events INFO:  eta: 3:48:20  iter: 15639  total_loss: 0.1817  loss_cls: 0.03836  loss_box_reg: 0.1293  loss_rpn_cls: 0.0009602  loss_rpn_loc: 0.01415  time: 0.8856  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:16:13] d2.utils.events INFO:  eta: 3:48:02  iter: 15659  total_loss: 0.244  loss_cls: 0.05129  loss_box_reg: 0.175  loss_rpn_cls: 0.001239  loss_rpn_loc: 0.01387  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:16:31] d2.utils.events INFO:  eta: 3:47:43  iter: 15679  total_loss: 0.2408  loss_cls: 0.0587  loss_box_reg: 0.1587  loss_rpn_cls: 0.001783  loss_rpn_loc: 0.02164  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:16:49] d2.utils.events INFO:  eta: 3:47:39  iter: 15699  total_loss: 0.2104  loss_cls: 0.04467  loss_box_reg: 0.1508  loss_rpn_cls: 0.001048  loss_rpn_loc: 0.01537  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:17:07] d2.utils.events INFO:  eta: 3:47:24  iter: 15719  total_loss: 0.1921  loss_cls: 0.04128  loss_box_reg: 0.1455  loss_rpn_cls: 0.000686  loss_rpn_loc: 0.01512  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:17:24] d2.utils.events INFO:  eta: 3:47:11  iter: 15739  total_loss: 0.2219  loss_cls: 0.04237  loss_box_reg: 0.1683  loss_rpn_cls: 0.001544  loss_rpn_loc: 0.01497  time: 0.8856  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:17:42] d2.utils.events INFO:  eta: 3:46:48  iter: 15759  total_loss: 0.2241  loss_cls: 0.04821  loss_box_reg: 0.153  loss_rpn_cls: 0.001002  loss_rpn_loc: 0.01755  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:17:59] d2.utils.events INFO:  eta: 3:46:24  iter: 15779  total_loss: 0.2055  loss_cls: 0.04829  loss_box_reg: 0.1407  loss_rpn_cls: 0.001208  loss_rpn_loc: 0.02072  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:18:18] d2.utils.events INFO:  eta: 3:46:05  iter: 15799  total_loss: 0.208  loss_cls: 0.04426  loss_box_reg: 0.1482  loss_rpn_cls: 0.001066  loss_rpn_loc: 0.01734  time: 0.8856  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:18:35] d2.utils.events INFO:  eta: 3:45:38  iter: 15819  total_loss: 0.2282  loss_cls: 0.04732  loss_box_reg: 0.149  loss_rpn_cls: 0.001147  loss_rpn_loc: 0.01845  time: 0.8856  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:18:52] d2.utils.events INFO:  eta: 3:45:17  iter: 15839  total_loss: 0.2228  loss_cls: 0.05204  loss_box_reg: 0.1486  loss_rpn_cls: 0.0007761  loss_rpn_loc: 0.01763  time: 0.8856  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:19:09] d2.utils.events INFO:  eta: 3:44:52  iter: 15859  total_loss: 0.2449  loss_cls: 0.05457  loss_box_reg: 0.1659  loss_rpn_cls: 0.001402  loss_rpn_loc: 0.01715  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:19:27] d2.utils.events INFO:  eta: 3:44:30  iter: 15879  total_loss: 0.271  loss_cls: 0.06754  loss_box_reg: 0.1625  loss_rpn_cls: 0.001636  loss_rpn_loc: 0.0206  time: 0.8855  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:19:45] d2.utils.events INFO:  eta: 3:44:14  iter: 15899  total_loss: 0.2476  loss_cls: 0.05207  loss_box_reg: 0.1692  loss_rpn_cls: 0.001698  loss_rpn_loc: 0.02111  time: 0.8855  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 09:20:02] d2.utils.events INFO:  eta: 3:43:43  iter: 15919  total_loss: 0.2266  loss_cls: 0.05032  loss_box_reg: 0.1558  loss_rpn_cls: 0.0015  loss_rpn_loc: 0.0179  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:20:19] d2.utils.events INFO:  eta: 3:43:25  iter: 15939  total_loss: 0.2209  loss_cls: 0.05774  loss_box_reg: 0.1445  loss_rpn_cls: 0.0006063  loss_rpn_loc: 0.01798  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:20:37] d2.utils.events INFO:  eta: 3:43:20  iter: 15959  total_loss: 0.2401  loss_cls: 0.05479  loss_box_reg: 0.1522  loss_rpn_cls: 0.001163  loss_rpn_loc: 0.02316  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:20:55] d2.utils.events INFO:  eta: 3:43:19  iter: 15979  total_loss: 0.1863  loss_cls: 0.04312  loss_box_reg: 0.1194  loss_rpn_cls: 0.0008802  loss_rpn_loc: 0.01686  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:21:14] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 09:21:14] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 09:21:14] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 09:21:14] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 09:21:14] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 09:21:15] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:01:04
[04/03 09:21:20] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:59
[04/03 09:21:25] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:54
[04/03 09:21:31] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:49
[04/03 09:21:36] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:44
[04/03 09:21:41] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:39
[04/03 09:21:46] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 09:21:51] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 09:21:56] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 09:22:01] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 09:22:06] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 09:22:11] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:09
[04/03 09:22:16] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:03
[04/03 09:22:20] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.469333 (0.120570 s / iter per device, on 1 devices)
[04/03 09:22:20] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119231 s / iter per device, on 1 devices)
[04/03 09:22:20] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 09:22:20] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 09:22:20] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 09:22:20] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 09:22:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 09:22:21] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 09:22:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.428 | 11.836 | 6.190  | 2.287 | 13.157 | 14.211 |
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 09:22:21] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.309  | people          | 3.609  | bicycle    | 2.470 |
| car        | 33.806 | van             | 14.700 | truck      | 0.000 |
| tricycle   | 3.228  | awning-tricycle | 0.807  | bus        | 0.000 |
| motor      | 5.734  | others          | 0.048  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 09:22:21] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 09:22:21] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 09:22:21] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 09:22:21] d2.evaluation.testing INFO: copypaste: 6.4281,11.8361,6.1902,2.2866,13.1569,14.2106,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 09:22:21] d2.utils.events INFO:  eta: 3:43:14  iter: 15999  total_loss: 0.2225  loss_cls: 0.05332  loss_box_reg: 0.1502  loss_rpn_cls: 0.0008688  loss_rpn_loc: 0.01718  time: 0.8855  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:22:38] d2.utils.events INFO:  eta: 3:42:32  iter: 16019  total_loss: 0.2583  loss_cls: 0.05825  loss_box_reg: 0.1738  loss_rpn_cls: 0.0006645  loss_rpn_loc: 0.01608  time: 0.8855  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:22:57] d2.utils.events INFO:  eta: 3:42:12  iter: 16039  total_loss: 0.2268  loss_cls: 0.05442  loss_box_reg: 0.1496  loss_rpn_cls: 0.00107  loss_rpn_loc: 0.01309  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:23:14] d2.utils.events INFO:  eta: 3:41:56  iter: 16059  total_loss: 0.2003  loss_cls: 0.0468  loss_box_reg: 0.1397  loss_rpn_cls: 0.0007135  loss_rpn_loc: 0.01693  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:23:32] d2.utils.events INFO:  eta: 3:41:36  iter: 16079  total_loss: 0.2218  loss_cls: 0.05185  loss_box_reg: 0.1455  loss_rpn_cls: 0.001088  loss_rpn_loc: 0.01832  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:23:50] d2.utils.events INFO:  eta: 3:41:14  iter: 16099  total_loss: 0.2843  loss_cls: 0.06731  loss_box_reg: 0.1864  loss_rpn_cls: 0.001227  loss_rpn_loc: 0.02235  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:24:07] d2.utils.events INFO:  eta: 3:40:43  iter: 16119  total_loss: 0.2553  loss_cls: 0.05116  loss_box_reg: 0.1741  loss_rpn_cls: 0.002248  loss_rpn_loc: 0.02222  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:24:25] d2.utils.events INFO:  eta: 3:40:25  iter: 16139  total_loss: 0.202  loss_cls: 0.0429  loss_box_reg: 0.1412  loss_rpn_cls: 0.001008  loss_rpn_loc: 0.01587  time: 0.8855  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:24:42] d2.utils.events INFO:  eta: 3:39:39  iter: 16159  total_loss: 0.2088  loss_cls: 0.04335  loss_box_reg: 0.1403  loss_rpn_cls: 0.0008539  loss_rpn_loc: 0.01453  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:25:00] d2.utils.events INFO:  eta: 3:39:28  iter: 16179  total_loss: 0.2444  loss_cls: 0.06523  loss_box_reg: 0.1548  loss_rpn_cls: 0.002466  loss_rpn_loc: 0.02302  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:25:17] d2.utils.events INFO:  eta: 3:38:56  iter: 16199  total_loss: 0.2108  loss_cls: 0.04682  loss_box_reg: 0.1432  loss_rpn_cls: 0.001385  loss_rpn_loc: 0.01875  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:25:35] d2.utils.events INFO:  eta: 3:38:45  iter: 16219  total_loss: 0.2061  loss_cls: 0.03985  loss_box_reg: 0.1393  loss_rpn_cls: 0.0008591  loss_rpn_loc: 0.01689  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:25:53] d2.utils.events INFO:  eta: 3:38:29  iter: 16239  total_loss: 0.2425  loss_cls: 0.06208  loss_box_reg: 0.1615  loss_rpn_cls: 0.001725  loss_rpn_loc: 0.01762  time: 0.8854  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:26:11] d2.utils.events INFO:  eta: 3:38:17  iter: 16259  total_loss: 0.2346  loss_cls: 0.04638  loss_box_reg: 0.1689  loss_rpn_cls: 0.0009328  loss_rpn_loc: 0.01428  time: 0.8855  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:26:29] d2.utils.events INFO:  eta: 3:37:54  iter: 16279  total_loss: 0.2431  loss_cls: 0.05858  loss_box_reg: 0.1731  loss_rpn_cls: 0.001618  loss_rpn_loc: 0.01811  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:26:46] d2.utils.events INFO:  eta: 3:37:35  iter: 16299  total_loss: 0.1764  loss_cls: 0.04456  loss_box_reg: 0.1243  loss_rpn_cls: 0.0008346  loss_rpn_loc: 0.01597  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:27:04] d2.utils.events INFO:  eta: 3:37:18  iter: 16319  total_loss: 0.2068  loss_cls: 0.04344  loss_box_reg: 0.1414  loss_rpn_cls: 0.0006195  loss_rpn_loc: 0.01766  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:27:22] d2.utils.events INFO:  eta: 3:36:55  iter: 16339  total_loss: 0.1996  loss_cls: 0.05092  loss_box_reg: 0.1467  loss_rpn_cls: 0.0008746  loss_rpn_loc: 0.01723  time: 0.8854  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:27:40] d2.utils.events INFO:  eta: 3:36:37  iter: 16359  total_loss: 0.2154  loss_cls: 0.05058  loss_box_reg: 0.1408  loss_rpn_cls: 0.001593  loss_rpn_loc: 0.02331  time: 0.8854  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:27:57] d2.utils.events INFO:  eta: 3:36:24  iter: 16379  total_loss: 0.2303  loss_cls: 0.05106  loss_box_reg: 0.163  loss_rpn_cls: 0.001384  loss_rpn_loc: 0.01789  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:28:14] d2.utils.events INFO:  eta: 3:36:02  iter: 16399  total_loss: 0.1844  loss_cls: 0.04003  loss_box_reg: 0.1197  loss_rpn_cls: 0.0004611  loss_rpn_loc: 0.01233  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:28:32] d2.utils.events INFO:  eta: 3:35:42  iter: 16419  total_loss: 0.2116  loss_cls: 0.0571  loss_box_reg: 0.1301  loss_rpn_cls: 0.001163  loss_rpn_loc: 0.01227  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:28:49] d2.utils.events INFO:  eta: 3:35:22  iter: 16439  total_loss: 0.2277  loss_cls: 0.05742  loss_box_reg: 0.1512  loss_rpn_cls: 0.000796  loss_rpn_loc: 0.01952  time: 0.8854  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:29:06] d2.utils.events INFO:  eta: 3:34:56  iter: 16459  total_loss: 0.2367  loss_cls: 0.05097  loss_box_reg: 0.1567  loss_rpn_cls: 0.001626  loss_rpn_loc: 0.02126  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:29:24] d2.utils.events INFO:  eta: 3:34:35  iter: 16479  total_loss: 0.2025  loss_cls: 0.04267  loss_box_reg: 0.1387  loss_rpn_cls: 0.0005943  loss_rpn_loc: 0.01502  time: 0.8853  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:29:42] d2.utils.events INFO:  eta: 3:34:20  iter: 16499  total_loss: 0.2274  loss_cls: 0.05393  loss_box_reg: 0.1444  loss_rpn_cls: 0.001054  loss_rpn_loc: 0.02058  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:29:59] d2.utils.events INFO:  eta: 3:33:54  iter: 16519  total_loss: 0.2133  loss_cls: 0.04256  loss_box_reg: 0.1397  loss_rpn_cls: 0.001259  loss_rpn_loc: 0.01918  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:30:17] d2.utils.events INFO:  eta: 3:33:42  iter: 16539  total_loss: 0.18  loss_cls: 0.03883  loss_box_reg: 0.1272  loss_rpn_cls: 0.0008087  loss_rpn_loc: 0.01494  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:30:35] d2.utils.events INFO:  eta: 3:33:41  iter: 16559  total_loss: 0.1848  loss_cls: 0.03867  loss_box_reg: 0.127  loss_rpn_cls: 0.000751  loss_rpn_loc: 0.01421  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:30:52] d2.utils.events INFO:  eta: 3:33:20  iter: 16579  total_loss: 0.2236  loss_cls: 0.03786  loss_box_reg: 0.156  loss_rpn_cls: 0.001312  loss_rpn_loc: 0.01933  time: 0.8853  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:31:09] d2.utils.events INFO:  eta: 3:33:03  iter: 16599  total_loss: 0.2401  loss_cls: 0.05561  loss_box_reg: 0.1535  loss_rpn_cls: 0.0007742  loss_rpn_loc: 0.01847  time: 0.8853  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:31:26] d2.utils.events INFO:  eta: 3:32:45  iter: 16619  total_loss: 0.2375  loss_cls: 0.05393  loss_box_reg: 0.1574  loss_rpn_cls: 0.001076  loss_rpn_loc: 0.01783  time: 0.8852  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:31:44] d2.utils.events INFO:  eta: 3:32:27  iter: 16639  total_loss: 0.2491  loss_cls: 0.06457  loss_box_reg: 0.1621  loss_rpn_cls: 0.001645  loss_rpn_loc: 0.02417  time: 0.8852  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:32:02] d2.utils.events INFO:  eta: 3:32:02  iter: 16659  total_loss: 0.2492  loss_cls: 0.0666  loss_box_reg: 0.163  loss_rpn_cls: 0.001809  loss_rpn_loc: 0.02096  time: 0.8852  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:32:20] d2.utils.events INFO:  eta: 3:31:51  iter: 16679  total_loss: 0.1901  loss_cls: 0.04125  loss_box_reg: 0.1375  loss_rpn_cls: 0.0004318  loss_rpn_loc: 0.01326  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:32:37] d2.utils.events INFO:  eta: 3:31:23  iter: 16699  total_loss: 0.1828  loss_cls: 0.04438  loss_box_reg: 0.1302  loss_rpn_cls: 0.001007  loss_rpn_loc: 0.01493  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:32:54] d2.utils.events INFO:  eta: 3:30:56  iter: 16719  total_loss: 0.2056  loss_cls: 0.04653  loss_box_reg: 0.1365  loss_rpn_cls: 0.0008313  loss_rpn_loc: 0.01469  time: 0.8852  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:33:11] d2.utils.events INFO:  eta: 3:30:33  iter: 16739  total_loss: 0.2397  loss_cls: 0.05238  loss_box_reg: 0.1515  loss_rpn_cls: 0.001053  loss_rpn_loc: 0.01714  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:33:29] d2.utils.events INFO:  eta: 3:30:10  iter: 16759  total_loss: 0.2285  loss_cls: 0.05484  loss_box_reg: 0.1495  loss_rpn_cls: 0.00102  loss_rpn_loc: 0.0214  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:33:47] d2.utils.events INFO:  eta: 3:30:10  iter: 16779  total_loss: 0.2087  loss_cls: 0.05047  loss_box_reg: 0.1421  loss_rpn_cls: 0.001166  loss_rpn_loc: 0.01755  time: 0.8851  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:34:04] d2.utils.events INFO:  eta: 3:29:30  iter: 16799  total_loss: 0.256  loss_cls: 0.05462  loss_box_reg: 0.1861  loss_rpn_cls: 0.001785  loss_rpn_loc: 0.01942  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:34:22] d2.utils.events INFO:  eta: 3:29:17  iter: 16819  total_loss: 0.2338  loss_cls: 0.04991  loss_box_reg: 0.1498  loss_rpn_cls: 0.0005804  loss_rpn_loc: 0.01797  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:34:40] d2.utils.events INFO:  eta: 3:29:01  iter: 16839  total_loss: 0.2174  loss_cls: 0.04497  loss_box_reg: 0.1415  loss_rpn_cls: 0.001075  loss_rpn_loc: 0.01679  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:34:57] d2.utils.events INFO:  eta: 3:28:43  iter: 16859  total_loss: 0.1988  loss_cls: 0.04704  loss_box_reg: 0.1483  loss_rpn_cls: 0.001085  loss_rpn_loc: 0.01443  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:35:15] d2.utils.events INFO:  eta: 3:28:27  iter: 16879  total_loss: 0.2356  loss_cls: 0.0495  loss_box_reg: 0.163  loss_rpn_cls: 0.0007091  loss_rpn_loc: 0.01878  time: 0.8851  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:35:32] d2.utils.events INFO:  eta: 3:27:57  iter: 16899  total_loss: 0.2246  loss_cls: 0.04827  loss_box_reg: 0.1538  loss_rpn_cls: 0.001137  loss_rpn_loc: 0.01739  time: 0.8850  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:35:50] d2.utils.events INFO:  eta: 3:27:40  iter: 16919  total_loss: 0.1806  loss_cls: 0.0363  loss_box_reg: 0.1349  loss_rpn_cls: 0.0006981  loss_rpn_loc: 0.01512  time: 0.8850  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:36:07] d2.utils.events INFO:  eta: 3:27:22  iter: 16939  total_loss: 0.2238  loss_cls: 0.04069  loss_box_reg: 0.157  loss_rpn_cls: 0.001327  loss_rpn_loc: 0.01435  time: 0.8850  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:36:25] d2.utils.events INFO:  eta: 3:27:02  iter: 16959  total_loss: 0.2246  loss_cls: 0.05861  loss_box_reg: 0.1485  loss_rpn_cls: 0.0007579  loss_rpn_loc: 0.01781  time: 0.8850  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:36:42] d2.utils.events INFO:  eta: 3:26:26  iter: 16979  total_loss: 0.223  loss_cls: 0.0589  loss_box_reg: 0.1545  loss_rpn_cls: 0.001257  loss_rpn_loc: 0.0188  time: 0.8850  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:37:00] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 09:37:00] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 09:37:00] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 09:37:00] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 09:37:01] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 09:37:02] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1178 s/iter. Eval: 0.0001 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 09:37:07] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:58
[04/03 09:37:12] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:53
[04/03 09:37:17] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:00:49
[04/03 09:37:22] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:00:44
[04/03 09:37:27] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:00:39
[04/03 09:37:32] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:00:34
[04/03 09:37:37] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:00:29
[04/03 09:37:42] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:00:24
[04/03 09:37:47] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1183 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:00:19
[04/03 09:37:52] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1184 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:13
[04/03 09:37:57] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1184 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:08
[04/03 09:38:02] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:03
[04/03 09:38:06] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.055978 (0.119808 s / iter per device, on 1 devices)
[04/03 09:38:06] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118467 s / iter per device, on 1 devices)
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 09:38:07] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 09:38:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 09:38:07] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 09:38:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.578 | 12.062 | 6.317  | 2.408 | 13.339 | 14.183 |
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 09:38:07] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.506  | people          | 3.635  | bicycle    | 2.909 |
| car        | 34.943 | van             | 13.471 | truck      | 0.000 |
| tricycle   | 3.654  | awning-tricycle | 1.029  | bus        | 0.000 |
| motor      | 6.109  | others          | 0.102  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 09:38:07] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 09:38:07] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 09:38:07] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 09:38:07] d2.evaluation.testing INFO: copypaste: 6.5779,12.0623,6.3175,2.4084,13.3389,14.1835,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 09:38:07] d2.utils.events INFO:  eta: 3:26:04  iter: 16999  total_loss: 0.1767  loss_cls: 0.03822  loss_box_reg: 0.1205  loss_rpn_cls: 0.0003794  loss_rpn_loc: 0.01214  time: 0.8850  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:38:25] d2.utils.events INFO:  eta: 3:25:51  iter: 17019  total_loss: 0.2267  loss_cls: 0.05263  loss_box_reg: 0.1392  loss_rpn_cls: 0.001387  loss_rpn_loc: 0.01812  time: 0.8850  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 09:38:42] d2.utils.events INFO:  eta: 3:25:33  iter: 17039  total_loss: 0.2114  loss_cls: 0.04582  loss_box_reg: 0.1394  loss_rpn_cls: 0.002071  loss_rpn_loc: 0.02034  time: 0.8850  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:38:59] d2.utils.events INFO:  eta: 3:25:02  iter: 17059  total_loss: 0.2451  loss_cls: 0.05328  loss_box_reg: 0.1724  loss_rpn_cls: 0.001082  loss_rpn_loc: 0.01568  time: 0.8849  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:39:17] d2.utils.events INFO:  eta: 3:24:45  iter: 17079  total_loss: 0.2273  loss_cls: 0.05258  loss_box_reg: 0.1606  loss_rpn_cls: 0.0006694  loss_rpn_loc: 0.01769  time: 0.8849  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:39:34] d2.utils.events INFO:  eta: 3:24:19  iter: 17099  total_loss: 0.2118  loss_cls: 0.04228  loss_box_reg: 0.1463  loss_rpn_cls: 0.001146  loss_rpn_loc: 0.01626  time: 0.8849  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:39:52] d2.utils.events INFO:  eta: 3:24:06  iter: 17119  total_loss: 0.2484  loss_cls: 0.06227  loss_box_reg: 0.157  loss_rpn_cls: 0.001092  loss_rpn_loc: 0.02312  time: 0.8849  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:40:09] d2.utils.events INFO:  eta: 3:23:44  iter: 17139  total_loss: 0.2075  loss_cls: 0.04901  loss_box_reg: 0.1331  loss_rpn_cls: 0.0006838  loss_rpn_loc: 0.01282  time: 0.8849  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:40:26] d2.utils.events INFO:  eta: 3:23:22  iter: 17159  total_loss: 0.195  loss_cls: 0.04444  loss_box_reg: 0.1402  loss_rpn_cls: 0.001543  loss_rpn_loc: 0.01098  time: 0.8848  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:40:43] d2.utils.events INFO:  eta: 3:22:47  iter: 17179  total_loss: 0.2612  loss_cls: 0.05604  loss_box_reg: 0.1729  loss_rpn_cls: 0.001658  loss_rpn_loc: 0.02003  time: 0.8848  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:41:01] d2.utils.events INFO:  eta: 3:22:51  iter: 17199  total_loss: 0.2023  loss_cls: 0.05007  loss_box_reg: 0.1397  loss_rpn_cls: 0.0008318  loss_rpn_loc: 0.01729  time: 0.8848  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:41:18] d2.utils.events INFO:  eta: 3:22:11  iter: 17219  total_loss: 0.2713  loss_cls: 0.06139  loss_box_reg: 0.1837  loss_rpn_cls: 0.0008837  loss_rpn_loc: 0.02317  time: 0.8848  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:41:35] d2.utils.events INFO:  eta: 3:21:38  iter: 17239  total_loss: 0.2117  loss_cls: 0.04196  loss_box_reg: 0.1545  loss_rpn_cls: 0.001073  loss_rpn_loc: 0.01494  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:41:52] d2.utils.events INFO:  eta: 3:21:06  iter: 17259  total_loss: 0.1876  loss_cls: 0.03825  loss_box_reg: 0.1315  loss_rpn_cls: 0.000999  loss_rpn_loc: 0.01447  time: 0.8847  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:42:10] d2.utils.events INFO:  eta: 3:20:15  iter: 17279  total_loss: 0.2293  loss_cls: 0.04654  loss_box_reg: 0.1583  loss_rpn_cls: 0.0009951  loss_rpn_loc: 0.01367  time: 0.8847  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:42:28] d2.utils.events INFO:  eta: 3:19:51  iter: 17299  total_loss: 0.2037  loss_cls: 0.05392  loss_box_reg: 0.1398  loss_rpn_cls: 0.001336  loss_rpn_loc: 0.0146  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:42:46] d2.utils.events INFO:  eta: 3:20:03  iter: 17319  total_loss: 0.2289  loss_cls: 0.05588  loss_box_reg: 0.1515  loss_rpn_cls: 0.0007562  loss_rpn_loc: 0.01758  time: 0.8847  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:43:04] d2.utils.events INFO:  eta: 3:19:56  iter: 17339  total_loss: 0.1973  loss_cls: 0.04215  loss_box_reg: 0.1441  loss_rpn_cls: 0.001405  loss_rpn_loc: 0.01412  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:43:22] d2.utils.events INFO:  eta: 3:19:38  iter: 17359  total_loss: 0.2345  loss_cls: 0.05435  loss_box_reg: 0.1547  loss_rpn_cls: 0.001992  loss_rpn_loc: 0.01777  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:43:39] d2.utils.events INFO:  eta: 3:19:00  iter: 17379  total_loss: 0.1732  loss_cls: 0.03757  loss_box_reg: 0.1224  loss_rpn_cls: 0.001116  loss_rpn_loc: 0.01767  time: 0.8847  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 09:43:57] d2.utils.events INFO:  eta: 3:19:03  iter: 17399  total_loss: 0.2054  loss_cls: 0.04476  loss_box_reg: 0.1477  loss_rpn_cls: 0.0007896  loss_rpn_loc: 0.01451  time: 0.8847  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:44:15] d2.utils.events INFO:  eta: 3:18:46  iter: 17419  total_loss: 0.2251  loss_cls: 0.04821  loss_box_reg: 0.1499  loss_rpn_cls: 0.0005946  loss_rpn_loc: 0.01724  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:44:32] d2.utils.events INFO:  eta: 3:18:35  iter: 17439  total_loss: 0.2205  loss_cls: 0.04795  loss_box_reg: 0.1472  loss_rpn_cls: 0.0007428  loss_rpn_loc: 0.0152  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:44:50] d2.utils.events INFO:  eta: 3:18:27  iter: 17459  total_loss: 0.2443  loss_cls: 0.05471  loss_box_reg: 0.1632  loss_rpn_cls: 0.0009337  loss_rpn_loc: 0.01658  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:45:08] d2.utils.events INFO:  eta: 3:18:19  iter: 17479  total_loss: 0.1697  loss_cls: 0.03164  loss_box_reg: 0.1175  loss_rpn_cls: 0.000515  loss_rpn_loc: 0.01357  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:45:26] d2.utils.events INFO:  eta: 3:17:51  iter: 17499  total_loss: 0.2002  loss_cls: 0.03878  loss_box_reg: 0.1349  loss_rpn_cls: 0.0005912  loss_rpn_loc: 0.01588  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:45:43] d2.utils.events INFO:  eta: 3:17:40  iter: 17519  total_loss: 0.213  loss_cls: 0.05179  loss_box_reg: 0.1541  loss_rpn_cls: 0.001509  loss_rpn_loc: 0.01597  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:46:01] d2.utils.events INFO:  eta: 3:17:22  iter: 17539  total_loss: 0.2335  loss_cls: 0.05453  loss_box_reg: 0.162  loss_rpn_cls: 0.00091  loss_rpn_loc: 0.01759  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:46:19] d2.utils.events INFO:  eta: 3:17:05  iter: 17559  total_loss: 0.2037  loss_cls: 0.05151  loss_box_reg: 0.1345  loss_rpn_cls: 0.001203  loss_rpn_loc: 0.01657  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:46:37] d2.utils.events INFO:  eta: 3:16:58  iter: 17579  total_loss: 0.2115  loss_cls: 0.04886  loss_box_reg: 0.1333  loss_rpn_cls: 0.0009359  loss_rpn_loc: 0.01451  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:46:55] d2.utils.events INFO:  eta: 3:17:01  iter: 17599  total_loss: 0.2224  loss_cls: 0.05392  loss_box_reg: 0.1449  loss_rpn_cls: 0.001186  loss_rpn_loc: 0.01859  time: 0.8848  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:47:13] d2.utils.events INFO:  eta: 3:16:44  iter: 17619  total_loss: 0.2323  loss_cls: 0.05398  loss_box_reg: 0.1446  loss_rpn_cls: 0.000874  loss_rpn_loc: 0.0203  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:47:30] d2.utils.events INFO:  eta: 3:16:05  iter: 17639  total_loss: 0.2019  loss_cls: 0.04607  loss_box_reg: 0.1361  loss_rpn_cls: 0.0008999  loss_rpn_loc: 0.01567  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:47:48] d2.utils.events INFO:  eta: 3:16:01  iter: 17659  total_loss: 0.2216  loss_cls: 0.05056  loss_box_reg: 0.1487  loss_rpn_cls: 0.001091  loss_rpn_loc: 0.0219  time: 0.8847  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 09:48:05] d2.utils.events INFO:  eta: 3:15:30  iter: 17679  total_loss: 0.2232  loss_cls: 0.04991  loss_box_reg: 0.1509  loss_rpn_cls: 0.0009459  loss_rpn_loc: 0.02115  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:48:23] d2.utils.events INFO:  eta: 3:15:26  iter: 17699  total_loss: 0.1935  loss_cls: 0.03837  loss_box_reg: 0.1441  loss_rpn_cls: 0.0005161  loss_rpn_loc: 0.01497  time: 0.8847  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:48:40] d2.utils.events INFO:  eta: 3:15:09  iter: 17719  total_loss: 0.1988  loss_cls: 0.04251  loss_box_reg: 0.1272  loss_rpn_cls: 0.0007661  loss_rpn_loc: 0.01754  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:48:58] d2.utils.events INFO:  eta: 3:15:08  iter: 17739  total_loss: 0.2074  loss_cls: 0.04325  loss_box_reg: 0.1389  loss_rpn_cls: 0.0008807  loss_rpn_loc: 0.01508  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:49:15] d2.utils.events INFO:  eta: 3:14:50  iter: 17759  total_loss: 0.2223  loss_cls: 0.05253  loss_box_reg: 0.1457  loss_rpn_cls: 0.001155  loss_rpn_loc: 0.02016  time: 0.8846  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:49:33] d2.utils.events INFO:  eta: 3:14:21  iter: 17779  total_loss: 0.1981  loss_cls: 0.04122  loss_box_reg: 0.1337  loss_rpn_cls: 0.001248  loss_rpn_loc: 0.0176  time: 0.8847  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:49:51] d2.utils.events INFO:  eta: 3:14:05  iter: 17799  total_loss: 0.213  loss_cls: 0.04403  loss_box_reg: 0.1436  loss_rpn_cls: 0.001078  loss_rpn_loc: 0.01585  time: 0.8847  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:50:08] d2.utils.events INFO:  eta: 3:13:40  iter: 17819  total_loss: 0.2099  loss_cls: 0.04986  loss_box_reg: 0.1404  loss_rpn_cls: 0.0006075  loss_rpn_loc: 0.01621  time: 0.8846  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:50:25] d2.utils.events INFO:  eta: 3:13:06  iter: 17839  total_loss: 0.1968  loss_cls: 0.04332  loss_box_reg: 0.1357  loss_rpn_cls: 0.0008051  loss_rpn_loc: 0.01625  time: 0.8846  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:50:42] d2.utils.events INFO:  eta: 3:12:51  iter: 17859  total_loss: 0.1865  loss_cls: 0.04074  loss_box_reg: 0.135  loss_rpn_cls: 0.0004936  loss_rpn_loc: 0.01634  time: 0.8846  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:51:00] d2.utils.events INFO:  eta: 3:12:30  iter: 17879  total_loss: 0.2168  loss_cls: 0.04136  loss_box_reg: 0.1558  loss_rpn_cls: 0.0008751  loss_rpn_loc: 0.01719  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:51:17] d2.utils.events INFO:  eta: 3:12:30  iter: 17899  total_loss: 0.2474  loss_cls: 0.05777  loss_box_reg: 0.1564  loss_rpn_cls: 0.0009266  loss_rpn_loc: 0.02254  time: 0.8845  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:51:34] d2.utils.events INFO:  eta: 3:12:04  iter: 17919  total_loss: 0.2216  loss_cls: 0.05175  loss_box_reg: 0.1602  loss_rpn_cls: 0.001002  loss_rpn_loc: 0.01697  time: 0.8845  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:51:51] d2.utils.events INFO:  eta: 3:11:47  iter: 17939  total_loss: 0.1952  loss_cls: 0.04842  loss_box_reg: 0.1254  loss_rpn_cls: 0.001597  loss_rpn_loc: 0.01652  time: 0.8845  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:52:09] d2.utils.events INFO:  eta: 3:11:42  iter: 17959  total_loss: 0.1787  loss_cls: 0.04025  loss_box_reg: 0.1303  loss_rpn_cls: 0.0009265  loss_rpn_loc: 0.01585  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:52:27] d2.utils.events INFO:  eta: 3:11:30  iter: 17979  total_loss: 0.2093  loss_cls: 0.04101  loss_box_reg: 0.1469  loss_rpn_cls: 0.001244  loss_rpn_loc: 0.01785  time: 0.8845  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:52:44] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 09:52:44] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 09:52:44] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 09:52:44] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 09:52:44] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 09:52:46] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1175 s/iter. Eval: 0.0002 s/iter. Total: 0.1184 s/iter. ETA=0:01:03
[04/03 09:52:51] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1195 s/iter. ETA=0:00:59
[04/03 09:52:56] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1194 s/iter. ETA=0:00:54
[04/03 09:53:01] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0010 s/iter. Inference: 0.1182 s/iter. Eval: 0.0014 s/iter. Total: 0.1206 s/iter. ETA=0:00:49
[04/03 09:53:06] d2.evaluation.evaluator INFO: Inference done 178/548. Dataloading: 0.0010 s/iter. Inference: 0.1183 s/iter. Eval: 0.0011 s/iter. Total: 0.1204 s/iter. ETA=0:00:44
[04/03 09:53:11] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1182 s/iter. Eval: 0.0009 s/iter. Total: 0.1201 s/iter. ETA=0:00:39
[04/03 09:53:16] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0008 s/iter. Total: 0.1201 s/iter. ETA=0:00:34
[04/03 09:53:21] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0007 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 09:53:26] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0006 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 09:53:31] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0006 s/iter. Total: 0.1199 s/iter. ETA=0:00:19
[04/03 09:53:36] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0006 s/iter. Total: 0.1199 s/iter. ETA=0:00:14
[04/03 09:53:41] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1183 s/iter. Eval: 0.0005 s/iter. Total: 0.1198 s/iter. ETA=0:00:08
[04/03 09:53:46] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1184 s/iter. Eval: 0.0005 s/iter. Total: 0.1198 s/iter. ETA=0:00:03
[04/03 09:53:50] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.163556 (0.120007 s / iter per device, on 1 devices)
[04/03 09:53:50] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118381 s / iter per device, on 1 devices)
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 09:53:51] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 09:53:51] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.51 seconds.
[04/03 09:53:51] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 09:53:51] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.360 | 11.713 | 6.029  | 2.473 | 13.067 | 12.524 |
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 09:53:51] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.418  | people          | 4.583  | bicycle    | 2.697 |
| car        | 35.127 | van             | 11.551 | truck      | 0.000 |
| tricycle   | 2.639  | awning-tricycle | 0.310  | bus        | 0.000 |
| motor      | 5.634  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 09:53:51] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 09:53:51] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 09:53:51] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 09:53:51] d2.evaluation.testing INFO: copypaste: 6.3600,11.7133,6.0287,2.4734,13.0669,12.5239,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 09:53:51] d2.utils.events INFO:  eta: 3:10:54  iter: 17999  total_loss: 0.2338  loss_cls: 0.05739  loss_box_reg: 0.1559  loss_rpn_cls: 0.001529  loss_rpn_loc: 0.01677  time: 0.8844  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:54:09] d2.utils.events INFO:  eta: 3:10:44  iter: 18019  total_loss: 0.1768  loss_cls: 0.04175  loss_box_reg: 0.127  loss_rpn_cls: 0.0009056  loss_rpn_loc: 0.0134  time: 0.8844  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:54:28] d2.utils.events INFO:  eta: 3:10:26  iter: 18039  total_loss: 0.1932  loss_cls: 0.04047  loss_box_reg: 0.1321  loss_rpn_cls: 0.0007569  loss_rpn_loc: 0.01723  time: 0.8845  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 09:54:45] d2.utils.events INFO:  eta: 3:10:20  iter: 18059  total_loss: 0.2028  loss_cls: 0.04976  loss_box_reg: 0.1416  loss_rpn_cls: 0.001082  loss_rpn_loc: 0.01876  time: 0.8845  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:55:03] d2.utils.events INFO:  eta: 3:10:12  iter: 18079  total_loss: 0.2422  loss_cls: 0.05673  loss_box_reg: 0.1578  loss_rpn_cls: 0.0009628  loss_rpn_loc: 0.01498  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:55:21] d2.utils.events INFO:  eta: 3:10:06  iter: 18099  total_loss: 0.2655  loss_cls: 0.06251  loss_box_reg: 0.1719  loss_rpn_cls: 0.0009153  loss_rpn_loc: 0.02485  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:55:39] d2.utils.events INFO:  eta: 3:09:38  iter: 18119  total_loss: 0.2229  loss_cls: 0.04817  loss_box_reg: 0.153  loss_rpn_cls: 0.001999  loss_rpn_loc: 0.01866  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:55:56] d2.utils.events INFO:  eta: 3:09:24  iter: 18139  total_loss: 0.1541  loss_cls: 0.03714  loss_box_reg: 0.1111  loss_rpn_cls: 0.0008655  loss_rpn_loc: 0.0112  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:56:14] d2.utils.events INFO:  eta: 3:09:16  iter: 18159  total_loss: 0.1657  loss_cls: 0.03244  loss_box_reg: 0.1213  loss_rpn_cls: 0.0005255  loss_rpn_loc: 0.01361  time: 0.8845  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:56:32] d2.utils.events INFO:  eta: 3:09:03  iter: 18179  total_loss: 0.2058  loss_cls: 0.05018  loss_box_reg: 0.1385  loss_rpn_cls: 0.001268  loss_rpn_loc: 0.01889  time: 0.8845  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 09:56:49] d2.utils.events INFO:  eta: 3:08:43  iter: 18199  total_loss: 0.2106  loss_cls: 0.04631  loss_box_reg: 0.1513  loss_rpn_cls: 0.002227  loss_rpn_loc: 0.02144  time: 0.8845  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:57:06] d2.utils.events INFO:  eta: 3:08:29  iter: 18219  total_loss: 0.2071  loss_cls: 0.04413  loss_box_reg: 0.1418  loss_rpn_cls: 0.0007579  loss_rpn_loc: 0.01737  time: 0.8844  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:57:24] d2.utils.events INFO:  eta: 3:08:13  iter: 18239  total_loss: 0.2046  loss_cls: 0.03926  loss_box_reg: 0.1273  loss_rpn_cls: 0.0004392  loss_rpn_loc: 0.01421  time: 0.8844  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:57:41] d2.utils.events INFO:  eta: 3:08:06  iter: 18259  total_loss: 0.2437  loss_cls: 0.05362  loss_box_reg: 0.1566  loss_rpn_cls: 0.0004546  loss_rpn_loc: 0.01851  time: 0.8844  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:57:59] d2.utils.events INFO:  eta: 3:07:48  iter: 18279  total_loss: 0.2401  loss_cls: 0.05735  loss_box_reg: 0.1598  loss_rpn_cls: 0.001215  loss_rpn_loc: 0.02239  time: 0.8844  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:58:16] d2.utils.events INFO:  eta: 3:07:31  iter: 18299  total_loss: 0.1994  loss_cls: 0.0476  loss_box_reg: 0.1371  loss_rpn_cls: 0.0007747  loss_rpn_loc: 0.01925  time: 0.8844  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 09:58:34] d2.utils.events INFO:  eta: 3:06:59  iter: 18319  total_loss: 0.2138  loss_cls: 0.04769  loss_box_reg: 0.1439  loss_rpn_cls: 0.000837  loss_rpn_loc: 0.0164  time: 0.8844  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:58:51] d2.utils.events INFO:  eta: 3:06:33  iter: 18339  total_loss: 0.216  loss_cls: 0.04036  loss_box_reg: 0.1413  loss_rpn_cls: 0.000745  loss_rpn_loc: 0.01705  time: 0.8843  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 09:59:08] d2.utils.events INFO:  eta: 3:06:05  iter: 18359  total_loss: 0.2177  loss_cls: 0.04313  loss_box_reg: 0.1506  loss_rpn_cls: 0.0006659  loss_rpn_loc: 0.01616  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:59:26] d2.utils.events INFO:  eta: 3:05:52  iter: 18379  total_loss: 0.2272  loss_cls: 0.05268  loss_box_reg: 0.1484  loss_rpn_cls: 0.001391  loss_rpn_loc: 0.02204  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 09:59:44] d2.utils.events INFO:  eta: 3:05:34  iter: 18399  total_loss: 0.2237  loss_cls: 0.04675  loss_box_reg: 0.1527  loss_rpn_cls: 0.001618  loss_rpn_loc: 0.01897  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:00:01] d2.utils.events INFO:  eta: 3:05:27  iter: 18419  total_loss: 0.2218  loss_cls: 0.04835  loss_box_reg: 0.1479  loss_rpn_cls: 0.001133  loss_rpn_loc: 0.02187  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:00:19] d2.utils.events INFO:  eta: 3:05:16  iter: 18439  total_loss: 0.1837  loss_cls: 0.04187  loss_box_reg: 0.1263  loss_rpn_cls: 0.0005507  loss_rpn_loc: 0.01401  time: 0.8843  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:00:37] d2.utils.events INFO:  eta: 3:04:57  iter: 18459  total_loss: 0.2176  loss_cls: 0.04583  loss_box_reg: 0.1407  loss_rpn_cls: 0.001237  loss_rpn_loc: 0.01886  time: 0.8843  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 10:00:54] d2.utils.events INFO:  eta: 3:04:24  iter: 18479  total_loss: 0.1976  loss_cls: 0.04373  loss_box_reg: 0.1346  loss_rpn_cls: 0.000478  loss_rpn_loc: 0.01636  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:01:12] d2.utils.events INFO:  eta: 3:04:16  iter: 18499  total_loss: 0.1801  loss_cls: 0.04065  loss_box_reg: 0.1265  loss_rpn_cls: 0.0007074  loss_rpn_loc: 0.01578  time: 0.8843  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:01:30] d2.utils.events INFO:  eta: 3:04:04  iter: 18519  total_loss: 0.2337  loss_cls: 0.04819  loss_box_reg: 0.1559  loss_rpn_cls: 0.001356  loss_rpn_loc: 0.016  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:01:48] d2.utils.events INFO:  eta: 3:03:52  iter: 18539  total_loss: 0.1838  loss_cls: 0.03355  loss_box_reg: 0.1325  loss_rpn_cls: 0.0009229  loss_rpn_loc: 0.01501  time: 0.8843  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:02:05] d2.utils.events INFO:  eta: 3:03:16  iter: 18559  total_loss: 0.2112  loss_cls: 0.04572  loss_box_reg: 0.1433  loss_rpn_cls: 0.0006239  loss_rpn_loc: 0.01898  time: 0.8843  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:02:22] d2.utils.events INFO:  eta: 3:02:53  iter: 18579  total_loss: 0.1962  loss_cls: 0.02965  loss_box_reg: 0.1382  loss_rpn_cls: 0.0003012  loss_rpn_loc: 0.01436  time: 0.8843  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:02:40] d2.utils.events INFO:  eta: 3:02:37  iter: 18599  total_loss: 0.1733  loss_cls: 0.03852  loss_box_reg: 0.1324  loss_rpn_cls: 0.0005417  loss_rpn_loc: 0.01225  time: 0.8842  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:02:57] d2.utils.events INFO:  eta: 3:02:23  iter: 18619  total_loss: 0.1949  loss_cls: 0.045  loss_box_reg: 0.141  loss_rpn_cls: 0.0004574  loss_rpn_loc: 0.01306  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:03:15] d2.utils.events INFO:  eta: 3:02:05  iter: 18639  total_loss: 0.1874  loss_cls: 0.03292  loss_box_reg: 0.1373  loss_rpn_cls: 0.0002981  loss_rpn_loc: 0.0151  time: 0.8842  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:03:32] d2.utils.events INFO:  eta: 3:01:42  iter: 18659  total_loss: 0.1898  loss_cls: 0.04149  loss_box_reg: 0.1385  loss_rpn_cls: 0.0008347  loss_rpn_loc: 0.01725  time: 0.8842  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:03:50] d2.utils.events INFO:  eta: 3:01:23  iter: 18679  total_loss: 0.2228  loss_cls: 0.04904  loss_box_reg: 0.1491  loss_rpn_cls: 0.0007164  loss_rpn_loc: 0.01844  time: 0.8842  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:04:07] d2.utils.events INFO:  eta: 3:00:52  iter: 18699  total_loss: 0.2331  loss_cls: 0.04817  loss_box_reg: 0.1672  loss_rpn_cls: 0.001013  loss_rpn_loc: 0.01835  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:04:24] d2.utils.events INFO:  eta: 3:00:41  iter: 18719  total_loss: 0.2324  loss_cls: 0.04235  loss_box_reg: 0.1687  loss_rpn_cls: 0.0004948  loss_rpn_loc: 0.01544  time: 0.8842  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:04:42] d2.utils.events INFO:  eta: 3:00:15  iter: 18739  total_loss: 0.2153  loss_cls: 0.04925  loss_box_reg: 0.1584  loss_rpn_cls: 0.0008358  loss_rpn_loc: 0.01761  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:05:00] d2.utils.events INFO:  eta: 3:00:16  iter: 18759  total_loss: 0.2091  loss_cls: 0.04771  loss_box_reg: 0.1392  loss_rpn_cls: 0.000782  loss_rpn_loc: 0.01343  time: 0.8842  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:05:18] d2.utils.events INFO:  eta: 3:00:05  iter: 18779  total_loss: 0.1817  loss_cls: 0.0367  loss_box_reg: 0.126  loss_rpn_cls: 0.0007244  loss_rpn_loc: 0.01446  time: 0.8842  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:05:36] d2.utils.events INFO:  eta: 2:59:51  iter: 18799  total_loss: 0.2165  loss_cls: 0.04883  loss_box_reg: 0.1561  loss_rpn_cls: 0.0005063  loss_rpn_loc: 0.01549  time: 0.8842  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:05:53] d2.utils.events INFO:  eta: 2:59:33  iter: 18819  total_loss: 0.2365  loss_cls: 0.0652  loss_box_reg: 0.1441  loss_rpn_cls: 0.00156  loss_rpn_loc: 0.01963  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:06:11] d2.utils.events INFO:  eta: 2:59:19  iter: 18839  total_loss: 0.2474  loss_cls: 0.05251  loss_box_reg: 0.1634  loss_rpn_cls: 0.001238  loss_rpn_loc: 0.01929  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:06:28] d2.utils.events INFO:  eta: 2:58:51  iter: 18859  total_loss: 0.2103  loss_cls: 0.04854  loss_box_reg: 0.1474  loss_rpn_cls: 0.001259  loss_rpn_loc: 0.01512  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:06:46] d2.utils.events INFO:  eta: 2:58:42  iter: 18879  total_loss: 0.2163  loss_cls: 0.05056  loss_box_reg: 0.1484  loss_rpn_cls: 0.0009723  loss_rpn_loc: 0.01844  time: 0.8842  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:07:04] d2.utils.events INFO:  eta: 2:58:31  iter: 18899  total_loss: 0.2038  loss_cls: 0.04495  loss_box_reg: 0.137  loss_rpn_cls: 0.0009086  loss_rpn_loc: 0.01769  time: 0.8841  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:07:21] d2.utils.events INFO:  eta: 2:58:18  iter: 18919  total_loss: 0.1751  loss_cls: 0.0311  loss_box_reg: 0.1315  loss_rpn_cls: 0.0009764  loss_rpn_loc: 0.01239  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:07:39] d2.utils.events INFO:  eta: 2:58:00  iter: 18939  total_loss: 0.1893  loss_cls: 0.0403  loss_box_reg: 0.1302  loss_rpn_cls: 0.000718  loss_rpn_loc: 0.01266  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:07:56] d2.utils.events INFO:  eta: 2:57:33  iter: 18959  total_loss: 0.211  loss_cls: 0.0368  loss_box_reg: 0.1406  loss_rpn_cls: 0.0009506  loss_rpn_loc: 0.0153  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:08:13] d2.utils.events INFO:  eta: 2:57:14  iter: 18979  total_loss: 0.2523  loss_cls: 0.05222  loss_box_reg: 0.1645  loss_rpn_cls: 0.0005297  loss_rpn_loc: 0.01986  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:08:31] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 10:08:31] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 10:08:31] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 10:08:31] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 10:08:32] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 10:08:33] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1178 s/iter. Eval: 0.0001 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 10:08:38] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:59
[04/03 10:08:43] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:54
[04/03 10:08:48] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:49
[04/03 10:08:53] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:44
[04/03 10:08:58] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:39
[04/03 10:09:03] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:34
[04/03 10:09:08] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:29
[04/03 10:09:14] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:24
[04/03 10:09:19] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:19
[04/03 10:09:24] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:14
[04/03 10:09:29] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:08
[04/03 10:09:34] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:03
[04/03 10:09:38] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.224131 (0.120118 s / iter per device, on 1 devices)
[04/03 10:09:38] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118776 s / iter per device, on 1 devices)
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 10:09:38] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 10:09:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.39 seconds.
[04/03 10:09:38] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 10:09:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.094 | 10.950 | 5.944  | 2.092 | 12.321 | 13.270 |
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 10:09:38] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.847  | people          | 3.258  | bicycle    | 2.589 |
| car        | 33.545 | van             | 12.900 | truck      | 0.000 |
| tricycle   | 1.973  | awning-tricycle | 1.346  | bus        | 0.000 |
| motor      | 5.572  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 10:09:38] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 10:09:38] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 10:09:38] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 10:09:38] d2.evaluation.testing INFO: copypaste: 6.0936,10.9503,5.9441,2.0916,12.3207,13.2701,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 10:09:38] d2.utils.events INFO:  eta: 2:57:07  iter: 18999  total_loss: 0.2172  loss_cls: 0.05147  loss_box_reg: 0.1317  loss_rpn_cls: 0.0006843  loss_rpn_loc: 0.01743  time: 0.8841  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:09:56] d2.utils.events INFO:  eta: 2:56:44  iter: 19019  total_loss: 0.1993  loss_cls: 0.04061  loss_box_reg: 0.1366  loss_rpn_cls: 0.0003467  loss_rpn_loc: 0.01572  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:10:13] d2.utils.events INFO:  eta: 2:56:22  iter: 19039  total_loss: 0.2615  loss_cls: 0.06386  loss_box_reg: 0.1722  loss_rpn_cls: 0.001082  loss_rpn_loc: 0.01949  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:10:31] d2.utils.events INFO:  eta: 2:56:17  iter: 19059  total_loss: 0.2218  loss_cls: 0.05024  loss_box_reg: 0.1472  loss_rpn_cls: 0.001196  loss_rpn_loc: 0.02002  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:10:49] d2.utils.events INFO:  eta: 2:55:50  iter: 19079  total_loss: 0.2016  loss_cls: 0.04495  loss_box_reg: 0.1425  loss_rpn_cls: 0.0008722  loss_rpn_loc: 0.01363  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:11:07] d2.utils.events INFO:  eta: 2:55:46  iter: 19099  total_loss: 0.197  loss_cls: 0.04288  loss_box_reg: 0.1338  loss_rpn_cls: 0.0004341  loss_rpn_loc: 0.01151  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:11:25] d2.utils.events INFO:  eta: 2:55:32  iter: 19119  total_loss: 0.1897  loss_cls: 0.04295  loss_box_reg: 0.1286  loss_rpn_cls: 0.0005104  loss_rpn_loc: 0.01677  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:11:43] d2.utils.events INFO:  eta: 2:55:07  iter: 19139  total_loss: 0.2439  loss_cls: 0.06628  loss_box_reg: 0.1602  loss_rpn_cls: 0.001676  loss_rpn_loc: 0.02346  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:12:01] d2.utils.events INFO:  eta: 2:54:53  iter: 19159  total_loss: 0.2087  loss_cls: 0.04272  loss_box_reg: 0.1468  loss_rpn_cls: 0.0007499  loss_rpn_loc: 0.01376  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:12:19] d2.utils.events INFO:  eta: 2:54:38  iter: 19179  total_loss: 0.2285  loss_cls: 0.05351  loss_box_reg: 0.1456  loss_rpn_cls: 0.0005488  loss_rpn_loc: 0.02387  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:12:36] d2.utils.events INFO:  eta: 2:54:21  iter: 19199  total_loss: 0.2105  loss_cls: 0.04798  loss_box_reg: 0.1557  loss_rpn_cls: 0.0004644  loss_rpn_loc: 0.01732  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:12:54] d2.utils.events INFO:  eta: 2:54:05  iter: 19219  total_loss: 0.1664  loss_cls: 0.03653  loss_box_reg: 0.1141  loss_rpn_cls: 0.0003582  loss_rpn_loc: 0.01209  time: 0.8841  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:13:11] d2.utils.events INFO:  eta: 2:53:49  iter: 19239  total_loss: 0.2218  loss_cls: 0.05582  loss_box_reg: 0.144  loss_rpn_cls: 0.0005218  loss_rpn_loc: 0.01792  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:13:29] d2.utils.events INFO:  eta: 2:53:34  iter: 19259  total_loss: 0.2171  loss_cls: 0.03973  loss_box_reg: 0.1476  loss_rpn_cls: 0.0005569  loss_rpn_loc: 0.01567  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:13:46] d2.utils.events INFO:  eta: 2:53:16  iter: 19279  total_loss: 0.2716  loss_cls: 0.07046  loss_box_reg: 0.1807  loss_rpn_cls: 0.000974  loss_rpn_loc: 0.02066  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:14:04] d2.utils.events INFO:  eta: 2:53:01  iter: 19299  total_loss: 0.2075  loss_cls: 0.0516  loss_box_reg: 0.1399  loss_rpn_cls: 0.0008273  loss_rpn_loc: 0.01665  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:14:21] d2.utils.events INFO:  eta: 2:52:47  iter: 19319  total_loss: 0.1791  loss_cls: 0.04188  loss_box_reg: 0.126  loss_rpn_cls: 0.0008635  loss_rpn_loc: 0.01257  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:14:39] d2.utils.events INFO:  eta: 2:52:29  iter: 19339  total_loss: 0.1883  loss_cls: 0.04189  loss_box_reg: 0.1283  loss_rpn_cls: 0.0004225  loss_rpn_loc: 0.01488  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:14:56] d2.utils.events INFO:  eta: 2:52:11  iter: 19359  total_loss: 0.1966  loss_cls: 0.03941  loss_box_reg: 0.1451  loss_rpn_cls: 0.0003179  loss_rpn_loc: 0.01284  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:15:14] d2.utils.events INFO:  eta: 2:51:43  iter: 19379  total_loss: 0.2312  loss_cls: 0.05948  loss_box_reg: 0.1507  loss_rpn_cls: 0.0007832  loss_rpn_loc: 0.02203  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:15:31] d2.utils.events INFO:  eta: 2:51:23  iter: 19399  total_loss: 0.235  loss_cls: 0.05041  loss_box_reg: 0.1567  loss_rpn_cls: 0.001116  loss_rpn_loc: 0.01653  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:15:48] d2.utils.events INFO:  eta: 2:51:00  iter: 19419  total_loss: 0.2205  loss_cls: 0.05399  loss_box_reg: 0.1568  loss_rpn_cls: 0.001169  loss_rpn_loc: 0.0174  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:16:06] d2.utils.events INFO:  eta: 2:50:41  iter: 19439  total_loss: 0.2065  loss_cls: 0.04296  loss_box_reg: 0.1389  loss_rpn_cls: 0.0007933  loss_rpn_loc: 0.0174  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:16:24] d2.utils.events INFO:  eta: 2:50:25  iter: 19459  total_loss: 0.1905  loss_cls: 0.03573  loss_box_reg: 0.1444  loss_rpn_cls: 0.0007986  loss_rpn_loc: 0.014  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:16:42] d2.utils.events INFO:  eta: 2:50:21  iter: 19479  total_loss: 0.2023  loss_cls: 0.04984  loss_box_reg: 0.1458  loss_rpn_cls: 0.0009895  loss_rpn_loc: 0.01464  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:17:00] d2.utils.events INFO:  eta: 2:49:57  iter: 19499  total_loss: 0.2122  loss_cls: 0.04578  loss_box_reg: 0.1473  loss_rpn_cls: 0.0006826  loss_rpn_loc: 0.01715  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:17:17] d2.utils.events INFO:  eta: 2:49:30  iter: 19519  total_loss: 0.1988  loss_cls: 0.03975  loss_box_reg: 0.1409  loss_rpn_cls: 0.0008618  loss_rpn_loc: 0.01404  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:17:35] d2.utils.events INFO:  eta: 2:49:11  iter: 19539  total_loss: 0.201  loss_cls: 0.04804  loss_box_reg: 0.1295  loss_rpn_cls: 0.0006105  loss_rpn_loc: 0.01974  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:17:52] d2.utils.events INFO:  eta: 2:48:53  iter: 19559  total_loss: 0.1808  loss_cls: 0.03933  loss_box_reg: 0.1245  loss_rpn_cls: 0.0004181  loss_rpn_loc: 0.01648  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:18:11] d2.utils.events INFO:  eta: 2:48:41  iter: 19579  total_loss: 0.1926  loss_cls: 0.0405  loss_box_reg: 0.1389  loss_rpn_cls: 0.0004457  loss_rpn_loc: 0.01307  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:18:29] d2.utils.events INFO:  eta: 2:48:21  iter: 19599  total_loss: 0.1799  loss_cls: 0.03691  loss_box_reg: 0.1247  loss_rpn_cls: 0.0004455  loss_rpn_loc: 0.01434  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:18:47] d2.utils.events INFO:  eta: 2:48:03  iter: 19619  total_loss: 0.2026  loss_cls: 0.04201  loss_box_reg: 0.1375  loss_rpn_cls: 0.0004496  loss_rpn_loc: 0.01609  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:19:03] d2.utils.events INFO:  eta: 2:47:43  iter: 19639  total_loss: 0.2117  loss_cls: 0.05272  loss_box_reg: 0.1432  loss_rpn_cls: 0.001205  loss_rpn_loc: 0.02197  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:19:21] d2.utils.events INFO:  eta: 2:47:27  iter: 19659  total_loss: 0.225  loss_cls: 0.04371  loss_box_reg: 0.1558  loss_rpn_cls: 0.001228  loss_rpn_loc: 0.01523  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:19:38] d2.utils.events INFO:  eta: 2:47:07  iter: 19679  total_loss: 0.1845  loss_cls: 0.0446  loss_box_reg: 0.1326  loss_rpn_cls: 0.0008833  loss_rpn_loc: 0.0129  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:19:56] d2.utils.events INFO:  eta: 2:46:52  iter: 19699  total_loss: 0.1749  loss_cls: 0.03602  loss_box_reg: 0.1234  loss_rpn_cls: 0.0006138  loss_rpn_loc: 0.01335  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:20:14] d2.utils.events INFO:  eta: 2:46:37  iter: 19719  total_loss: 0.2053  loss_cls: 0.04402  loss_box_reg: 0.1327  loss_rpn_cls: 0.0005126  loss_rpn_loc: 0.01262  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:20:31] d2.utils.events INFO:  eta: 2:46:16  iter: 19739  total_loss: 0.2508  loss_cls: 0.05793  loss_box_reg: 0.1715  loss_rpn_cls: 0.001122  loss_rpn_loc: 0.02049  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:20:49] d2.utils.events INFO:  eta: 2:45:54  iter: 19759  total_loss: 0.2502  loss_cls: 0.05372  loss_box_reg: 0.1648  loss_rpn_cls: 0.001885  loss_rpn_loc: 0.02127  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:21:07] d2.utils.events INFO:  eta: 2:45:28  iter: 19779  total_loss: 0.172  loss_cls: 0.03683  loss_box_reg: 0.1262  loss_rpn_cls: 0.0005807  loss_rpn_loc: 0.01311  time: 0.8839  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 10:21:24] d2.utils.events INFO:  eta: 2:45:12  iter: 19799  total_loss: 0.2631  loss_cls: 0.06483  loss_box_reg: 0.1716  loss_rpn_cls: 0.0004931  loss_rpn_loc: 0.02283  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:21:41] d2.utils.events INFO:  eta: 2:44:52  iter: 19819  total_loss: 0.2092  loss_cls: 0.03893  loss_box_reg: 0.1499  loss_rpn_cls: 0.0008097  loss_rpn_loc: 0.01489  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:21:58] d2.utils.events INFO:  eta: 2:44:29  iter: 19839  total_loss: 0.2163  loss_cls: 0.04909  loss_box_reg: 0.1545  loss_rpn_cls: 0.0009766  loss_rpn_loc: 0.01308  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:22:15] d2.utils.events INFO:  eta: 2:44:16  iter: 19859  total_loss: 0.1549  loss_cls: 0.02913  loss_box_reg: 0.1104  loss_rpn_cls: 0.0005482  loss_rpn_loc: 0.01026  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:22:33] d2.utils.events INFO:  eta: 2:43:59  iter: 19879  total_loss: 0.198  loss_cls: 0.03923  loss_box_reg: 0.1314  loss_rpn_cls: 0.0009841  loss_rpn_loc: 0.01378  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:22:51] d2.utils.events INFO:  eta: 2:43:39  iter: 19899  total_loss: 0.1615  loss_cls: 0.04016  loss_box_reg: 0.1012  loss_rpn_cls: 0.0003512  loss_rpn_loc: 0.01361  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:23:09] d2.utils.events INFO:  eta: 2:43:05  iter: 19919  total_loss: 0.2074  loss_cls: 0.04821  loss_box_reg: 0.1446  loss_rpn_cls: 0.0006795  loss_rpn_loc: 0.01725  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:23:26] d2.utils.events INFO:  eta: 2:42:40  iter: 19939  total_loss: 0.1947  loss_cls: 0.0464  loss_box_reg: 0.1442  loss_rpn_cls: 0.0006601  loss_rpn_loc: 0.01289  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:23:44] d2.utils.events INFO:  eta: 2:42:46  iter: 19959  total_loss: 0.1846  loss_cls: 0.03309  loss_box_reg: 0.1333  loss_rpn_cls: 0.0005074  loss_rpn_loc: 0.01675  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:24:01] d2.utils.events INFO:  eta: 2:42:30  iter: 19979  total_loss: 0.2111  loss_cls: 0.05495  loss_box_reg: 0.1519  loss_rpn_cls: 0.0003004  loss_rpn_loc: 0.01474  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:24:20] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 10:24:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 10:24:20] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 10:24:20] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 10:24:20] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 10:24:22] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1197 s/iter. ETA=0:01:04
[04/03 10:24:27] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:59
[04/03 10:24:32] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:54
[04/03 10:24:37] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0010 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:49
[04/03 10:24:42] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:44
[04/03 10:24:47] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:39
[04/03 10:24:52] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1195 s/iter. Eval: 0.0002 s/iter. Total: 0.1207 s/iter. ETA=0:00:34
[04/03 10:24:57] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0002 s/iter. Total: 0.1206 s/iter. ETA=0:00:29
[04/03 10:25:02] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:24
[04/03 10:25:07] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:19
[04/03 10:25:12] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:14
[04/03 10:25:17] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:09
[04/03 10:25:23] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:04
[04/03 10:25:27] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.388090 (0.120420 s / iter per device, on 1 devices)
[04/03 10:25:27] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119092 s / iter per device, on 1 devices)
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 10:25:27] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 10:25:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.42 seconds.
[04/03 10:25:27] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 10:25:27] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.098 | 11.193 | 5.852  | 2.090 | 12.560 | 15.649 |
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 10:25:27] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.868  | people          | 3.347  | bicycle    | 2.191 |
| car        | 33.029 | van             | 13.107 | truck      | 0.000 |
| tricycle   | 3.730  | awning-tricycle | 0.735  | bus        | 0.000 |
| motor      | 4.898  | others          | 0.172  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 10:25:27] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 10:25:27] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 10:25:27] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 10:25:27] d2.evaluation.testing INFO: copypaste: 6.0979,11.1932,5.8520,2.0896,12.5597,15.6487,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 10:25:27] d2.utils.events INFO:  eta: 2:42:13  iter: 19999  total_loss: 0.2175  loss_cls: 0.05012  loss_box_reg: 0.1516  loss_rpn_cls: 0.002139  loss_rpn_loc: 0.01364  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:25:46] d2.utils.events INFO:  eta: 2:41:57  iter: 20019  total_loss: 0.2414  loss_cls: 0.0513  loss_box_reg: 0.16  loss_rpn_cls: 0.001076  loss_rpn_loc: 0.01894  time: 0.8839  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:26:03] d2.utils.events INFO:  eta: 2:41:39  iter: 20039  total_loss: 0.2232  loss_cls: 0.04564  loss_box_reg: 0.1458  loss_rpn_cls: 0.0007854  loss_rpn_loc: 0.01655  time: 0.8839  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:26:21] d2.utils.events INFO:  eta: 2:41:24  iter: 20059  total_loss: 0.2396  loss_cls: 0.04197  loss_box_reg: 0.1705  loss_rpn_cls: 0.0006205  loss_rpn_loc: 0.01526  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:26:39] d2.utils.events INFO:  eta: 2:41:13  iter: 20079  total_loss: 0.1871  loss_cls: 0.03138  loss_box_reg: 0.1412  loss_rpn_cls: 0.0006069  loss_rpn_loc: 0.01296  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:26:57] d2.utils.events INFO:  eta: 2:40:45  iter: 20099  total_loss: 0.1738  loss_cls: 0.03162  loss_box_reg: 0.1286  loss_rpn_cls: 0.0002377  loss_rpn_loc: 0.01259  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:27:14] d2.utils.events INFO:  eta: 2:40:25  iter: 20119  total_loss: 0.224  loss_cls: 0.04733  loss_box_reg: 0.1495  loss_rpn_cls: 0.0007411  loss_rpn_loc: 0.01786  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:27:31] d2.utils.events INFO:  eta: 2:40:08  iter: 20139  total_loss: 0.2103  loss_cls: 0.037  loss_box_reg: 0.1384  loss_rpn_cls: 0.0003168  loss_rpn_loc: 0.01494  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:27:49] d2.utils.events INFO:  eta: 2:39:40  iter: 20159  total_loss: 0.2071  loss_cls: 0.04377  loss_box_reg: 0.1413  loss_rpn_cls: 0.001133  loss_rpn_loc: 0.01607  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:28:06] d2.utils.events INFO:  eta: 2:38:57  iter: 20179  total_loss: 0.2157  loss_cls: 0.05074  loss_box_reg: 0.154  loss_rpn_cls: 0.001018  loss_rpn_loc: 0.01647  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:28:24] d2.utils.events INFO:  eta: 2:38:39  iter: 20199  total_loss: 0.1939  loss_cls: 0.0431  loss_box_reg: 0.1313  loss_rpn_cls: 0.0009183  loss_rpn_loc: 0.01656  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:28:41] d2.utils.events INFO:  eta: 2:38:22  iter: 20219  total_loss: 0.2152  loss_cls: 0.04808  loss_box_reg: 0.1447  loss_rpn_cls: 0.0003744  loss_rpn_loc: 0.01605  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:28:59] d2.utils.events INFO:  eta: 2:38:04  iter: 20239  total_loss: 0.2061  loss_cls: 0.04253  loss_box_reg: 0.1473  loss_rpn_cls: 0.0004759  loss_rpn_loc: 0.01593  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:29:17] d2.utils.events INFO:  eta: 2:37:47  iter: 20259  total_loss: 0.2136  loss_cls: 0.04684  loss_box_reg: 0.1523  loss_rpn_cls: 0.000886  loss_rpn_loc: 0.01774  time: 0.8838  data_time: 0.0029  lr: 0.0002  max_mem: 15391M
[04/03 10:29:36] d2.utils.events INFO:  eta: 2:38:05  iter: 20279  total_loss: 0.2181  loss_cls: 0.05579  loss_box_reg: 0.1418  loss_rpn_cls: 0.0004949  loss_rpn_loc: 0.02284  time: 0.8839  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 10:29:54] d2.utils.events INFO:  eta: 2:37:45  iter: 20299  total_loss: 0.2323  loss_cls: 0.04561  loss_box_reg: 0.159  loss_rpn_cls: 0.001095  loss_rpn_loc: 0.01893  time: 0.8839  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:30:12] d2.utils.events INFO:  eta: 2:37:30  iter: 20319  total_loss: 0.1979  loss_cls: 0.03868  loss_box_reg: 0.1368  loss_rpn_cls: 0.0007549  loss_rpn_loc: 0.01621  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:30:30] d2.utils.events INFO:  eta: 2:37:16  iter: 20339  total_loss: 0.1786  loss_cls: 0.03455  loss_box_reg: 0.1269  loss_rpn_cls: 0.0007908  loss_rpn_loc: 0.01312  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:30:47] d2.utils.events INFO:  eta: 2:37:03  iter: 20359  total_loss: 0.1973  loss_cls: 0.04824  loss_box_reg: 0.1381  loss_rpn_cls: 0.0009114  loss_rpn_loc: 0.01702  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:31:04] d2.utils.events INFO:  eta: 2:36:55  iter: 20379  total_loss: 0.2269  loss_cls: 0.04573  loss_box_reg: 0.1499  loss_rpn_cls: 0.0009494  loss_rpn_loc: 0.01701  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:31:21] d2.utils.events INFO:  eta: 2:36:28  iter: 20399  total_loss: 0.2024  loss_cls: 0.03766  loss_box_reg: 0.14  loss_rpn_cls: 0.0007334  loss_rpn_loc: 0.01464  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:31:38] d2.utils.events INFO:  eta: 2:36:02  iter: 20419  total_loss: 0.1971  loss_cls: 0.04273  loss_box_reg: 0.1415  loss_rpn_cls: 0.001141  loss_rpn_loc: 0.01621  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:31:56] d2.utils.events INFO:  eta: 2:35:44  iter: 20439  total_loss: 0.2256  loss_cls: 0.05253  loss_box_reg: 0.1475  loss_rpn_cls: 0.0009059  loss_rpn_loc: 0.01858  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:32:14] d2.utils.events INFO:  eta: 2:35:27  iter: 20459  total_loss: 0.1552  loss_cls: 0.03506  loss_box_reg: 0.1115  loss_rpn_cls: 0.0006372  loss_rpn_loc: 0.01095  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:32:32] d2.utils.events INFO:  eta: 2:35:05  iter: 20479  total_loss: 0.1766  loss_cls: 0.03854  loss_box_reg: 0.126  loss_rpn_cls: 0.0003925  loss_rpn_loc: 0.01421  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:32:50] d2.utils.events INFO:  eta: 2:34:51  iter: 20499  total_loss: 0.1977  loss_cls: 0.04624  loss_box_reg: 0.1484  loss_rpn_cls: 0.0009775  loss_rpn_loc: 0.01665  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:33:07] d2.utils.events INFO:  eta: 2:34:27  iter: 20519  total_loss: 0.1994  loss_cls: 0.04565  loss_box_reg: 0.1313  loss_rpn_cls: 0.0006463  loss_rpn_loc: 0.01668  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:33:25] d2.utils.events INFO:  eta: 2:34:15  iter: 20539  total_loss: 0.1676  loss_cls: 0.03921  loss_box_reg: 0.1217  loss_rpn_cls: 0.0007138  loss_rpn_loc: 0.01169  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:33:42] d2.utils.events INFO:  eta: 2:33:58  iter: 20559  total_loss: 0.1981  loss_cls: 0.04686  loss_box_reg: 0.1325  loss_rpn_cls: 0.0008049  loss_rpn_loc: 0.01714  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:34:01] d2.utils.events INFO:  eta: 2:33:33  iter: 20579  total_loss: 0.2587  loss_cls: 0.06309  loss_box_reg: 0.1691  loss_rpn_cls: 0.0009733  loss_rpn_loc: 0.0221  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:34:19] d2.utils.events INFO:  eta: 2:33:22  iter: 20599  total_loss: 0.2168  loss_cls: 0.05025  loss_box_reg: 0.1283  loss_rpn_cls: 0.0005727  loss_rpn_loc: 0.01296  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:34:37] d2.utils.events INFO:  eta: 2:33:12  iter: 20619  total_loss: 0.2139  loss_cls: 0.0617  loss_box_reg: 0.1355  loss_rpn_cls: 0.001097  loss_rpn_loc: 0.0178  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:34:55] d2.utils.events INFO:  eta: 2:33:07  iter: 20639  total_loss: 0.2216  loss_cls: 0.04942  loss_box_reg: 0.1457  loss_rpn_cls: 0.001226  loss_rpn_loc: 0.01727  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:35:12] d2.utils.events INFO:  eta: 2:32:44  iter: 20659  total_loss: 0.2198  loss_cls: 0.04994  loss_box_reg: 0.1334  loss_rpn_cls: 0.001685  loss_rpn_loc: 0.01854  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:35:31] d2.utils.events INFO:  eta: 2:32:54  iter: 20679  total_loss: 0.2309  loss_cls: 0.0558  loss_box_reg: 0.1472  loss_rpn_cls: 0.00106  loss_rpn_loc: 0.01748  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:35:48] d2.utils.events INFO:  eta: 2:32:36  iter: 20699  total_loss: 0.2336  loss_cls: 0.06078  loss_box_reg: 0.1626  loss_rpn_cls: 0.001787  loss_rpn_loc: 0.01848  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:36:05] d2.utils.events INFO:  eta: 2:32:12  iter: 20719  total_loss: 0.2197  loss_cls: 0.05082  loss_box_reg: 0.1536  loss_rpn_cls: 0.0008264  loss_rpn_loc: 0.01852  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:36:23] d2.utils.events INFO:  eta: 2:32:01  iter: 20739  total_loss: 0.1815  loss_cls: 0.03954  loss_box_reg: 0.1225  loss_rpn_cls: 0.000647  loss_rpn_loc: 0.01495  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:36:40] d2.utils.events INFO:  eta: 2:31:35  iter: 20759  total_loss: 0.2331  loss_cls: 0.05034  loss_box_reg: 0.1566  loss_rpn_cls: 0.00141  loss_rpn_loc: 0.01636  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:36:57] d2.utils.events INFO:  eta: 2:31:18  iter: 20779  total_loss: 0.2084  loss_cls: 0.043  loss_box_reg: 0.1462  loss_rpn_cls: 0.002292  loss_rpn_loc: 0.0156  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:37:14] d2.utils.events INFO:  eta: 2:30:46  iter: 20799  total_loss: 0.2058  loss_cls: 0.04673  loss_box_reg: 0.1382  loss_rpn_cls: 0.001043  loss_rpn_loc: 0.01558  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:37:32] d2.utils.events INFO:  eta: 2:30:42  iter: 20819  total_loss: 0.1727  loss_cls: 0.042  loss_box_reg: 0.1091  loss_rpn_cls: 0.000755  loss_rpn_loc: 0.01432  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:37:49] d2.utils.events INFO:  eta: 2:30:31  iter: 20839  total_loss: 0.2257  loss_cls: 0.04856  loss_box_reg: 0.158  loss_rpn_cls: 0.001232  loss_rpn_loc: 0.01607  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:38:07] d2.utils.events INFO:  eta: 2:30:14  iter: 20859  total_loss: 0.1714  loss_cls: 0.03489  loss_box_reg: 0.1252  loss_rpn_cls: 0.0009786  loss_rpn_loc: 0.01251  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:38:25] d2.utils.events INFO:  eta: 2:29:49  iter: 20879  total_loss: 0.2289  loss_cls: 0.05398  loss_box_reg: 0.149  loss_rpn_cls: 0.0008334  loss_rpn_loc: 0.01803  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:38:44] d2.utils.events INFO:  eta: 2:29:40  iter: 20899  total_loss: 0.1977  loss_cls: 0.04086  loss_box_reg: 0.1328  loss_rpn_cls: 0.001003  loss_rpn_loc: 0.01729  time: 0.8838  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:39:01] d2.utils.events INFO:  eta: 2:29:26  iter: 20919  total_loss: 0.1746  loss_cls: 0.04204  loss_box_reg: 0.1128  loss_rpn_cls: 0.0004144  loss_rpn_loc: 0.01261  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:39:18] d2.utils.events INFO:  eta: 2:29:02  iter: 20939  total_loss: 0.174  loss_cls: 0.04645  loss_box_reg: 0.1156  loss_rpn_cls: 0.000668  loss_rpn_loc: 0.01429  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:39:35] d2.utils.events INFO:  eta: 2:28:24  iter: 20959  total_loss: 0.2069  loss_cls: 0.04588  loss_box_reg: 0.1503  loss_rpn_cls: 0.0006225  loss_rpn_loc: 0.01391  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:39:53] d2.utils.events INFO:  eta: 2:27:48  iter: 20979  total_loss: 0.1448  loss_cls: 0.0317  loss_box_reg: 0.1057  loss_rpn_cls: 0.000591  loss_rpn_loc: 0.01293  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:40:11] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 10:40:11] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 10:40:11] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 10:40:11] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 10:40:11] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 10:40:13] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1184 s/iter. Eval: 0.0006 s/iter. Total: 0.1198 s/iter. ETA=0:01:04
[04/03 10:40:18] d2.evaluation.evaluator INFO: Inference done 52/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0023 s/iter. Total: 0.1219 s/iter. ETA=0:01:00
[04/03 10:40:23] d2.evaluation.evaluator INFO: Inference done 94/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0013 s/iter. Total: 0.1210 s/iter. ETA=0:00:54
[04/03 10:40:28] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0009 s/iter. Total: 0.1207 s/iter. ETA=0:00:49
[04/03 10:40:33] d2.evaluation.evaluator INFO: Inference done 178/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1205 s/iter. ETA=0:00:44
[04/03 10:40:38] d2.evaluation.evaluator INFO: Inference done 220/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0006 s/iter. Total: 0.1204 s/iter. ETA=0:00:39
[04/03 10:40:43] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1204 s/iter. ETA=0:00:34
[04/03 10:40:48] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1203 s/iter. ETA=0:00:29
[04/03 10:40:53] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0005 s/iter. Total: 0.1203 s/iter. ETA=0:00:24
[04/03 10:40:58] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0004 s/iter. Total: 0.1202 s/iter. ETA=0:00:19
[04/03 10:41:03] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0004 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 10:41:08] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0004 s/iter. Total: 0.1201 s/iter. ETA=0:00:09
[04/03 10:41:13] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0004 s/iter. Total: 0.1200 s/iter. ETA=0:00:04
[04/03 10:41:17] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.269631 (0.120202 s / iter per device, on 1 devices)
[04/03 10:41:17] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118736 s / iter per device, on 1 devices)
[04/03 10:41:17] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 10:41:17] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 10:41:17] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 10:41:17] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 10:41:18] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.50 seconds.
[04/03 10:41:18] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 10:41:18] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.135 | 10.966 | 6.094  | 2.057 | 12.712 | 12.581 |
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 10:41:18] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.382  | people          | 3.395  | bicycle    | 2.736 |
| car        | 32.738 | van             | 14.074 | truck      | 0.000 |
| tricycle   | 2.831  | awning-tricycle | 0.341  | bus        | 0.000 |
| motor      | 4.991  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 10:41:18] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 10:41:18] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 10:41:18] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 10:41:18] d2.evaluation.testing INFO: copypaste: 6.1353,10.9664,6.0939,2.0573,12.7120,12.5806,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 10:41:18] d2.utils.events INFO:  eta: 2:27:26  iter: 20999  total_loss: 0.1952  loss_cls: 0.03792  loss_box_reg: 0.1391  loss_rpn_cls: 0.0005064  loss_rpn_loc: 0.01344  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:41:35] d2.utils.events INFO:  eta: 2:27:00  iter: 21019  total_loss: 0.2283  loss_cls: 0.05426  loss_box_reg: 0.1623  loss_rpn_cls: 0.0009924  loss_rpn_loc: 0.01495  time: 0.8837  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:41:53] d2.utils.events INFO:  eta: 2:26:40  iter: 21039  total_loss: 0.2102  loss_cls: 0.04725  loss_box_reg: 0.1381  loss_rpn_cls: 0.0006281  loss_rpn_loc: 0.01387  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:42:10] d2.utils.events INFO:  eta: 2:26:19  iter: 21059  total_loss: 0.2299  loss_cls: 0.04155  loss_box_reg: 0.159  loss_rpn_cls: 0.0008727  loss_rpn_loc: 0.01818  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:42:28] d2.utils.events INFO:  eta: 2:25:57  iter: 21079  total_loss: 0.2031  loss_cls: 0.04729  loss_box_reg: 0.1378  loss_rpn_cls: 0.0005952  loss_rpn_loc: 0.01661  time: 0.8837  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:42:44] d2.utils.events INFO:  eta: 2:25:36  iter: 21099  total_loss: 0.2375  loss_cls: 0.05308  loss_box_reg: 0.1531  loss_rpn_cls: 0.001308  loss_rpn_loc: 0.01961  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:43:02] d2.utils.events INFO:  eta: 2:25:19  iter: 21119  total_loss: 0.2207  loss_cls: 0.04796  loss_box_reg: 0.1498  loss_rpn_cls: 0.0004112  loss_rpn_loc: 0.0209  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:43:19] d2.utils.events INFO:  eta: 2:25:02  iter: 21139  total_loss: 0.1877  loss_cls: 0.04095  loss_box_reg: 0.1284  loss_rpn_cls: 0.0008254  loss_rpn_loc: 0.01704  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:43:37] d2.utils.events INFO:  eta: 2:24:44  iter: 21159  total_loss: 0.2169  loss_cls: 0.04345  loss_box_reg: 0.1421  loss_rpn_cls: 0.0006895  loss_rpn_loc: 0.0157  time: 0.8836  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:43:54] d2.utils.events INFO:  eta: 2:24:27  iter: 21179  total_loss: 0.169  loss_cls: 0.03221  loss_box_reg: 0.1233  loss_rpn_cls: 0.0002724  loss_rpn_loc: 0.01202  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:44:12] d2.utils.events INFO:  eta: 2:24:09  iter: 21199  total_loss: 0.1868  loss_cls: 0.03787  loss_box_reg: 0.1301  loss_rpn_cls: 0.000635  loss_rpn_loc: 0.0159  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:44:30] d2.utils.events INFO:  eta: 2:23:50  iter: 21219  total_loss: 0.199  loss_cls: 0.04563  loss_box_reg: 0.1297  loss_rpn_cls: 0.0008818  loss_rpn_loc: 0.01677  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:44:47] d2.utils.events INFO:  eta: 2:23:34  iter: 21239  total_loss: 0.2117  loss_cls: 0.05244  loss_box_reg: 0.141  loss_rpn_cls: 0.001129  loss_rpn_loc: 0.01533  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:45:06] d2.utils.events INFO:  eta: 2:23:17  iter: 21259  total_loss: 0.2215  loss_cls: 0.04345  loss_box_reg: 0.1443  loss_rpn_cls: 0.0009633  loss_rpn_loc: 0.01871  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:45:23] d2.utils.events INFO:  eta: 2:22:57  iter: 21279  total_loss: 0.2218  loss_cls: 0.04232  loss_box_reg: 0.1502  loss_rpn_cls: 0.0005458  loss_rpn_loc: 0.01793  time: 0.8836  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 10:45:41] d2.utils.events INFO:  eta: 2:22:38  iter: 21299  total_loss: 0.1714  loss_cls: 0.03359  loss_box_reg: 0.1219  loss_rpn_cls: 0.0006408  loss_rpn_loc: 0.01146  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:45:58] d2.utils.events INFO:  eta: 2:22:09  iter: 21319  total_loss: 0.2009  loss_cls: 0.04473  loss_box_reg: 0.126  loss_rpn_cls: 0.0007905  loss_rpn_loc: 0.02044  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:46:15] d2.utils.events INFO:  eta: 2:21:42  iter: 21339  total_loss: 0.2072  loss_cls: 0.04502  loss_box_reg: 0.1423  loss_rpn_cls: 0.0004752  loss_rpn_loc: 0.01732  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:46:33] d2.utils.events INFO:  eta: 2:21:20  iter: 21359  total_loss: 0.1849  loss_cls: 0.03975  loss_box_reg: 0.1327  loss_rpn_cls: 0.0008107  loss_rpn_loc: 0.0127  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:46:50] d2.utils.events INFO:  eta: 2:21:02  iter: 21379  total_loss: 0.1649  loss_cls: 0.03961  loss_box_reg: 0.1147  loss_rpn_cls: 0.001121  loss_rpn_loc: 0.01506  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:47:08] d2.utils.events INFO:  eta: 2:20:53  iter: 21399  total_loss: 0.1604  loss_cls: 0.03412  loss_box_reg: 0.1164  loss_rpn_cls: 0.0003328  loss_rpn_loc: 0.0133  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:47:25] d2.utils.events INFO:  eta: 2:20:47  iter: 21419  total_loss: 0.1822  loss_cls: 0.03426  loss_box_reg: 0.1361  loss_rpn_cls: 0.0003144  loss_rpn_loc: 0.01448  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:47:43] d2.utils.events INFO:  eta: 2:20:24  iter: 21439  total_loss: 0.1705  loss_cls: 0.03464  loss_box_reg: 0.119  loss_rpn_cls: 0.0006162  loss_rpn_loc: 0.01322  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:48:00] d2.utils.events INFO:  eta: 2:20:01  iter: 21459  total_loss: 0.1704  loss_cls: 0.03507  loss_box_reg: 0.1133  loss_rpn_cls: 0.0011  loss_rpn_loc: 0.01417  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:48:18] d2.utils.events INFO:  eta: 2:19:46  iter: 21479  total_loss: 0.2255  loss_cls: 0.04624  loss_box_reg: 0.1576  loss_rpn_cls: 0.0007262  loss_rpn_loc: 0.02107  time: 0.8835  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:48:36] d2.utils.events INFO:  eta: 2:19:26  iter: 21499  total_loss: 0.1618  loss_cls: 0.03363  loss_box_reg: 0.1142  loss_rpn_cls: 0.0008241  loss_rpn_loc: 0.01203  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:48:54] d2.utils.events INFO:  eta: 2:19:16  iter: 21519  total_loss: 0.1957  loss_cls: 0.0381  loss_box_reg: 0.1353  loss_rpn_cls: 0.0006598  loss_rpn_loc: 0.01447  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:49:12] d2.utils.events INFO:  eta: 2:19:04  iter: 21539  total_loss: 0.188  loss_cls: 0.04268  loss_box_reg: 0.1278  loss_rpn_cls: 0.0006468  loss_rpn_loc: 0.01371  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:49:29] d2.utils.events INFO:  eta: 2:18:52  iter: 21559  total_loss: 0.232  loss_cls: 0.05203  loss_box_reg: 0.1485  loss_rpn_cls: 0.0006291  loss_rpn_loc: 0.02126  time: 0.8835  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 10:49:47] d2.utils.events INFO:  eta: 2:18:31  iter: 21579  total_loss: 0.2116  loss_cls: 0.04184  loss_box_reg: 0.1391  loss_rpn_cls: 0.0004973  loss_rpn_loc: 0.01796  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:50:04] d2.utils.events INFO:  eta: 2:17:59  iter: 21599  total_loss: 0.1684  loss_cls: 0.02832  loss_box_reg: 0.1224  loss_rpn_cls: 0.0005898  loss_rpn_loc: 0.01148  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:50:22] d2.utils.events INFO:  eta: 2:17:45  iter: 21619  total_loss: 0.1723  loss_cls: 0.03675  loss_box_reg: 0.1279  loss_rpn_cls: 0.0004993  loss_rpn_loc: 0.01515  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:50:39] d2.utils.events INFO:  eta: 2:17:30  iter: 21639  total_loss: 0.1562  loss_cls: 0.03532  loss_box_reg: 0.1115  loss_rpn_cls: 0.0004221  loss_rpn_loc: 0.01202  time: 0.8835  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 10:50:57] d2.utils.events INFO:  eta: 2:17:20  iter: 21659  total_loss: 0.1802  loss_cls: 0.03963  loss_box_reg: 0.129  loss_rpn_cls: 0.0004706  loss_rpn_loc: 0.01568  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:51:15] d2.utils.events INFO:  eta: 2:16:46  iter: 21679  total_loss: 0.2658  loss_cls: 0.06596  loss_box_reg: 0.1531  loss_rpn_cls: 0.002242  loss_rpn_loc: 0.02637  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:51:32] d2.utils.events INFO:  eta: 2:16:28  iter: 21699  total_loss: 0.1836  loss_cls: 0.0445  loss_box_reg: 0.1203  loss_rpn_cls: 0.001037  loss_rpn_loc: 0.01792  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:51:50] d2.utils.events INFO:  eta: 2:16:13  iter: 21719  total_loss: 0.2046  loss_cls: 0.04567  loss_box_reg: 0.1426  loss_rpn_cls: 0.0006546  loss_rpn_loc: 0.01655  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:52:07] d2.utils.events INFO:  eta: 2:15:52  iter: 21739  total_loss: 0.1985  loss_cls: 0.04449  loss_box_reg: 0.1392  loss_rpn_cls: 0.0007069  loss_rpn_loc: 0.01671  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:52:23] d2.utils.events INFO:  eta: 2:15:30  iter: 21759  total_loss: 0.1689  loss_cls: 0.03299  loss_box_reg: 0.1248  loss_rpn_cls: 0.0007376  loss_rpn_loc: 0.01372  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 10:52:41] d2.utils.events INFO:  eta: 2:14:58  iter: 21779  total_loss: 0.2047  loss_cls: 0.0431  loss_box_reg: 0.1389  loss_rpn_cls: 0.001171  loss_rpn_loc: 0.01405  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:52:59] d2.utils.events INFO:  eta: 2:15:00  iter: 21799  total_loss: 0.1895  loss_cls: 0.04366  loss_box_reg: 0.1355  loss_rpn_cls: 0.0006258  loss_rpn_loc: 0.01437  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:53:17] d2.utils.events INFO:  eta: 2:14:37  iter: 21819  total_loss: 0.236  loss_cls: 0.04681  loss_box_reg: 0.1564  loss_rpn_cls: 0.0006111  loss_rpn_loc: 0.01796  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:53:35] d2.utils.events INFO:  eta: 2:14:28  iter: 21839  total_loss: 0.2155  loss_cls: 0.05427  loss_box_reg: 0.1433  loss_rpn_cls: 0.0008662  loss_rpn_loc: 0.01932  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:53:52] d2.utils.events INFO:  eta: 2:14:07  iter: 21859  total_loss: 0.1843  loss_cls: 0.04544  loss_box_reg: 0.1337  loss_rpn_cls: 0.0003275  loss_rpn_loc: 0.01338  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:54:10] d2.utils.events INFO:  eta: 2:13:58  iter: 21879  total_loss: 0.1748  loss_cls: 0.04372  loss_box_reg: 0.1129  loss_rpn_cls: 0.0008085  loss_rpn_loc: 0.01679  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:54:27] d2.utils.events INFO:  eta: 2:13:23  iter: 21899  total_loss: 0.1723  loss_cls: 0.03605  loss_box_reg: 0.1211  loss_rpn_cls: 0.001017  loss_rpn_loc: 0.01465  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:54:45] d2.utils.events INFO:  eta: 2:13:10  iter: 21919  total_loss: 0.1709  loss_cls: 0.04075  loss_box_reg: 0.121  loss_rpn_cls: 0.0005337  loss_rpn_loc: 0.01442  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:55:03] d2.utils.events INFO:  eta: 2:13:00  iter: 21939  total_loss: 0.2093  loss_cls: 0.05136  loss_box_reg: 0.1453  loss_rpn_cls: 0.0008431  loss_rpn_loc: 0.01721  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:55:20] d2.utils.events INFO:  eta: 2:12:42  iter: 21959  total_loss: 0.2101  loss_cls: 0.05266  loss_box_reg: 0.1306  loss_rpn_cls: 0.000453  loss_rpn_loc: 0.02043  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:55:38] d2.utils.events INFO:  eta: 2:12:29  iter: 21979  total_loss: 0.1859  loss_cls: 0.04161  loss_box_reg: 0.1373  loss_rpn_cls: 0.0006789  loss_rpn_loc: 0.01241  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:55:56] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 10:55:56] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 10:55:56] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 10:55:56] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 10:55:56] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 10:55:58] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:01:04
[04/03 10:56:03] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:59
[04/03 10:56:08] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:54
[04/03 10:56:13] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:49
[04/03 10:56:18] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:44
[04/03 10:56:23] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:39
[04/03 10:56:28] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:34
[04/03 10:56:33] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:29
[04/03 10:56:38] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:24
[04/03 10:56:43] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:19
[04/03 10:56:48] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:14
[04/03 10:56:53] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:09
[04/03 10:56:58] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0010 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:03
[04/03 10:57:02] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.288343 (0.120236 s / iter per device, on 1 devices)
[04/03 10:57:02] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118887 s / iter per device, on 1 devices)
[04/03 10:57:02] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 10:57:02] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 10:57:02] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 10:57:03] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 10:57:03] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.41 seconds.
[04/03 10:57:03] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 10:57:03] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.331 | 11.371 | 6.120  | 2.242 | 13.111 | 13.309 |
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 10:57:03] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.464  | people          | 3.389  | bicycle    | 2.581 |
| car        | 34.966 | van             | 13.880 | truck      | 0.000 |
| tricycle   | 3.023  | awning-tricycle | 0.884  | bus        | 0.000 |
| motor      | 4.395  | others          | 0.060  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 10:57:03] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 10:57:03] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 10:57:03] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 10:57:03] d2.evaluation.testing INFO: copypaste: 6.3311,11.3706,6.1195,2.2422,13.1112,13.3094,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 10:57:03] d2.utils.events INFO:  eta: 2:12:04  iter: 21999  total_loss: 0.2018  loss_cls: 0.04295  loss_box_reg: 0.1396  loss_rpn_cls: 0.000379  loss_rpn_loc: 0.01491  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:57:21] d2.utils.events INFO:  eta: 2:12:06  iter: 22019  total_loss: 0.1947  loss_cls: 0.04415  loss_box_reg: 0.1352  loss_rpn_cls: 0.0004168  loss_rpn_loc: 0.01653  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:57:38] d2.utils.events INFO:  eta: 2:11:53  iter: 22039  total_loss: 0.2035  loss_cls: 0.03593  loss_box_reg: 0.1403  loss_rpn_cls: 0.0008517  loss_rpn_loc: 0.02097  time: 0.8834  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:57:55] d2.utils.events INFO:  eta: 2:11:27  iter: 22059  total_loss: 0.2327  loss_cls: 0.04922  loss_box_reg: 0.1501  loss_rpn_cls: 0.000444  loss_rpn_loc: 0.01751  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:58:14] d2.utils.events INFO:  eta: 2:11:19  iter: 22079  total_loss: 0.1773  loss_cls: 0.03833  loss_box_reg: 0.1122  loss_rpn_cls: 0.0007006  loss_rpn_loc: 0.0175  time: 0.8833  data_time: 0.0028  lr: 0.0002  max_mem: 15391M
[04/03 10:58:32] d2.utils.events INFO:  eta: 2:11:20  iter: 22099  total_loss: 0.1562  loss_cls: 0.03521  loss_box_reg: 0.1161  loss_rpn_cls: 0.0003266  loss_rpn_loc: 0.01208  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:58:49] d2.utils.events INFO:  eta: 2:11:04  iter: 22119  total_loss: 0.1789  loss_cls: 0.03784  loss_box_reg: 0.117  loss_rpn_cls: 0.0004278  loss_rpn_loc: 0.01423  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:59:07] d2.utils.events INFO:  eta: 2:10:54  iter: 22139  total_loss: 0.2364  loss_cls: 0.05583  loss_box_reg: 0.156  loss_rpn_cls: 0.001084  loss_rpn_loc: 0.02008  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 10:59:24] d2.utils.events INFO:  eta: 2:10:33  iter: 22159  total_loss: 0.1679  loss_cls: 0.03726  loss_box_reg: 0.1145  loss_rpn_cls: 0.0002778  loss_rpn_loc: 0.01394  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:59:41] d2.utils.events INFO:  eta: 2:10:18  iter: 22179  total_loss: 0.1962  loss_cls: 0.04299  loss_box_reg: 0.1309  loss_rpn_cls: 0.0004938  loss_rpn_loc: 0.01726  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 10:59:59] d2.utils.events INFO:  eta: 2:09:57  iter: 22199  total_loss: 0.1667  loss_cls: 0.03123  loss_box_reg: 0.125  loss_rpn_cls: 0.0007465  loss_rpn_loc: 0.01376  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:00:16] d2.utils.events INFO:  eta: 2:09:40  iter: 22219  total_loss: 0.1818  loss_cls: 0.04516  loss_box_reg: 0.1228  loss_rpn_cls: 0.0009237  loss_rpn_loc: 0.01443  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:00:34] d2.utils.events INFO:  eta: 2:09:19  iter: 22239  total_loss: 0.1891  loss_cls: 0.03578  loss_box_reg: 0.1243  loss_rpn_cls: 0.0005721  loss_rpn_loc: 0.01647  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:00:51] d2.utils.events INFO:  eta: 2:08:59  iter: 22259  total_loss: 0.1616  loss_cls: 0.03289  loss_box_reg: 0.1121  loss_rpn_cls: 0.0004418  loss_rpn_loc: 0.01346  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:01:08] d2.utils.events INFO:  eta: 2:08:34  iter: 22279  total_loss: 0.1949  loss_cls: 0.04726  loss_box_reg: 0.1398  loss_rpn_cls: 0.00047  loss_rpn_loc: 0.01395  time: 0.8832  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:01:27] d2.utils.events INFO:  eta: 2:08:22  iter: 22299  total_loss: 0.1511  loss_cls: 0.03214  loss_box_reg: 0.1039  loss_rpn_cls: 0.0002557  loss_rpn_loc: 0.01344  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:01:44] d2.utils.events INFO:  eta: 2:08:06  iter: 22319  total_loss: 0.2092  loss_cls: 0.03987  loss_box_reg: 0.1514  loss_rpn_cls: 0.001046  loss_rpn_loc: 0.01647  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:02:02] d2.utils.events INFO:  eta: 2:07:59  iter: 22339  total_loss: 0.2141  loss_cls: 0.04787  loss_box_reg: 0.1345  loss_rpn_cls: 0.001046  loss_rpn_loc: 0.01848  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:02:20] d2.utils.events INFO:  eta: 2:07:39  iter: 22359  total_loss: 0.2107  loss_cls: 0.04824  loss_box_reg: 0.1443  loss_rpn_cls: 0.0004011  loss_rpn_loc: 0.01736  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:02:38] d2.utils.events INFO:  eta: 2:07:25  iter: 22379  total_loss: 0.2028  loss_cls: 0.03827  loss_box_reg: 0.1315  loss_rpn_cls: 0.0009513  loss_rpn_loc: 0.01684  time: 0.8833  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:02:56] d2.utils.events INFO:  eta: 2:07:08  iter: 22399  total_loss: 0.2344  loss_cls: 0.04827  loss_box_reg: 0.1593  loss_rpn_cls: 0.0005933  loss_rpn_loc: 0.01801  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:03:14] d2.utils.events INFO:  eta: 2:06:51  iter: 22419  total_loss: 0.2237  loss_cls: 0.04965  loss_box_reg: 0.1495  loss_rpn_cls: 0.0007319  loss_rpn_loc: 0.01714  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:03:31] d2.utils.events INFO:  eta: 2:06:33  iter: 22439  total_loss: 0.198  loss_cls: 0.04318  loss_box_reg: 0.1443  loss_rpn_cls: 0.0006781  loss_rpn_loc: 0.01408  time: 0.8833  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:03:49] d2.utils.events INFO:  eta: 2:06:19  iter: 22459  total_loss: 0.1829  loss_cls: 0.03932  loss_box_reg: 0.1172  loss_rpn_cls: 0.0008788  loss_rpn_loc: 0.02064  time: 0.8833  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:04:08] d2.utils.events INFO:  eta: 2:06:06  iter: 22479  total_loss: 0.1677  loss_cls: 0.03911  loss_box_reg: 0.1191  loss_rpn_cls: 0.0005988  loss_rpn_loc: 0.01425  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:04:26] d2.utils.events INFO:  eta: 2:05:40  iter: 22499  total_loss: 0.183  loss_cls: 0.03777  loss_box_reg: 0.1296  loss_rpn_cls: 0.0007945  loss_rpn_loc: 0.01245  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:04:44] d2.utils.events INFO:  eta: 2:05:29  iter: 22519  total_loss: 0.1839  loss_cls: 0.04167  loss_box_reg: 0.1231  loss_rpn_cls: 0.0007532  loss_rpn_loc: 0.01531  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:05:02] d2.utils.events INFO:  eta: 2:05:03  iter: 22539  total_loss: 0.1637  loss_cls: 0.03614  loss_box_reg: 0.1234  loss_rpn_cls: 0.0003785  loss_rpn_loc: 0.01428  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:05:20] d2.utils.events INFO:  eta: 2:04:46  iter: 22559  total_loss: 0.196  loss_cls: 0.03775  loss_box_reg: 0.1358  loss_rpn_cls: 0.0007206  loss_rpn_loc: 0.01662  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:05:39] d2.utils.events INFO:  eta: 2:04:41  iter: 22579  total_loss: 0.1857  loss_cls: 0.04027  loss_box_reg: 0.1248  loss_rpn_cls: 0.000643  loss_rpn_loc: 0.0157  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:05:57] d2.utils.events INFO:  eta: 2:04:36  iter: 22599  total_loss: 0.212  loss_cls: 0.0434  loss_box_reg: 0.1542  loss_rpn_cls: 0.0008017  loss_rpn_loc: 0.01681  time: 0.8835  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:06:15] d2.utils.events INFO:  eta: 2:04:17  iter: 22619  total_loss: 0.1803  loss_cls: 0.04186  loss_box_reg: 0.1333  loss_rpn_cls: 0.0006339  loss_rpn_loc: 0.01605  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:06:32] d2.utils.events INFO:  eta: 2:03:53  iter: 22639  total_loss: 0.1474  loss_cls: 0.0315  loss_box_reg: 0.1098  loss_rpn_cls: 0.0003966  loss_rpn_loc: 0.01104  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:06:49] d2.utils.events INFO:  eta: 2:03:30  iter: 22659  total_loss: 0.1817  loss_cls: 0.04026  loss_box_reg: 0.1235  loss_rpn_cls: 0.0007797  loss_rpn_loc: 0.01707  time: 0.8835  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:07:08] d2.utils.events INFO:  eta: 2:03:24  iter: 22679  total_loss: 0.1602  loss_cls: 0.03432  loss_box_reg: 0.1111  loss_rpn_cls: 0.0004925  loss_rpn_loc: 0.01271  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:07:26] d2.utils.events INFO:  eta: 2:03:07  iter: 22699  total_loss: 0.2168  loss_cls: 0.04725  loss_box_reg: 0.1532  loss_rpn_cls: 0.0004294  loss_rpn_loc: 0.01821  time: 0.8835  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:07:43] d2.utils.events INFO:  eta: 2:02:48  iter: 22719  total_loss: 0.2011  loss_cls: 0.04447  loss_box_reg: 0.1395  loss_rpn_cls: 0.0006662  loss_rpn_loc: 0.01797  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:08:02] d2.utils.events INFO:  eta: 2:02:39  iter: 22739  total_loss: 0.1543  loss_cls: 0.03379  loss_box_reg: 0.1114  loss_rpn_cls: 0.0006192  loss_rpn_loc: 0.01056  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:08:20] d2.utils.events INFO:  eta: 2:02:25  iter: 22759  total_loss: 0.1838  loss_cls: 0.04111  loss_box_reg: 0.1293  loss_rpn_cls: 0.0005136  loss_rpn_loc: 0.01489  time: 0.8835  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 11:08:38] d2.utils.events INFO:  eta: 2:02:17  iter: 22779  total_loss: 0.2182  loss_cls: 0.04236  loss_box_reg: 0.1463  loss_rpn_cls: 0.0006018  loss_rpn_loc: 0.01625  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:08:56] d2.utils.events INFO:  eta: 2:01:59  iter: 22799  total_loss: 0.2001  loss_cls: 0.05573  loss_box_reg: 0.1369  loss_rpn_cls: 0.001107  loss_rpn_loc: 0.01611  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:09:14] d2.utils.events INFO:  eta: 2:01:54  iter: 22819  total_loss: 0.1729  loss_cls: 0.03064  loss_box_reg: 0.1134  loss_rpn_cls: 0.0006419  loss_rpn_loc: 0.01399  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:09:33] d2.utils.events INFO:  eta: 2:01:40  iter: 22839  total_loss: 0.1996  loss_cls: 0.03857  loss_box_reg: 0.1484  loss_rpn_cls: 0.000387  loss_rpn_loc: 0.01386  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:09:50] d2.utils.events INFO:  eta: 2:01:30  iter: 22859  total_loss: 0.2151  loss_cls: 0.04607  loss_box_reg: 0.1442  loss_rpn_cls: 0.0005145  loss_rpn_loc: 0.01875  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:10:08] d2.utils.events INFO:  eta: 2:01:06  iter: 22879  total_loss: 0.2036  loss_cls: 0.04136  loss_box_reg: 0.1373  loss_rpn_cls: 0.0005614  loss_rpn_loc: 0.0146  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:10:27] d2.utils.events INFO:  eta: 2:01:07  iter: 22899  total_loss: 0.1961  loss_cls: 0.04599  loss_box_reg: 0.1373  loss_rpn_cls: 0.0005656  loss_rpn_loc: 0.01712  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:10:44] d2.utils.events INFO:  eta: 2:00:35  iter: 22919  total_loss: 0.2227  loss_cls: 0.05032  loss_box_reg: 0.1531  loss_rpn_cls: 0.000923  loss_rpn_loc: 0.01768  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:11:02] d2.utils.events INFO:  eta: 2:00:17  iter: 22939  total_loss: 0.2371  loss_cls: 0.05363  loss_box_reg: 0.1581  loss_rpn_cls: 0.0007277  loss_rpn_loc: 0.01885  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:11:19] d2.utils.events INFO:  eta: 1:59:59  iter: 22959  total_loss: 0.212  loss_cls: 0.04379  loss_box_reg: 0.1505  loss_rpn_cls: 0.0004559  loss_rpn_loc: 0.01443  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:11:37] d2.utils.events INFO:  eta: 1:59:43  iter: 22979  total_loss: 0.1752  loss_cls: 0.03716  loss_box_reg: 0.1159  loss_rpn_cls: 0.0005739  loss_rpn_loc: 0.01813  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:11:56] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 11:11:56] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 11:11:56] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 11:11:56] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 11:11:56] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 11:11:57] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1221 s/iter. Eval: 0.0002 s/iter. Total: 0.1230 s/iter. ETA=0:01:06
[04/03 11:12:03] d2.evaluation.evaluator INFO: Inference done 51/548. Dataloading: 0.0009 s/iter. Inference: 0.1260 s/iter. Eval: 0.0003 s/iter. Total: 0.1272 s/iter. ETA=0:01:03
[04/03 11:12:08] d2.evaluation.evaluator INFO: Inference done 91/548. Dataloading: 0.0009 s/iter. Inference: 0.1252 s/iter. Eval: 0.0002 s/iter. Total: 0.1264 s/iter. ETA=0:00:57
[04/03 11:12:13] d2.evaluation.evaluator INFO: Inference done 131/548. Dataloading: 0.0009 s/iter. Inference: 0.1255 s/iter. Eval: 0.0002 s/iter. Total: 0.1267 s/iter. ETA=0:00:52
[04/03 11:12:18] d2.evaluation.evaluator INFO: Inference done 171/548. Dataloading: 0.0009 s/iter. Inference: 0.1257 s/iter. Eval: 0.0002 s/iter. Total: 0.1268 s/iter. ETA=0:00:47
[04/03 11:12:23] d2.evaluation.evaluator INFO: Inference done 210/548. Dataloading: 0.0009 s/iter. Inference: 0.1262 s/iter. Eval: 0.0002 s/iter. Total: 0.1274 s/iter. ETA=0:00:43
[04/03 11:12:28] d2.evaluation.evaluator INFO: Inference done 249/548. Dataloading: 0.0009 s/iter. Inference: 0.1266 s/iter. Eval: 0.0002 s/iter. Total: 0.1278 s/iter. ETA=0:00:38
[04/03 11:12:33] d2.evaluation.evaluator INFO: Inference done 288/548. Dataloading: 0.0009 s/iter. Inference: 0.1268 s/iter. Eval: 0.0002 s/iter. Total: 0.1279 s/iter. ETA=0:00:33
[04/03 11:12:38] d2.evaluation.evaluator INFO: Inference done 328/548. Dataloading: 0.0009 s/iter. Inference: 0.1266 s/iter. Eval: 0.0002 s/iter. Total: 0.1278 s/iter. ETA=0:00:28
[04/03 11:12:43] d2.evaluation.evaluator INFO: Inference done 368/548. Dataloading: 0.0009 s/iter. Inference: 0.1267 s/iter. Eval: 0.0002 s/iter. Total: 0.1279 s/iter. ETA=0:00:23
[04/03 11:12:48] d2.evaluation.evaluator INFO: Inference done 407/548. Dataloading: 0.0010 s/iter. Inference: 0.1268 s/iter. Eval: 0.0002 s/iter. Total: 0.1280 s/iter. ETA=0:00:18
[04/03 11:12:53] d2.evaluation.evaluator INFO: Inference done 446/548. Dataloading: 0.0010 s/iter. Inference: 0.1269 s/iter. Eval: 0.0002 s/iter. Total: 0.1281 s/iter. ETA=0:00:13
[04/03 11:12:58] d2.evaluation.evaluator INFO: Inference done 485/548. Dataloading: 0.0010 s/iter. Inference: 0.1270 s/iter. Eval: 0.0002 s/iter. Total: 0.1282 s/iter. ETA=0:00:08
[04/03 11:13:03] d2.evaluation.evaluator INFO: Inference done 525/548. Dataloading: 0.0010 s/iter. Inference: 0.1270 s/iter. Eval: 0.0002 s/iter. Total: 0.1282 s/iter. ETA=0:00:02
[04/03 11:13:06] d2.evaluation.evaluator INFO: Total inference time: 0:01:09.719505 (0.128397 s / iter per device, on 1 devices)
[04/03 11:13:06] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:08 (0.126990 s / iter per device, on 1 devices)
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 11:13:07] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 11:13:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.52 seconds.
[04/03 11:13:07] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 11:13:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.225 | 11.570 | 5.958  | 2.190 | 12.926 | 12.244 |
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 11:13:07] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.645  | people          | 3.436  | bicycle    | 2.793 |
| car        | 33.988 | van             | 12.870 | truck      | 0.000 |
| tricycle   | 2.987  | awning-tricycle | 0.703  | bus        | 0.000 |
| motor      | 5.031  | others          | 0.025  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 11:13:07] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 11:13:07] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 11:13:07] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 11:13:07] d2.evaluation.testing INFO: copypaste: 6.2252,11.5699,5.9578,2.1901,12.9260,12.2445,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 11:13:07] d2.utils.events INFO:  eta: 1:59:39  iter: 22999  total_loss: 0.1779  loss_cls: 0.03884  loss_box_reg: 0.1192  loss_rpn_cls: 0.0002804  loss_rpn_loc: 0.0133  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:13:26] d2.utils.events INFO:  eta: 1:59:25  iter: 23019  total_loss: 0.1672  loss_cls: 0.03532  loss_box_reg: 0.114  loss_rpn_cls: 0.0005064  loss_rpn_loc: 0.01396  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:13:45] d2.utils.events INFO:  eta: 1:59:11  iter: 23039  total_loss: 0.1796  loss_cls: 0.04164  loss_box_reg: 0.1205  loss_rpn_cls: 0.0003828  loss_rpn_loc: 0.0145  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:14:02] d2.utils.events INFO:  eta: 1:58:59  iter: 23059  total_loss: 0.2301  loss_cls: 0.0522  loss_box_reg: 0.1477  loss_rpn_cls: 0.0004851  loss_rpn_loc: 0.01367  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:14:21] d2.utils.events INFO:  eta: 1:58:51  iter: 23079  total_loss: 0.1956  loss_cls: 0.04023  loss_box_reg: 0.1341  loss_rpn_cls: 0.001005  loss_rpn_loc: 0.01517  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:14:40] d2.utils.events INFO:  eta: 1:58:35  iter: 23099  total_loss: 0.2057  loss_cls: 0.04173  loss_box_reg: 0.1392  loss_rpn_cls: 0.0005274  loss_rpn_loc: 0.0168  time: 0.8839  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:14:58] d2.utils.events INFO:  eta: 1:58:17  iter: 23119  total_loss: 0.1865  loss_cls: 0.04408  loss_box_reg: 0.1307  loss_rpn_cls: 0.001105  loss_rpn_loc: 0.01701  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:15:16] d2.utils.events INFO:  eta: 1:57:57  iter: 23139  total_loss: 0.1913  loss_cls: 0.04531  loss_box_reg: 0.1283  loss_rpn_cls: 0.0002787  loss_rpn_loc: 0.0166  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:15:36] d2.utils.events INFO:  eta: 1:57:57  iter: 23159  total_loss: 0.1921  loss_cls: 0.0356  loss_box_reg: 0.1319  loss_rpn_cls: 0.0004286  loss_rpn_loc: 0.01689  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:15:54] d2.utils.events INFO:  eta: 1:57:45  iter: 23179  total_loss: 0.1794  loss_cls: 0.0336  loss_box_reg: 0.1243  loss_rpn_cls: 0.001038  loss_rpn_loc: 0.01592  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:16:13] d2.utils.events INFO:  eta: 1:57:43  iter: 23199  total_loss: 0.1809  loss_cls: 0.04473  loss_box_reg: 0.1224  loss_rpn_cls: 0.0005433  loss_rpn_loc: 0.01495  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:16:32] d2.utils.events INFO:  eta: 1:57:37  iter: 23219  total_loss: 0.1686  loss_cls: 0.03751  loss_box_reg: 0.1218  loss_rpn_cls: 0.0002981  loss_rpn_loc: 0.01533  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:16:50] d2.utils.events INFO:  eta: 1:57:32  iter: 23239  total_loss: 0.1667  loss_cls: 0.03437  loss_box_reg: 0.107  loss_rpn_cls: 0.0001818  loss_rpn_loc: 0.014  time: 0.8841  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:17:08] d2.utils.events INFO:  eta: 1:57:17  iter: 23259  total_loss: 0.2216  loss_cls: 0.04884  loss_box_reg: 0.1468  loss_rpn_cls: 0.0008974  loss_rpn_loc: 0.01727  time: 0.8841  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 11:17:26] d2.utils.events INFO:  eta: 1:57:09  iter: 23279  total_loss: 0.1897  loss_cls: 0.03907  loss_box_reg: 0.1365  loss_rpn_cls: 0.0003946  loss_rpn_loc: 0.01355  time: 0.8841  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:17:43] d2.utils.events INFO:  eta: 1:56:40  iter: 23299  total_loss: 0.1673  loss_cls: 0.03321  loss_box_reg: 0.1226  loss_rpn_cls: 0.0004573  loss_rpn_loc: 0.01583  time: 0.8841  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:18:02] d2.utils.events INFO:  eta: 1:56:35  iter: 23319  total_loss: 0.2143  loss_cls: 0.04718  loss_box_reg: 0.14  loss_rpn_cls: 0.0009147  loss_rpn_loc: 0.01948  time: 0.8842  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:18:19] d2.utils.events INFO:  eta: 1:56:01  iter: 23339  total_loss: 0.1963  loss_cls: 0.04977  loss_box_reg: 0.1287  loss_rpn_cls: 0.0005808  loss_rpn_loc: 0.01637  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:18:37] d2.utils.events INFO:  eta: 1:55:38  iter: 23359  total_loss: 0.1784  loss_cls: 0.03542  loss_box_reg: 0.1106  loss_rpn_cls: 0.0003729  loss_rpn_loc: 0.01521  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:18:54] d2.utils.events INFO:  eta: 1:55:00  iter: 23379  total_loss: 0.1713  loss_cls: 0.04112  loss_box_reg: 0.1239  loss_rpn_cls: 0.0004983  loss_rpn_loc: 0.01513  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:19:12] d2.utils.events INFO:  eta: 1:54:36  iter: 23399  total_loss: 0.2042  loss_cls: 0.04528  loss_box_reg: 0.1322  loss_rpn_cls: 0.0009154  loss_rpn_loc: 0.01694  time: 0.8841  data_time: 0.0023  lr: 0.0002  max_mem: 15391M
[04/03 11:19:29] d2.utils.events INFO:  eta: 1:54:16  iter: 23419  total_loss: 0.1481  loss_cls: 0.02773  loss_box_reg: 0.101  loss_rpn_cls: 0.000489  loss_rpn_loc: 0.01058  time: 0.8841  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:19:46] d2.utils.events INFO:  eta: 1:53:56  iter: 23439  total_loss: 0.1837  loss_cls: 0.04169  loss_box_reg: 0.1189  loss_rpn_cls: 0.0003852  loss_rpn_loc: 0.017  time: 0.8840  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:20:03] d2.utils.events INFO:  eta: 1:53:37  iter: 23459  total_loss: 0.2215  loss_cls: 0.05247  loss_box_reg: 0.1449  loss_rpn_cls: 0.001306  loss_rpn_loc: 0.02687  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:20:21] d2.utils.events INFO:  eta: 1:53:14  iter: 23479  total_loss: 0.1968  loss_cls: 0.04997  loss_box_reg: 0.1315  loss_rpn_cls: 0.001004  loss_rpn_loc: 0.01835  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:20:39] d2.utils.events INFO:  eta: 1:52:58  iter: 23499  total_loss: 0.1869  loss_cls: 0.04194  loss_box_reg: 0.1257  loss_rpn_cls: 0.0005358  loss_rpn_loc: 0.01546  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:20:57] d2.utils.events INFO:  eta: 1:52:41  iter: 23519  total_loss: 0.1894  loss_cls: 0.03988  loss_box_reg: 0.1213  loss_rpn_cls: 0.00125  loss_rpn_loc: 0.01306  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:21:13] d2.utils.events INFO:  eta: 1:52:21  iter: 23539  total_loss: 0.1907  loss_cls: 0.03876  loss_box_reg: 0.1359  loss_rpn_cls: 0.0004185  loss_rpn_loc: 0.01373  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:21:31] d2.utils.events INFO:  eta: 1:51:58  iter: 23559  total_loss: 0.1891  loss_cls: 0.04024  loss_box_reg: 0.1281  loss_rpn_cls: 0.001268  loss_rpn_loc: 0.01629  time: 0.8840  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:21:49] d2.utils.events INFO:  eta: 1:51:35  iter: 23579  total_loss: 0.2026  loss_cls: 0.04651  loss_box_reg: 0.1407  loss_rpn_cls: 0.0007276  loss_rpn_loc: 0.01684  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:22:06] d2.utils.events INFO:  eta: 1:51:07  iter: 23599  total_loss: 0.1761  loss_cls: 0.0355  loss_box_reg: 0.1147  loss_rpn_cls: 0.0005166  loss_rpn_loc: 0.01612  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:22:23] d2.utils.events INFO:  eta: 1:50:49  iter: 23619  total_loss: 0.177  loss_cls: 0.04067  loss_box_reg: 0.1182  loss_rpn_cls: 0.0006025  loss_rpn_loc: 0.01505  time: 0.8840  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 11:22:41] d2.utils.events INFO:  eta: 1:50:37  iter: 23639  total_loss: 0.1882  loss_cls: 0.04675  loss_box_reg: 0.1251  loss_rpn_cls: 0.000894  loss_rpn_loc: 0.01515  time: 0.8840  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:22:58] d2.utils.events INFO:  eta: 1:50:16  iter: 23659  total_loss: 0.2033  loss_cls: 0.04435  loss_box_reg: 0.1387  loss_rpn_cls: 0.0003774  loss_rpn_loc: 0.01536  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:23:16] d2.utils.events INFO:  eta: 1:49:55  iter: 23679  total_loss: 0.199  loss_cls: 0.04163  loss_box_reg: 0.1286  loss_rpn_cls: 0.0007484  loss_rpn_loc: 0.01688  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:23:34] d2.utils.events INFO:  eta: 1:49:35  iter: 23699  total_loss: 0.1762  loss_cls: 0.03342  loss_box_reg: 0.1237  loss_rpn_cls: 0.0003945  loss_rpn_loc: 0.01287  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:23:51] d2.utils.events INFO:  eta: 1:49:17  iter: 23719  total_loss: 0.1763  loss_cls: 0.03837  loss_box_reg: 0.1233  loss_rpn_cls: 0.0004406  loss_rpn_loc: 0.01286  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:24:08] d2.utils.events INFO:  eta: 1:48:48  iter: 23739  total_loss: 0.1779  loss_cls: 0.0366  loss_box_reg: 0.1333  loss_rpn_cls: 0.001005  loss_rpn_loc: 0.01268  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:24:26] d2.utils.events INFO:  eta: 1:48:24  iter: 23759  total_loss: 0.1846  loss_cls: 0.03254  loss_box_reg: 0.1321  loss_rpn_cls: 0.0006299  loss_rpn_loc: 0.0148  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:24:43] d2.utils.events INFO:  eta: 1:47:52  iter: 23779  total_loss: 0.1695  loss_cls: 0.02978  loss_box_reg: 0.1159  loss_rpn_cls: 0.0009928  loss_rpn_loc: 0.01445  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:25:01] d2.utils.events INFO:  eta: 1:47:34  iter: 23799  total_loss: 0.1905  loss_cls: 0.03934  loss_box_reg: 0.1273  loss_rpn_cls: 0.001413  loss_rpn_loc: 0.01948  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 11:25:19] d2.utils.events INFO:  eta: 1:47:11  iter: 23819  total_loss: 0.1873  loss_cls: 0.04163  loss_box_reg: 0.1267  loss_rpn_cls: 0.000682  loss_rpn_loc: 0.01698  time: 0.8839  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 11:25:36] d2.utils.events INFO:  eta: 1:46:34  iter: 23839  total_loss: 0.2023  loss_cls: 0.04546  loss_box_reg: 0.148  loss_rpn_cls: 0.0008592  loss_rpn_loc: 0.01888  time: 0.8839  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:25:54] d2.utils.events INFO:  eta: 1:46:11  iter: 23859  total_loss: 0.1884  loss_cls: 0.03459  loss_box_reg: 0.1315  loss_rpn_cls: 0.000512  loss_rpn_loc: 0.01555  time: 0.8839  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:26:10] d2.utils.events INFO:  eta: 1:45:47  iter: 23879  total_loss: 0.2079  loss_cls: 0.04478  loss_box_reg: 0.1423  loss_rpn_cls: 0.0004307  loss_rpn_loc: 0.01901  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:26:28] d2.utils.events INFO:  eta: 1:45:23  iter: 23899  total_loss: 0.1811  loss_cls: 0.04225  loss_box_reg: 0.1186  loss_rpn_cls: 0.0005728  loss_rpn_loc: 0.01262  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:26:45] d2.utils.events INFO:  eta: 1:45:07  iter: 23919  total_loss: 0.1865  loss_cls: 0.0343  loss_box_reg: 0.126  loss_rpn_cls: 0.0003576  loss_rpn_loc: 0.01057  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:27:03] d2.utils.events INFO:  eta: 1:44:50  iter: 23939  total_loss: 0.1474  loss_cls: 0.03096  loss_box_reg: 0.1029  loss_rpn_cls: 0.0005265  loss_rpn_loc: 0.01244  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:27:20] d2.utils.events INFO:  eta: 1:44:35  iter: 23959  total_loss: 0.1605  loss_cls: 0.032  loss_box_reg: 0.1095  loss_rpn_cls: 0.0004298  loss_rpn_loc: 0.01404  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:27:38] d2.utils.events INFO:  eta: 1:44:15  iter: 23979  total_loss: 0.1949  loss_cls: 0.0484  loss_box_reg: 0.1307  loss_rpn_cls: 0.0006845  loss_rpn_loc: 0.01873  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:27:55] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 11:27:56] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 11:27:56] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 11:27:56] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 11:27:56] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 11:27:57] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1171 s/iter. Eval: 0.0001 s/iter. Total: 0.1179 s/iter. ETA=0:01:03
[04/03 11:28:03] d2.evaluation.evaluator INFO: Inference done 54/548. Dataloading: 0.0009 s/iter. Inference: 0.1177 s/iter. Eval: 0.0002 s/iter. Total: 0.1188 s/iter. ETA=0:00:58
[04/03 11:28:08] d2.evaluation.evaluator INFO: Inference done 97/548. Dataloading: 0.0009 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1189 s/iter. ETA=0:00:53
[04/03 11:28:13] d2.evaluation.evaluator INFO: Inference done 140/548. Dataloading: 0.0009 s/iter. Inference: 0.1177 s/iter. Eval: 0.0002 s/iter. Total: 0.1188 s/iter. ETA=0:00:48
[04/03 11:28:18] d2.evaluation.evaluator INFO: Inference done 183/548. Dataloading: 0.0009 s/iter. Inference: 0.1177 s/iter. Eval: 0.0002 s/iter. Total: 0.1188 s/iter. ETA=0:00:43
[04/03 11:28:23] d2.evaluation.evaluator INFO: Inference done 225/548. Dataloading: 0.0009 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1189 s/iter. ETA=0:00:38
[04/03 11:28:28] d2.evaluation.evaluator INFO: Inference done 267/548. Dataloading: 0.0009 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1189 s/iter. ETA=0:00:33
[04/03 11:28:33] d2.evaluation.evaluator INFO: Inference done 309/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:28
[04/03 11:28:38] d2.evaluation.evaluator INFO: Inference done 351/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1191 s/iter. ETA=0:00:23
[04/03 11:28:43] d2.evaluation.evaluator INFO: Inference done 393/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1191 s/iter. ETA=0:00:18
[04/03 11:28:48] d2.evaluation.evaluator INFO: Inference done 435/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:13
[04/03 11:28:53] d2.evaluation.evaluator INFO: Inference done 477/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:08
[04/03 11:28:58] d2.evaluation.evaluator INFO: Inference done 519/548. Dataloading: 0.0009 s/iter. Inference: 0.1182 s/iter. Eval: 0.0002 s/iter. Total: 0.1193 s/iter. ETA=0:00:03
[04/03 11:29:02] d2.evaluation.evaluator INFO: Total inference time: 0:01:04.868148 (0.119463 s / iter per device, on 1 devices)
[04/03 11:29:02] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118206 s / iter per device, on 1 devices)
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 11:29:02] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 11:29:02] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.43 seconds.
[04/03 11:29:02] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 11:29:02] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.568 | 11.974 | 6.276  | 2.345 | 13.727 | 13.767 |
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 11:29:02] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.440  | people          | 4.192  | bicycle    | 2.667 |
| car        | 34.873 | van             | 13.305 | truck      | 0.000 |
| tricycle   | 3.306  | awning-tricycle | 0.691  | bus        | 0.000 |
| motor      | 5.713  | others          | 0.064  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 11:29:02] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 11:29:02] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 11:29:02] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 11:29:02] d2.evaluation.testing INFO: copypaste: 6.5683,11.9735,6.2763,2.3450,13.7270,13.7674,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 11:29:02] d2.utils.events INFO:  eta: 1:43:45  iter: 23999  total_loss: 0.2131  loss_cls: 0.04359  loss_box_reg: 0.1534  loss_rpn_cls: 0.0009009  loss_rpn_loc: 0.01647  time: 0.8838  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:29:21] d2.utils.events INFO:  eta: 1:43:27  iter: 24019  total_loss: 0.1813  loss_cls: 0.03039  loss_box_reg: 0.1288  loss_rpn_cls: 0.0003347  loss_rpn_loc: 0.01102  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:29:38] d2.utils.events INFO:  eta: 1:43:07  iter: 24039  total_loss: 0.197  loss_cls: 0.03865  loss_box_reg: 0.1348  loss_rpn_cls: 0.0005106  loss_rpn_loc: 0.02022  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:29:56] d2.utils.events INFO:  eta: 1:42:47  iter: 24059  total_loss: 0.2124  loss_cls: 0.04242  loss_box_reg: 0.143  loss_rpn_cls: 0.001609  loss_rpn_loc: 0.01706  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:30:13] d2.utils.events INFO:  eta: 1:42:17  iter: 24079  total_loss: 0.1721  loss_cls: 0.03806  loss_box_reg: 0.1183  loss_rpn_cls: 0.0005011  loss_rpn_loc: 0.01672  time: 0.8838  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:30:30] d2.utils.events INFO:  eta: 1:41:52  iter: 24099  total_loss: 0.1665  loss_cls: 0.03244  loss_box_reg: 0.1154  loss_rpn_cls: 0.0002253  loss_rpn_loc: 0.01085  time: 0.8838  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:30:48] d2.utils.events INFO:  eta: 1:41:27  iter: 24119  total_loss: 0.1939  loss_cls: 0.04107  loss_box_reg: 0.1333  loss_rpn_cls: 0.0005801  loss_rpn_loc: 0.01607  time: 0.8837  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:31:06] d2.utils.events INFO:  eta: 1:41:09  iter: 24139  total_loss: 0.1662  loss_cls: 0.03408  loss_box_reg: 0.121  loss_rpn_cls: 0.0005075  loss_rpn_loc: 0.01386  time: 0.8837  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:31:23] d2.utils.events INFO:  eta: 1:40:38  iter: 24159  total_loss: 0.1611  loss_cls: 0.03516  loss_box_reg: 0.1239  loss_rpn_cls: 0.0004149  loss_rpn_loc: 0.0147  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:31:40] d2.utils.events INFO:  eta: 1:40:14  iter: 24179  total_loss: 0.2007  loss_cls: 0.04576  loss_box_reg: 0.1316  loss_rpn_cls: 0.001176  loss_rpn_loc: 0.01607  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:31:58] d2.utils.events INFO:  eta: 1:39:47  iter: 24199  total_loss: 0.1515  loss_cls: 0.03218  loss_box_reg: 0.1024  loss_rpn_cls: 0.0004102  loss_rpn_loc: 0.01139  time: 0.8837  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:32:15] d2.utils.events INFO:  eta: 1:39:24  iter: 24219  total_loss: 0.1904  loss_cls: 0.04292  loss_box_reg: 0.125  loss_rpn_cls: 0.0003083  loss_rpn_loc: 0.01606  time: 0.8837  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 11:32:32] d2.utils.events INFO:  eta: 1:39:03  iter: 24239  total_loss: 0.1987  loss_cls: 0.04443  loss_box_reg: 0.1432  loss_rpn_cls: 0.0006379  loss_rpn_loc: 0.01744  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:32:50] d2.utils.events INFO:  eta: 1:38:41  iter: 24259  total_loss: 0.1472  loss_cls: 0.02934  loss_box_reg: 0.1014  loss_rpn_cls: 0.0002854  loss_rpn_loc: 0.01124  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:33:08] d2.utils.events INFO:  eta: 1:38:25  iter: 24279  total_loss: 0.1693  loss_cls: 0.043  loss_box_reg: 0.1172  loss_rpn_cls: 0.000962  loss_rpn_loc: 0.01516  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:33:26] d2.utils.events INFO:  eta: 1:38:06  iter: 24299  total_loss: 0.2133  loss_cls: 0.04874  loss_box_reg: 0.1472  loss_rpn_cls: 0.0007218  loss_rpn_loc: 0.01998  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:33:43] d2.utils.events INFO:  eta: 1:37:39  iter: 24319  total_loss: 0.2313  loss_cls: 0.05386  loss_box_reg: 0.1439  loss_rpn_cls: 0.0007363  loss_rpn_loc: 0.01882  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:34:01] d2.utils.events INFO:  eta: 1:37:26  iter: 24339  total_loss: 0.2132  loss_cls: 0.05231  loss_box_reg: 0.1416  loss_rpn_cls: 0.0003778  loss_rpn_loc: 0.01429  time: 0.8837  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:34:19] d2.utils.events INFO:  eta: 1:37:18  iter: 24359  total_loss: 0.1785  loss_cls: 0.04339  loss_box_reg: 0.1202  loss_rpn_cls: 0.0004461  loss_rpn_loc: 0.01482  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:34:37] d2.utils.events INFO:  eta: 1:37:00  iter: 24379  total_loss: 0.2048  loss_cls: 0.05004  loss_box_reg: 0.1341  loss_rpn_cls: 0.001296  loss_rpn_loc: 0.02191  time: 0.8837  data_time: 0.0027  lr: 0.0002  max_mem: 15391M
[04/03 11:34:54] d2.utils.events INFO:  eta: 1:36:46  iter: 24399  total_loss: 0.1852  loss_cls: 0.0387  loss_box_reg: 0.1287  loss_rpn_cls: 0.0004963  loss_rpn_loc: 0.01388  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:35:12] d2.utils.events INFO:  eta: 1:36:27  iter: 24419  total_loss: 0.1957  loss_cls: 0.04679  loss_box_reg: 0.1281  loss_rpn_cls: 0.0004993  loss_rpn_loc: 0.01401  time: 0.8837  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:35:29] d2.utils.events INFO:  eta: 1:36:08  iter: 24439  total_loss: 0.1947  loss_cls: 0.03441  loss_box_reg: 0.1342  loss_rpn_cls: 0.0007388  loss_rpn_loc: 0.01608  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:35:47] d2.utils.events INFO:  eta: 1:35:52  iter: 24459  total_loss: 0.1593  loss_cls: 0.03156  loss_box_reg: 0.111  loss_rpn_cls: 0.0003968  loss_rpn_loc: 0.01245  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:36:04] d2.utils.events INFO:  eta: 1:35:29  iter: 24479  total_loss: 0.1255  loss_cls: 0.03049  loss_box_reg: 0.1006  loss_rpn_cls: 0.0004313  loss_rpn_loc: 0.01294  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:36:21] d2.utils.events INFO:  eta: 1:35:10  iter: 24499  total_loss: 0.1699  loss_cls: 0.03508  loss_box_reg: 0.1259  loss_rpn_cls: 0.0007796  loss_rpn_loc: 0.01557  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:36:39] d2.utils.events INFO:  eta: 1:34:51  iter: 24519  total_loss: 0.203  loss_cls: 0.03806  loss_box_reg: 0.1407  loss_rpn_cls: 0.000441  loss_rpn_loc: 0.01167  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:36:57] d2.utils.events INFO:  eta: 1:34:40  iter: 24539  total_loss: 0.1689  loss_cls: 0.03762  loss_box_reg: 0.1022  loss_rpn_cls: 0.0004133  loss_rpn_loc: 0.01696  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:37:14] d2.utils.events INFO:  eta: 1:34:22  iter: 24559  total_loss: 0.213  loss_cls: 0.04845  loss_box_reg: 0.1341  loss_rpn_cls: 0.0007479  loss_rpn_loc: 0.01974  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:37:31] d2.utils.events INFO:  eta: 1:34:04  iter: 24579  total_loss: 0.2142  loss_cls: 0.0479  loss_box_reg: 0.1422  loss_rpn_cls: 0.0005394  loss_rpn_loc: 0.02035  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:37:49] d2.utils.events INFO:  eta: 1:33:51  iter: 24599  total_loss: 0.1936  loss_cls: 0.04259  loss_box_reg: 0.1306  loss_rpn_cls: 0.0005891  loss_rpn_loc: 0.01893  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:38:07] d2.utils.events INFO:  eta: 1:33:33  iter: 24619  total_loss: 0.1869  loss_cls: 0.04257  loss_box_reg: 0.1344  loss_rpn_cls: 0.0003549  loss_rpn_loc: 0.01557  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:38:24] d2.utils.events INFO:  eta: 1:33:15  iter: 24639  total_loss: 0.201  loss_cls: 0.04037  loss_box_reg: 0.1343  loss_rpn_cls: 0.0007215  loss_rpn_loc: 0.02012  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:38:42] d2.utils.events INFO:  eta: 1:32:59  iter: 24659  total_loss: 0.1566  loss_cls: 0.03194  loss_box_reg: 0.1103  loss_rpn_cls: 0.0003019  loss_rpn_loc: 0.009639  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:38:59] d2.utils.events INFO:  eta: 1:32:40  iter: 24679  total_loss: 0.1841  loss_cls: 0.04476  loss_box_reg: 0.1251  loss_rpn_cls: 0.001166  loss_rpn_loc: 0.01828  time: 0.8836  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:39:17] d2.utils.events INFO:  eta: 1:32:20  iter: 24699  total_loss: 0.1485  loss_cls: 0.03002  loss_box_reg: 0.108  loss_rpn_cls: 0.0009876  loss_rpn_loc: 0.01596  time: 0.8836  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:39:35] d2.utils.events INFO:  eta: 1:32:06  iter: 24719  total_loss: 0.1455  loss_cls: 0.02984  loss_box_reg: 0.1086  loss_rpn_cls: 0.0002974  loss_rpn_loc: 0.01099  time: 0.8836  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:39:52] d2.utils.events INFO:  eta: 1:31:48  iter: 24739  total_loss: 0.1808  loss_cls: 0.03627  loss_box_reg: 0.128  loss_rpn_cls: 0.0006596  loss_rpn_loc: 0.01512  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:40:10] d2.utils.events INFO:  eta: 1:31:31  iter: 24759  total_loss: 0.1745  loss_cls: 0.0366  loss_box_reg: 0.1196  loss_rpn_cls: 0.0009159  loss_rpn_loc: 0.01328  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:40:27] d2.utils.events INFO:  eta: 1:31:13  iter: 24779  total_loss: 0.1525  loss_cls: 0.03442  loss_box_reg: 0.113  loss_rpn_cls: 0.0009736  loss_rpn_loc: 0.014  time: 0.8835  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:40:45] d2.utils.events INFO:  eta: 1:30:55  iter: 24799  total_loss: 0.1867  loss_cls: 0.0359  loss_box_reg: 0.1337  loss_rpn_cls: 0.00128  loss_rpn_loc: 0.016  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:41:03] d2.utils.events INFO:  eta: 1:30:39  iter: 24819  total_loss: 0.2081  loss_cls: 0.04113  loss_box_reg: 0.1385  loss_rpn_cls: 0.00129  loss_rpn_loc: 0.02011  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:41:20] d2.utils.events INFO:  eta: 1:30:19  iter: 24839  total_loss: 0.2045  loss_cls: 0.03983  loss_box_reg: 0.1464  loss_rpn_cls: 0.0006211  loss_rpn_loc: 0.01556  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:41:38] d2.utils.events INFO:  eta: 1:30:02  iter: 24859  total_loss: 0.1799  loss_cls: 0.03842  loss_box_reg: 0.1202  loss_rpn_cls: 0.0006512  loss_rpn_loc: 0.01764  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:41:55] d2.utils.events INFO:  eta: 1:29:48  iter: 24879  total_loss: 0.1685  loss_cls: 0.03505  loss_box_reg: 0.1119  loss_rpn_cls: 0.0002676  loss_rpn_loc: 0.01174  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:42:13] d2.utils.events INFO:  eta: 1:29:29  iter: 24899  total_loss: 0.1702  loss_cls: 0.03465  loss_box_reg: 0.121  loss_rpn_cls: 0.0005786  loss_rpn_loc: 0.01454  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:42:30] d2.utils.events INFO:  eta: 1:29:12  iter: 24919  total_loss: 0.1765  loss_cls: 0.04011  loss_box_reg: 0.1224  loss_rpn_cls: 0.000779  loss_rpn_loc: 0.01304  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:42:47] d2.utils.events INFO:  eta: 1:28:55  iter: 24939  total_loss: 0.2152  loss_cls: 0.0471  loss_box_reg: 0.1451  loss_rpn_cls: 0.0006123  loss_rpn_loc: 0.01838  time: 0.8835  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:43:05] d2.utils.events INFO:  eta: 1:28:36  iter: 24959  total_loss: 0.2229  loss_cls: 0.05182  loss_box_reg: 0.1445  loss_rpn_cls: 0.0008953  loss_rpn_loc: 0.0212  time: 0.8835  data_time: 0.0026  lr: 0.0002  max_mem: 15391M
[04/03 11:43:22] d2.utils.events INFO:  eta: 1:28:18  iter: 24979  total_loss: 0.133  loss_cls: 0.02755  loss_box_reg: 0.09376  loss_rpn_cls: 0.0002844  loss_rpn_loc: 0.01065  time: 0.8834  data_time: 0.0025  lr: 0.0002  max_mem: 15391M
[04/03 11:43:40] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 11:43:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 11:43:40] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 11:43:40] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 11:43:40] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 11:43:42] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 11:43:47] d2.evaluation.evaluator INFO: Inference done 54/548. Dataloading: 0.0009 s/iter. Inference: 0.1177 s/iter. Eval: 0.0002 s/iter. Total: 0.1188 s/iter. ETA=0:00:58
[04/03 11:43:52] d2.evaluation.evaluator INFO: Inference done 97/548. Dataloading: 0.0009 s/iter. Inference: 0.1177 s/iter. Eval: 0.0002 s/iter. Total: 0.1188 s/iter. ETA=0:00:53
[04/03 11:43:57] d2.evaluation.evaluator INFO: Inference done 139/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:48
[04/03 11:44:02] d2.evaluation.evaluator INFO: Inference done 181/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:43
[04/03 11:44:07] d2.evaluation.evaluator INFO: Inference done 223/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:38
[04/03 11:44:12] d2.evaluation.evaluator INFO: Inference done 265/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:33
[04/03 11:44:17] d2.evaluation.evaluator INFO: Inference done 308/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:28
[04/03 11:44:22] d2.evaluation.evaluator INFO: Inference done 350/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:23
[04/03 11:44:27] d2.evaluation.evaluator INFO: Inference done 392/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:18
[04/03 11:44:32] d2.evaluation.evaluator INFO: Inference done 434/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:13
[04/03 11:44:37] d2.evaluation.evaluator INFO: Inference done 476/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:08
[04/03 11:44:42] d2.evaluation.evaluator INFO: Inference done 518/548. Dataloading: 0.0009 s/iter. Inference: 0.1181 s/iter. Eval: 0.0002 s/iter. Total: 0.1192 s/iter. ETA=0:00:03
[04/03 11:44:46] d2.evaluation.evaluator INFO: Total inference time: 0:01:04.850733 (0.119430 s / iter per device, on 1 devices)
[04/03 11:44:46] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118133 s / iter per device, on 1 devices)
[04/03 11:44:46] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 11:44:46] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 11:44:46] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 11:44:46] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 11:44:47] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.53 seconds.
[04/03 11:44:47] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 11:44:47] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.304 | 11.502 | 6.057  | 2.365 | 13.307 | 12.680 |
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 11:44:47] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 7.100  | people          | 4.500  | bicycle    | 2.612 |
| car        | 33.720 | van             | 12.595 | truck      | 0.000 |
| tricycle   | 2.773  | awning-tricycle | 0.474  | bus        | 0.000 |
| motor      | 5.571  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 11:44:47] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 11:44:47] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 11:44:47] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 11:44:47] d2.evaluation.testing INFO: copypaste: 6.3039,11.5017,6.0572,2.3654,13.3072,12.6797,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 11:44:47] d2.utils.events INFO:  eta: 1:27:59  iter: 24999  total_loss: 0.1645  loss_cls: 0.03013  loss_box_reg: 0.1219  loss_rpn_cls: 0.0005068  loss_rpn_loc: 0.01354  time: 0.8834  data_time: 0.0024  lr: 0.0002  max_mem: 15391M
[04/03 11:45:04] d2.utils.events INFO:  eta: 1:27:40  iter: 25019  total_loss: 0.1521  loss_cls: 0.0266  loss_box_reg: 0.1104  loss_rpn_cls: 0.0003548  loss_rpn_loc: 0.009913  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:45:22] d2.utils.events INFO:  eta: 1:27:24  iter: 25039  total_loss: 0.1631  loss_cls: 0.03322  loss_box_reg: 0.1221  loss_rpn_cls: 0.0004467  loss_rpn_loc: 0.0127  time: 0.8834  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 11:45:39] d2.utils.events INFO:  eta: 1:27:05  iter: 25059  total_loss: 0.1769  loss_cls: 0.04226  loss_box_reg: 0.1219  loss_rpn_cls: 0.0003438  loss_rpn_loc: 0.01739  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:45:57] d2.utils.events INFO:  eta: 1:26:48  iter: 25079  total_loss: 0.1492  loss_cls: 0.03166  loss_box_reg: 0.1002  loss_rpn_cls: 0.000387  loss_rpn_loc: 0.01084  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:46:14] d2.utils.events INFO:  eta: 1:26:33  iter: 25099  total_loss: 0.1527  loss_cls: 0.03263  loss_box_reg: 0.1023  loss_rpn_cls: 0.0003766  loss_rpn_loc: 0.01141  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:46:32] d2.utils.events INFO:  eta: 1:26:15  iter: 25119  total_loss: 0.1739  loss_cls: 0.04042  loss_box_reg: 0.1127  loss_rpn_cls: 0.0003937  loss_rpn_loc: 0.01323  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:46:49] d2.utils.events INFO:  eta: 1:25:56  iter: 25139  total_loss: 0.1636  loss_cls: 0.03332  loss_box_reg: 0.1089  loss_rpn_cls: 0.0004288  loss_rpn_loc: 0.01376  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:47:07] d2.utils.events INFO:  eta: 1:25:41  iter: 25159  total_loss: 0.151  loss_cls: 0.03094  loss_box_reg: 0.1114  loss_rpn_cls: 0.000329  loss_rpn_loc: 0.01232  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:47:25] d2.utils.events INFO:  eta: 1:25:26  iter: 25179  total_loss: 0.1681  loss_cls: 0.03908  loss_box_reg: 0.109  loss_rpn_cls: 0.0003823  loss_rpn_loc: 0.01413  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:47:43] d2.utils.events INFO:  eta: 1:25:12  iter: 25199  total_loss: 0.1468  loss_cls: 0.02798  loss_box_reg: 0.1015  loss_rpn_cls: 0.0003146  loss_rpn_loc: 0.01183  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:48:01] d2.utils.events INFO:  eta: 1:25:00  iter: 25219  total_loss: 0.1423  loss_cls: 0.03007  loss_box_reg: 0.1048  loss_rpn_cls: 0.0003946  loss_rpn_loc: 0.01156  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:48:18] d2.utils.events INFO:  eta: 1:24:45  iter: 25239  total_loss: 0.1231  loss_cls: 0.02195  loss_box_reg: 0.09482  loss_rpn_cls: 0.0002916  loss_rpn_loc: 0.009988  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:48:36] d2.utils.events INFO:  eta: 1:24:32  iter: 25259  total_loss: 0.1641  loss_cls: 0.03664  loss_box_reg: 0.1186  loss_rpn_cls: 0.0003903  loss_rpn_loc: 0.01595  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:48:54] d2.utils.events INFO:  eta: 1:24:15  iter: 25279  total_loss: 0.1788  loss_cls: 0.0338  loss_box_reg: 0.1264  loss_rpn_cls: 0.0004366  loss_rpn_loc: 0.01669  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:49:11] d2.utils.events INFO:  eta: 1:23:56  iter: 25299  total_loss: 0.1611  loss_cls: 0.03617  loss_box_reg: 0.1084  loss_rpn_cls: 0.0002635  loss_rpn_loc: 0.01234  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:49:29] d2.utils.events INFO:  eta: 1:23:39  iter: 25319  total_loss: 0.1363  loss_cls: 0.02948  loss_box_reg: 0.09759  loss_rpn_cls: 0.0002075  loss_rpn_loc: 0.0125  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:49:47] d2.utils.events INFO:  eta: 1:23:19  iter: 25339  total_loss: 0.1205  loss_cls: 0.02464  loss_box_reg: 0.0807  loss_rpn_cls: 0.0002277  loss_rpn_loc: 0.009037  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:50:04] d2.utils.events INFO:  eta: 1:22:56  iter: 25359  total_loss: 0.132  loss_cls: 0.02636  loss_box_reg: 0.09461  loss_rpn_cls: 0.0004858  loss_rpn_loc: 0.01259  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:50:22] d2.utils.events INFO:  eta: 1:22:40  iter: 25379  total_loss: 0.1352  loss_cls: 0.02717  loss_box_reg: 0.09054  loss_rpn_cls: 0.0002331  loss_rpn_loc: 0.01175  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:50:40] d2.utils.events INFO:  eta: 1:22:26  iter: 25399  total_loss: 0.1478  loss_cls: 0.03275  loss_box_reg: 0.1026  loss_rpn_cls: 0.0003082  loss_rpn_loc: 0.01332  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:50:58] d2.utils.events INFO:  eta: 1:22:08  iter: 25419  total_loss: 0.1495  loss_cls: 0.02993  loss_box_reg: 0.1018  loss_rpn_cls: 0.0007246  loss_rpn_loc: 0.01276  time: 0.8834  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 11:51:16] d2.utils.events INFO:  eta: 1:21:54  iter: 25439  total_loss: 0.1569  loss_cls: 0.03319  loss_box_reg: 0.1049  loss_rpn_cls: 0.0004391  loss_rpn_loc: 0.01452  time: 0.8834  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 11:51:34] d2.utils.events INFO:  eta: 1:21:38  iter: 25459  total_loss: 0.1267  loss_cls: 0.02392  loss_box_reg: 0.09675  loss_rpn_cls: 0.0003455  loss_rpn_loc: 0.009105  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:51:52] d2.utils.events INFO:  eta: 1:21:27  iter: 25479  total_loss: 0.1542  loss_cls: 0.03388  loss_box_reg: 0.108  loss_rpn_cls: 0.0003677  loss_rpn_loc: 0.011  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:52:09] d2.utils.events INFO:  eta: 1:21:05  iter: 25499  total_loss: 0.1446  loss_cls: 0.02946  loss_box_reg: 0.09454  loss_rpn_cls: 0.0004298  loss_rpn_loc: 0.01108  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:52:26] d2.utils.events INFO:  eta: 1:20:44  iter: 25519  total_loss: 0.1482  loss_cls: 0.03255  loss_box_reg: 0.1046  loss_rpn_cls: 0.0002981  loss_rpn_loc: 0.01237  time: 0.8834  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 11:52:43] d2.utils.events INFO:  eta: 1:20:24  iter: 25539  total_loss: 0.1425  loss_cls: 0.02908  loss_box_reg: 0.09287  loss_rpn_cls: 0.0002787  loss_rpn_loc: 0.0131  time: 0.8834  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:53:00] d2.utils.events INFO:  eta: 1:20:02  iter: 25559  total_loss: 0.1206  loss_cls: 0.02554  loss_box_reg: 0.08527  loss_rpn_cls: 0.0002318  loss_rpn_loc: 0.009359  time: 0.8833  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:53:17] d2.utils.events INFO:  eta: 1:19:41  iter: 25579  total_loss: 0.141  loss_cls: 0.03638  loss_box_reg: 0.09381  loss_rpn_cls: 0.0002095  loss_rpn_loc: 0.01135  time: 0.8833  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:53:33] d2.utils.events INFO:  eta: 1:19:05  iter: 25599  total_loss: 0.1312  loss_cls: 0.02913  loss_box_reg: 0.09869  loss_rpn_cls: 0.0002512  loss_rpn_loc: 0.01052  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:53:51] d2.utils.events INFO:  eta: 1:18:47  iter: 25619  total_loss: 0.1092  loss_cls: 0.02044  loss_box_reg: 0.08248  loss_rpn_cls: 0.0001534  loss_rpn_loc: 0.008175  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:54:08] d2.utils.events INFO:  eta: 1:18:32  iter: 25639  total_loss: 0.1336  loss_cls: 0.02761  loss_box_reg: 0.09752  loss_rpn_cls: 0.0003779  loss_rpn_loc: 0.01147  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:54:26] d2.utils.events INFO:  eta: 1:18:18  iter: 25659  total_loss: 0.1624  loss_cls: 0.03143  loss_box_reg: 0.1091  loss_rpn_cls: 0.0005312  loss_rpn_loc: 0.01374  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:54:44] d2.utils.events INFO:  eta: 1:18:02  iter: 25679  total_loss: 0.1359  loss_cls: 0.02878  loss_box_reg: 0.09287  loss_rpn_cls: 0.0003072  loss_rpn_loc: 0.01121  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:55:01] d2.utils.events INFO:  eta: 1:17:46  iter: 25699  total_loss: 0.1388  loss_cls: 0.0299  loss_box_reg: 0.09858  loss_rpn_cls: 0.0003408  loss_rpn_loc: 0.01127  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:55:18] d2.utils.events INFO:  eta: 1:17:27  iter: 25719  total_loss: 0.1219  loss_cls: 0.02432  loss_box_reg: 0.09018  loss_rpn_cls: 0.0002914  loss_rpn_loc: 0.008334  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:55:36] d2.utils.events INFO:  eta: 1:17:11  iter: 25739  total_loss: 0.1457  loss_cls: 0.0236  loss_box_reg: 0.09817  loss_rpn_cls: 0.000308  loss_rpn_loc: 0.01166  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:55:53] d2.utils.events INFO:  eta: 1:16:48  iter: 25759  total_loss: 0.1506  loss_cls: 0.02945  loss_box_reg: 0.108  loss_rpn_cls: 0.000357  loss_rpn_loc: 0.01276  time: 0.8832  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:56:11] d2.utils.events INFO:  eta: 1:16:35  iter: 25779  total_loss: 0.125  loss_cls: 0.03024  loss_box_reg: 0.08118  loss_rpn_cls: 0.0003442  loss_rpn_loc: 0.01093  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:56:28] d2.utils.events INFO:  eta: 1:16:09  iter: 25799  total_loss: 0.1059  loss_cls: 0.02518  loss_box_reg: 0.07671  loss_rpn_cls: 0.0002974  loss_rpn_loc: 0.007514  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:56:46] d2.utils.events INFO:  eta: 1:15:39  iter: 25819  total_loss: 0.1458  loss_cls: 0.03475  loss_box_reg: 0.09942  loss_rpn_cls: 0.000306  loss_rpn_loc: 0.01436  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:57:02] d2.utils.events INFO:  eta: 1:15:23  iter: 25839  total_loss: 0.1471  loss_cls: 0.03191  loss_box_reg: 0.09731  loss_rpn_cls: 0.0003754  loss_rpn_loc: 0.0124  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:57:21] d2.utils.events INFO:  eta: 1:15:10  iter: 25859  total_loss: 0.1055  loss_cls: 0.0223  loss_box_reg: 0.07331  loss_rpn_cls: 0.0001986  loss_rpn_loc: 0.008246  time: 0.8831  data_time: 0.0028  lr: 2e-05  max_mem: 15391M
[04/03 11:57:38] d2.utils.events INFO:  eta: 1:14:48  iter: 25879  total_loss: 0.1368  loss_cls: 0.02519  loss_box_reg: 0.09248  loss_rpn_cls: 0.0003047  loss_rpn_loc: 0.01184  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:57:56] d2.utils.events INFO:  eta: 1:14:36  iter: 25899  total_loss: 0.131  loss_cls: 0.0306  loss_box_reg: 0.08985  loss_rpn_cls: 0.0002187  loss_rpn_loc: 0.00997  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:58:13] d2.utils.events INFO:  eta: 1:14:23  iter: 25919  total_loss: 0.1298  loss_cls: 0.02626  loss_box_reg: 0.08914  loss_rpn_cls: 0.0002604  loss_rpn_loc: 0.01182  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:58:31] d2.utils.events INFO:  eta: 1:14:09  iter: 25939  total_loss: 0.1286  loss_cls: 0.02587  loss_box_reg: 0.0905  loss_rpn_cls: 0.0004418  loss_rpn_loc: 0.01196  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 11:58:48] d2.utils.events INFO:  eta: 1:13:47  iter: 25959  total_loss: 0.144  loss_cls: 0.03057  loss_box_reg: 0.09876  loss_rpn_cls: 0.0003801  loss_rpn_loc: 0.01097  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 11:59:06] d2.utils.events INFO:  eta: 1:13:41  iter: 25979  total_loss: 0.1171  loss_cls: 0.02591  loss_box_reg: 0.08134  loss_rpn_cls: 0.0002478  loss_rpn_loc: 0.009647  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 11:59:24] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 11:59:24] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 11:59:24] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 11:59:24] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 11:59:24] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 11:59:26] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 11:59:31] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1191 s/iter. ETA=0:00:58
[04/03 11:59:36] d2.evaluation.evaluator INFO: Inference done 96/548. Dataloading: 0.0009 s/iter. Inference: 0.1180 s/iter. Eval: 0.0002 s/iter. Total: 0.1191 s/iter. ETA=0:00:53
[04/03 11:59:41] d2.evaluation.evaluator INFO: Inference done 139/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:48
[04/03 11:59:46] d2.evaluation.evaluator INFO: Inference done 181/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:43
[04/03 11:59:51] d2.evaluation.evaluator INFO: Inference done 224/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:38
[04/03 11:59:56] d2.evaluation.evaluator INFO: Inference done 267/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:33
[04/03 12:00:01] d2.evaluation.evaluator INFO: Inference done 310/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:28
[04/03 12:00:06] d2.evaluation.evaluator INFO: Inference done 353/548. Dataloading: 0.0009 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1189 s/iter. ETA=0:00:23
[04/03 12:00:11] d2.evaluation.evaluator INFO: Inference done 395/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:18
[04/03 12:00:16] d2.evaluation.evaluator INFO: Inference done 438/548. Dataloading: 0.0009 s/iter. Inference: 0.1178 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:13
[04/03 12:00:21] d2.evaluation.evaluator INFO: Inference done 480/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:08
[04/03 12:00:26] d2.evaluation.evaluator INFO: Inference done 522/548. Dataloading: 0.0009 s/iter. Inference: 0.1179 s/iter. Eval: 0.0002 s/iter. Total: 0.1190 s/iter. ETA=0:00:03
[04/03 12:00:30] d2.evaluation.evaluator INFO: Total inference time: 0:01:04.727623 (0.119204 s / iter per device, on 1 devices)
[04/03 12:00:30] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.117919 s / iter per device, on 1 devices)
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 12:00:30] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 12:00:30] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.38 seconds.
[04/03 12:00:30] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 12:00:30] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.485 | 11.486 | 6.433  | 2.169 | 13.652 | 13.459 |
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 12:00:30] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.793  | people          | 3.707  | bicycle    | 2.676 |
| car        | 34.546 | van             | 13.998 | truck      | 0.000 |
| tricycle   | 3.327  | awning-tricycle | 0.931  | bus        | 0.000 |
| motor      | 5.357  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 12:00:30] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 12:00:30] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 12:00:30] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 12:00:30] d2.evaluation.testing INFO: copypaste: 6.4850,11.4860,6.4327,2.1686,13.6519,13.4593,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 12:00:30] d2.utils.events INFO:  eta: 1:13:24  iter: 25999  total_loss: 0.1423  loss_cls: 0.03002  loss_box_reg: 0.09622  loss_rpn_cls: 0.0002311  loss_rpn_loc: 0.01191  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:00:48] d2.utils.events INFO:  eta: 1:13:06  iter: 26019  total_loss: 0.1602  loss_cls: 0.0329  loss_box_reg: 0.1064  loss_rpn_cls: 0.0002702  loss_rpn_loc: 0.01646  time: 0.8831  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:01:06] d2.utils.events INFO:  eta: 1:12:48  iter: 26039  total_loss: 0.1181  loss_cls: 0.02098  loss_box_reg: 0.08719  loss_rpn_cls: 0.0002118  loss_rpn_loc: 0.01031  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:01:25] d2.utils.events INFO:  eta: 1:12:32  iter: 26059  total_loss: 0.1174  loss_cls: 0.02417  loss_box_reg: 0.07788  loss_rpn_cls: 0.0001151  loss_rpn_loc: 0.009025  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:01:43] d2.utils.events INFO:  eta: 1:12:19  iter: 26079  total_loss: 0.1169  loss_cls: 0.02164  loss_box_reg: 0.08321  loss_rpn_cls: 0.0001775  loss_rpn_loc: 0.00825  time: 0.8832  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:02:01] d2.utils.events INFO:  eta: 1:11:59  iter: 26099  total_loss: 0.1576  loss_cls: 0.03093  loss_box_reg: 0.1023  loss_rpn_cls: 0.0001734  loss_rpn_loc: 0.01098  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:02:19] d2.utils.events INFO:  eta: 1:11:46  iter: 26119  total_loss: 0.1347  loss_cls: 0.02652  loss_box_reg: 0.09176  loss_rpn_cls: 0.0001757  loss_rpn_loc: 0.012  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:02:36] d2.utils.events INFO:  eta: 1:11:28  iter: 26139  total_loss: 0.127  loss_cls: 0.0271  loss_box_reg: 0.08985  loss_rpn_cls: 0.0003438  loss_rpn_loc: 0.01166  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:02:54] d2.utils.events INFO:  eta: 1:11:11  iter: 26159  total_loss: 0.1094  loss_cls: 0.02246  loss_box_reg: 0.07811  loss_rpn_cls: 0.0002175  loss_rpn_loc: 0.007871  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:03:11] d2.utils.events INFO:  eta: 1:10:47  iter: 26179  total_loss: 0.1446  loss_cls: 0.03113  loss_box_reg: 0.09897  loss_rpn_cls: 0.0002842  loss_rpn_loc: 0.01307  time: 0.8832  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:03:28] d2.utils.events INFO:  eta: 1:10:28  iter: 26199  total_loss: 0.1379  loss_cls: 0.02873  loss_box_reg: 0.09944  loss_rpn_cls: 0.0004481  loss_rpn_loc: 0.01422  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:03:45] d2.utils.events INFO:  eta: 1:10:08  iter: 26219  total_loss: 0.1468  loss_cls: 0.03172  loss_box_reg: 0.09851  loss_rpn_cls: 0.0002761  loss_rpn_loc: 0.0125  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:04:02] d2.utils.events INFO:  eta: 1:09:49  iter: 26239  total_loss: 0.1135  loss_cls: 0.02471  loss_box_reg: 0.07966  loss_rpn_cls: 0.0001888  loss_rpn_loc: 0.006839  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:04:20] d2.utils.events INFO:  eta: 1:09:24  iter: 26259  total_loss: 0.1273  loss_cls: 0.0222  loss_box_reg: 0.08783  loss_rpn_cls: 0.0005836  loss_rpn_loc: 0.01064  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:04:37] d2.utils.events INFO:  eta: 1:08:58  iter: 26279  total_loss: 0.1541  loss_cls: 0.03166  loss_box_reg: 0.1017  loss_rpn_cls: 0.000258  loss_rpn_loc: 0.01396  time: 0.8831  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:04:55] d2.utils.events INFO:  eta: 1:08:43  iter: 26299  total_loss: 0.1269  loss_cls: 0.02649  loss_box_reg: 0.09326  loss_rpn_cls: 0.0004718  loss_rpn_loc: 0.01046  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:05:12] d2.utils.events INFO:  eta: 1:08:29  iter: 26319  total_loss: 0.1254  loss_cls: 0.024  loss_box_reg: 0.08997  loss_rpn_cls: 0.0004269  loss_rpn_loc: 0.0107  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:05:30] d2.utils.events INFO:  eta: 1:08:11  iter: 26339  total_loss: 0.1242  loss_cls: 0.02654  loss_box_reg: 0.09278  loss_rpn_cls: 0.0001222  loss_rpn_loc: 0.008986  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:05:47] d2.utils.events INFO:  eta: 1:07:54  iter: 26359  total_loss: 0.1149  loss_cls: 0.0248  loss_box_reg: 0.08133  loss_rpn_cls: 0.0003576  loss_rpn_loc: 0.01158  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:06:05] d2.utils.events INFO:  eta: 1:07:33  iter: 26379  total_loss: 0.1362  loss_cls: 0.02758  loss_box_reg: 0.09652  loss_rpn_cls: 0.0002627  loss_rpn_loc: 0.01036  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:06:22] d2.utils.events INFO:  eta: 1:07:14  iter: 26399  total_loss: 0.1415  loss_cls: 0.03031  loss_box_reg: 0.09774  loss_rpn_cls: 0.0003197  loss_rpn_loc: 0.01356  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:06:40] d2.utils.events INFO:  eta: 1:07:03  iter: 26419  total_loss: 0.1254  loss_cls: 0.02693  loss_box_reg: 0.08919  loss_rpn_cls: 0.0002388  loss_rpn_loc: 0.01312  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:06:58] d2.utils.events INFO:  eta: 1:06:53  iter: 26439  total_loss: 0.1101  loss_cls: 0.02147  loss_box_reg: 0.07487  loss_rpn_cls: 0.0002078  loss_rpn_loc: 0.01031  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:07:16] d2.utils.events INFO:  eta: 1:06:25  iter: 26459  total_loss: 0.1261  loss_cls: 0.02646  loss_box_reg: 0.08659  loss_rpn_cls: 0.0003491  loss_rpn_loc: 0.01065  time: 0.8830  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:07:33] d2.utils.events INFO:  eta: 1:06:04  iter: 26479  total_loss: 0.1246  loss_cls: 0.0236  loss_box_reg: 0.09194  loss_rpn_cls: 0.0002288  loss_rpn_loc: 0.01236  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:07:51] d2.utils.events INFO:  eta: 1:05:48  iter: 26499  total_loss: 0.1259  loss_cls: 0.02646  loss_box_reg: 0.08737  loss_rpn_cls: 0.0002228  loss_rpn_loc: 0.01141  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:08:08] d2.utils.events INFO:  eta: 1:05:43  iter: 26519  total_loss: 0.1259  loss_cls: 0.03039  loss_box_reg: 0.0878  loss_rpn_cls: 0.0002858  loss_rpn_loc: 0.01162  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:08:25] d2.utils.events INFO:  eta: 1:05:25  iter: 26539  total_loss: 0.1328  loss_cls: 0.02508  loss_box_reg: 0.09479  loss_rpn_cls: 0.0002478  loss_rpn_loc: 0.01088  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:08:43] d2.utils.events INFO:  eta: 1:05:11  iter: 26559  total_loss: 0.1292  loss_cls: 0.02435  loss_box_reg: 0.09476  loss_rpn_cls: 0.0003319  loss_rpn_loc: 0.01011  time: 0.8830  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:09:00] d2.utils.events INFO:  eta: 1:04:53  iter: 26579  total_loss: 0.1419  loss_cls: 0.02547  loss_box_reg: 0.1019  loss_rpn_cls: 0.0001539  loss_rpn_loc: 0.01201  time: 0.8830  data_time: 0.0028  lr: 2e-05  max_mem: 15391M
[04/03 12:09:18] d2.utils.events INFO:  eta: 1:04:42  iter: 26599  total_loss: 0.1452  loss_cls: 0.03235  loss_box_reg: 0.09917  loss_rpn_cls: 0.0003061  loss_rpn_loc: 0.0142  time: 0.8830  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:09:36] d2.utils.events INFO:  eta: 1:04:23  iter: 26619  total_loss: 0.1166  loss_cls: 0.02531  loss_box_reg: 0.08275  loss_rpn_cls: 0.0001573  loss_rpn_loc: 0.01232  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:09:53] d2.utils.events INFO:  eta: 1:04:09  iter: 26639  total_loss: 0.1183  loss_cls: 0.02636  loss_box_reg: 0.08443  loss_rpn_cls: 0.0002527  loss_rpn_loc: 0.008894  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:10:11] d2.utils.events INFO:  eta: 1:03:50  iter: 26659  total_loss: 0.1078  loss_cls: 0.02486  loss_box_reg: 0.07525  loss_rpn_cls: 0.0002916  loss_rpn_loc: 0.01041  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:10:28] d2.utils.events INFO:  eta: 1:03:34  iter: 26679  total_loss: 0.1197  loss_cls: 0.02628  loss_box_reg: 0.08097  loss_rpn_cls: 0.0001894  loss_rpn_loc: 0.0107  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:10:46] d2.utils.events INFO:  eta: 1:03:15  iter: 26699  total_loss: 0.1233  loss_cls: 0.02531  loss_box_reg: 0.089  loss_rpn_cls: 0.0002028  loss_rpn_loc: 0.009001  time: 0.8829  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:11:04] d2.utils.events INFO:  eta: 1:03:01  iter: 26719  total_loss: 0.1341  loss_cls: 0.02609  loss_box_reg: 0.08217  loss_rpn_cls: 0.0002681  loss_rpn_loc: 0.01081  time: 0.8830  data_time: 0.0027  lr: 2e-05  max_mem: 15391M
[04/03 12:11:22] d2.utils.events INFO:  eta: 1:02:46  iter: 26739  total_loss: 0.1097  loss_cls: 0.02127  loss_box_reg: 0.077  loss_rpn_cls: 0.0006574  loss_rpn_loc: 0.01071  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:11:39] d2.utils.events INFO:  eta: 1:02:32  iter: 26759  total_loss: 0.1135  loss_cls: 0.02129  loss_box_reg: 0.08419  loss_rpn_cls: 0.0002303  loss_rpn_loc: 0.008009  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:11:57] d2.utils.events INFO:  eta: 1:02:15  iter: 26779  total_loss: 0.1345  loss_cls: 0.02365  loss_box_reg: 0.09486  loss_rpn_cls: 0.0002459  loss_rpn_loc: 0.01123  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:12:15] d2.utils.events INFO:  eta: 1:01:55  iter: 26799  total_loss: 0.1348  loss_cls: 0.02529  loss_box_reg: 0.1014  loss_rpn_cls: 0.0002145  loss_rpn_loc: 0.01033  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:12:33] d2.utils.events INFO:  eta: 1:01:46  iter: 26819  total_loss: 0.1324  loss_cls: 0.027  loss_box_reg: 0.09408  loss_rpn_cls: 0.0002181  loss_rpn_loc: 0.01242  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:12:51] d2.utils.events INFO:  eta: 1:01:31  iter: 26839  total_loss: 0.1193  loss_cls: 0.02216  loss_box_reg: 0.08174  loss_rpn_cls: 0.0003229  loss_rpn_loc: 0.01048  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:13:09] d2.utils.events INFO:  eta: 1:01:12  iter: 26859  total_loss: 0.1262  loss_cls: 0.02525  loss_box_reg: 0.08503  loss_rpn_cls: 0.0002674  loss_rpn_loc: 0.009919  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:13:27] d2.utils.events INFO:  eta: 1:00:57  iter: 26879  total_loss: 0.1159  loss_cls: 0.02382  loss_box_reg: 0.07435  loss_rpn_cls: 0.0001654  loss_rpn_loc: 0.01123  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:13:44] d2.utils.events INFO:  eta: 1:00:36  iter: 26899  total_loss: 0.1106  loss_cls: 0.02393  loss_box_reg: 0.07698  loss_rpn_cls: 0.0004786  loss_rpn_loc: 0.009393  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:14:01] d2.utils.events INFO:  eta: 1:00:18  iter: 26919  total_loss: 0.1344  loss_cls: 0.02494  loss_box_reg: 0.09254  loss_rpn_cls: 0.0002725  loss_rpn_loc: 0.01119  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:14:19] d2.utils.events INFO:  eta: 1:00:03  iter: 26939  total_loss: 0.1139  loss_cls: 0.0247  loss_box_reg: 0.07497  loss_rpn_cls: 0.000185  loss_rpn_loc: 0.008835  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:14:37] d2.utils.events INFO:  eta: 0:59:52  iter: 26959  total_loss: 0.1268  loss_cls: 0.02692  loss_box_reg: 0.09627  loss_rpn_cls: 0.0002723  loss_rpn_loc: 0.01114  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:14:55] d2.utils.events INFO:  eta: 0:59:34  iter: 26979  total_loss: 0.105  loss_cls: 0.0234  loss_box_reg: 0.07394  loss_rpn_cls: 0.0002929  loss_rpn_loc: 0.009491  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:15:14] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 12:15:14] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 12:15:14] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 12:15:14] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 12:15:14] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 12:15:16] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1263 s/iter. Eval: 0.0002 s/iter. Total: 0.1273 s/iter. ETA=0:01:08
[04/03 12:15:21] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0008 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:59
[04/03 12:15:26] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:54
[04/03 12:15:31] d2.evaluation.evaluator INFO: Inference done 136/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:49
[04/03 12:15:36] d2.evaluation.evaluator INFO: Inference done 177/548. Dataloading: 0.0009 s/iter. Inference: 0.1205 s/iter. Eval: 0.0002 s/iter. Total: 0.1216 s/iter. ETA=0:00:45
[04/03 12:15:41] d2.evaluation.evaluator INFO: Inference done 219/548. Dataloading: 0.0009 s/iter. Inference: 0.1204 s/iter. Eval: 0.0002 s/iter. Total: 0.1216 s/iter. ETA=0:00:39
[04/03 12:15:46] d2.evaluation.evaluator INFO: Inference done 260/548. Dataloading: 0.0010 s/iter. Inference: 0.1205 s/iter. Eval: 0.0002 s/iter. Total: 0.1216 s/iter. ETA=0:00:35
[04/03 12:15:51] d2.evaluation.evaluator INFO: Inference done 302/548. Dataloading: 0.0010 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:29
[04/03 12:15:56] d2.evaluation.evaluator INFO: Inference done 344/548. Dataloading: 0.0010 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1215 s/iter. ETA=0:00:24
[04/03 12:16:01] d2.evaluation.evaluator INFO: Inference done 386/548. Dataloading: 0.0010 s/iter. Inference: 0.1202 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:19
[04/03 12:16:06] d2.evaluation.evaluator INFO: Inference done 428/548. Dataloading: 0.0010 s/iter. Inference: 0.1201 s/iter. Eval: 0.0002 s/iter. Total: 0.1213 s/iter. ETA=0:00:14
[04/03 12:16:11] d2.evaluation.evaluator INFO: Inference done 470/548. Dataloading: 0.0010 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1212 s/iter. ETA=0:00:09
[04/03 12:16:16] d2.evaluation.evaluator INFO: Inference done 512/548. Dataloading: 0.0010 s/iter. Inference: 0.1199 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:04
[04/03 12:16:21] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.842818 (0.121257 s / iter per device, on 1 devices)
[04/03 12:16:21] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.119939 s / iter per device, on 1 devices)
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 12:16:21] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 12:16:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.49 seconds.
[04/03 12:16:21] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 12:16:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.426 | 11.320 | 6.395  | 2.148 | 13.536 | 13.089 |
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 12:16:21] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.783  | people          | 3.824  | bicycle    | 2.810 |
| car        | 34.508 | van             | 13.894 | truck      | 0.000 |
| tricycle   | 2.920  | awning-tricycle | 0.889  | bus        | 0.000 |
| motor      | 5.060  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 12:16:21] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 12:16:21] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 12:16:21] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 12:16:21] d2.evaluation.testing INFO: copypaste: 6.4263,11.3201,6.3947,2.1476,13.5359,13.0889,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 12:16:21] d2.utils.events INFO:  eta: 0:59:20  iter: 26999  total_loss: 0.1081  loss_cls: 0.02237  loss_box_reg: 0.07365  loss_rpn_cls: 0.0003062  loss_rpn_loc: 0.01025  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:16:39] d2.utils.events INFO:  eta: 0:59:01  iter: 27019  total_loss: 0.1073  loss_cls: 0.02037  loss_box_reg: 0.07359  loss_rpn_cls: 0.000312  loss_rpn_loc: 0.007322  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:16:56] d2.utils.events INFO:  eta: 0:58:41  iter: 27039  total_loss: 0.1378  loss_cls: 0.02945  loss_box_reg: 0.09593  loss_rpn_cls: 0.000681  loss_rpn_loc: 0.01436  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:17:13] d2.utils.events INFO:  eta: 0:58:17  iter: 27059  total_loss: 0.1179  loss_cls: 0.02361  loss_box_reg: 0.08817  loss_rpn_cls: 0.0001956  loss_rpn_loc: 0.009028  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:17:31] d2.utils.events INFO:  eta: 0:57:59  iter: 27079  total_loss: 0.1305  loss_cls: 0.02684  loss_box_reg: 0.08431  loss_rpn_cls: 0.0002024  loss_rpn_loc: 0.01058  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:17:49] d2.utils.events INFO:  eta: 0:57:41  iter: 27099  total_loss: 0.1279  loss_cls: 0.02792  loss_box_reg: 0.07615  loss_rpn_cls: 0.0001829  loss_rpn_loc: 0.009552  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:18:07] d2.utils.events INFO:  eta: 0:57:25  iter: 27119  total_loss: 0.1342  loss_cls: 0.0282  loss_box_reg: 0.08898  loss_rpn_cls: 0.0005352  loss_rpn_loc: 0.01419  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:18:24] d2.utils.events INFO:  eta: 0:57:09  iter: 27139  total_loss: 0.1558  loss_cls: 0.03374  loss_box_reg: 0.1008  loss_rpn_cls: 0.0003615  loss_rpn_loc: 0.01213  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:18:42] d2.utils.events INFO:  eta: 0:56:48  iter: 27159  total_loss: 0.1174  loss_cls: 0.02563  loss_box_reg: 0.08075  loss_rpn_cls: 0.0002611  loss_rpn_loc: 0.01017  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:18:59] d2.utils.events INFO:  eta: 0:56:37  iter: 27179  total_loss: 0.1234  loss_cls: 0.02305  loss_box_reg: 0.08311  loss_rpn_cls: 0.0005054  loss_rpn_loc: 0.00973  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:19:17] d2.utils.events INFO:  eta: 0:56:23  iter: 27199  total_loss: 0.1434  loss_cls: 0.02806  loss_box_reg: 0.09294  loss_rpn_cls: 0.0002419  loss_rpn_loc: 0.01213  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:19:35] d2.utils.events INFO:  eta: 0:56:08  iter: 27219  total_loss: 0.1251  loss_cls: 0.02715  loss_box_reg: 0.08752  loss_rpn_cls: 0.0001418  loss_rpn_loc: 0.009194  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:19:53] d2.utils.events INFO:  eta: 0:55:55  iter: 27239  total_loss: 0.09508  loss_cls: 0.02332  loss_box_reg: 0.06593  loss_rpn_cls: 0.0002128  loss_rpn_loc: 0.008503  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:20:11] d2.utils.events INFO:  eta: 0:55:37  iter: 27259  total_loss: 0.1162  loss_cls: 0.0237  loss_box_reg: 0.08132  loss_rpn_cls: 0.0002296  loss_rpn_loc: 0.008634  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:20:29] d2.utils.events INFO:  eta: 0:55:24  iter: 27279  total_loss: 0.1269  loss_cls: 0.02571  loss_box_reg: 0.09007  loss_rpn_cls: 0.0001833  loss_rpn_loc: 0.01042  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:20:46] d2.utils.events INFO:  eta: 0:55:04  iter: 27299  total_loss: 0.1326  loss_cls: 0.0259  loss_box_reg: 0.09085  loss_rpn_cls: 0.0001664  loss_rpn_loc: 0.009915  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:21:04] d2.utils.events INFO:  eta: 0:54:46  iter: 27319  total_loss: 0.1065  loss_cls: 0.02524  loss_box_reg: 0.06768  loss_rpn_cls: 0.0001079  loss_rpn_loc: 0.008786  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:21:21] d2.utils.events INFO:  eta: 0:54:26  iter: 27339  total_loss: 0.1313  loss_cls: 0.02669  loss_box_reg: 0.08645  loss_rpn_cls: 0.0002719  loss_rpn_loc: 0.01163  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:21:40] d2.utils.events INFO:  eta: 0:54:12  iter: 27359  total_loss: 0.1168  loss_cls: 0.02193  loss_box_reg: 0.08418  loss_rpn_cls: 0.0003899  loss_rpn_loc: 0.01255  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:21:58] d2.utils.events INFO:  eta: 0:53:58  iter: 27379  total_loss: 0.09282  loss_cls: 0.01955  loss_box_reg: 0.07067  loss_rpn_cls: 8.991e-05  loss_rpn_loc: 0.008228  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:22:15] d2.utils.events INFO:  eta: 0:53:39  iter: 27399  total_loss: 0.1029  loss_cls: 0.01972  loss_box_reg: 0.0732  loss_rpn_cls: 0.0002459  loss_rpn_loc: 0.007973  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:22:33] d2.utils.events INFO:  eta: 0:53:17  iter: 27419  total_loss: 0.1152  loss_cls: 0.0225  loss_box_reg: 0.07439  loss_rpn_cls: 0.0001917  loss_rpn_loc: 0.01023  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:22:50] d2.utils.events INFO:  eta: 0:52:58  iter: 27439  total_loss: 0.1302  loss_cls: 0.02526  loss_box_reg: 0.08925  loss_rpn_cls: 0.0003907  loss_rpn_loc: 0.01311  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:23:08] d2.utils.events INFO:  eta: 0:52:47  iter: 27459  total_loss: 0.1235  loss_cls: 0.02635  loss_box_reg: 0.08365  loss_rpn_cls: 0.0006191  loss_rpn_loc: 0.0107  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:23:26] d2.utils.events INFO:  eta: 0:52:27  iter: 27479  total_loss: 0.1236  loss_cls: 0.02208  loss_box_reg: 0.08981  loss_rpn_cls: 0.0002664  loss_rpn_loc: 0.01274  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:23:44] d2.utils.events INFO:  eta: 0:52:10  iter: 27499  total_loss: 0.1292  loss_cls: 0.02474  loss_box_reg: 0.09386  loss_rpn_cls: 0.0001916  loss_rpn_loc: 0.01017  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:24:01] d2.utils.events INFO:  eta: 0:51:49  iter: 27519  total_loss: 0.1306  loss_cls: 0.03063  loss_box_reg: 0.09262  loss_rpn_cls: 0.0002233  loss_rpn_loc: 0.01218  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:24:18] d2.utils.events INFO:  eta: 0:51:31  iter: 27539  total_loss: 0.1173  loss_cls: 0.02511  loss_box_reg: 0.0819  loss_rpn_cls: 0.0001686  loss_rpn_loc: 0.01126  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:24:35] d2.utils.events INFO:  eta: 0:51:10  iter: 27559  total_loss: 0.1456  loss_cls: 0.02934  loss_box_reg: 0.09685  loss_rpn_cls: 0.0002792  loss_rpn_loc: 0.01178  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:24:54] d2.utils.events INFO:  eta: 0:50:54  iter: 27579  total_loss: 0.1137  loss_cls: 0.02041  loss_box_reg: 0.08159  loss_rpn_cls: 0.0001294  loss_rpn_loc: 0.007691  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:25:11] d2.utils.events INFO:  eta: 0:50:36  iter: 27599  total_loss: 0.125  loss_cls: 0.02448  loss_box_reg: 0.08635  loss_rpn_cls: 0.0002352  loss_rpn_loc: 0.01213  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:25:29] d2.utils.events INFO:  eta: 0:50:18  iter: 27619  total_loss: 0.1264  loss_cls: 0.0242  loss_box_reg: 0.08458  loss_rpn_cls: 0.0004424  loss_rpn_loc: 0.01264  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:25:47] d2.utils.events INFO:  eta: 0:50:00  iter: 27639  total_loss: 0.116  loss_cls: 0.0177  loss_box_reg: 0.08702  loss_rpn_cls: 9.306e-05  loss_rpn_loc: 0.009123  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:26:05] d2.utils.events INFO:  eta: 0:49:45  iter: 27659  total_loss: 0.1001  loss_cls: 0.02039  loss_box_reg: 0.07056  loss_rpn_cls: 0.0001746  loss_rpn_loc: 0.009922  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:26:23] d2.utils.events INFO:  eta: 0:49:25  iter: 27679  total_loss: 0.1055  loss_cls: 0.01943  loss_box_reg: 0.07337  loss_rpn_cls: 0.0003292  loss_rpn_loc: 0.01029  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:26:40] d2.utils.events INFO:  eta: 0:49:10  iter: 27699  total_loss: 0.1093  loss_cls: 0.01774  loss_box_reg: 0.08259  loss_rpn_cls: 0.0002187  loss_rpn_loc: 0.009175  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:26:57] d2.utils.events INFO:  eta: 0:48:48  iter: 27719  total_loss: 0.1391  loss_cls: 0.0238  loss_box_reg: 0.1027  loss_rpn_cls: 0.0002391  loss_rpn_loc: 0.01124  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:27:14] d2.utils.events INFO:  eta: 0:48:28  iter: 27739  total_loss: 0.1327  loss_cls: 0.02735  loss_box_reg: 0.09313  loss_rpn_cls: 0.0001701  loss_rpn_loc: 0.01155  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:27:32] d2.utils.events INFO:  eta: 0:48:11  iter: 27759  total_loss: 0.1267  loss_cls: 0.02343  loss_box_reg: 0.09012  loss_rpn_cls: 0.0001985  loss_rpn_loc: 0.01187  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:27:50] d2.utils.events INFO:  eta: 0:47:52  iter: 27779  total_loss: 0.09932  loss_cls: 0.02066  loss_box_reg: 0.07248  loss_rpn_cls: 0.0001994  loss_rpn_loc: 0.007646  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:28:08] d2.utils.events INFO:  eta: 0:47:35  iter: 27799  total_loss: 0.1392  loss_cls: 0.0332  loss_box_reg: 0.09298  loss_rpn_cls: 0.0001364  loss_rpn_loc: 0.01124  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:28:26] d2.utils.events INFO:  eta: 0:47:18  iter: 27819  total_loss: 0.1065  loss_cls: 0.02209  loss_box_reg: 0.07961  loss_rpn_cls: 0.0002223  loss_rpn_loc: 0.01072  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:28:43] d2.utils.events INFO:  eta: 0:46:59  iter: 27839  total_loss: 0.1181  loss_cls: 0.02321  loss_box_reg: 0.08399  loss_rpn_cls: 0.000136  loss_rpn_loc: 0.008396  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:29:01] d2.utils.events INFO:  eta: 0:46:40  iter: 27859  total_loss: 0.1395  loss_cls: 0.02946  loss_box_reg: 0.09231  loss_rpn_cls: 0.0004984  loss_rpn_loc: 0.01116  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:29:19] d2.utils.events INFO:  eta: 0:46:23  iter: 27879  total_loss: 0.1041  loss_cls: 0.02377  loss_box_reg: 0.07527  loss_rpn_cls: 0.0001551  loss_rpn_loc: 0.007615  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:29:37] d2.utils.events INFO:  eta: 0:46:07  iter: 27899  total_loss: 0.1249  loss_cls: 0.02472  loss_box_reg: 0.09228  loss_rpn_cls: 0.0002886  loss_rpn_loc: 0.009885  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:29:55] d2.utils.events INFO:  eta: 0:45:50  iter: 27919  total_loss: 0.1142  loss_cls: 0.02362  loss_box_reg: 0.08203  loss_rpn_cls: 0.0002094  loss_rpn_loc: 0.008887  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:30:12] d2.utils.events INFO:  eta: 0:45:29  iter: 27939  total_loss: 0.1113  loss_cls: 0.02402  loss_box_reg: 0.07835  loss_rpn_cls: 0.0003598  loss_rpn_loc: 0.009922  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:30:30] d2.utils.events INFO:  eta: 0:45:12  iter: 27959  total_loss: 0.09313  loss_cls: 0.02182  loss_box_reg: 0.06493  loss_rpn_cls: 0.00016  loss_rpn_loc: 0.009341  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:30:48] d2.utils.events INFO:  eta: 0:44:51  iter: 27979  total_loss: 0.1125  loss_cls: 0.02131  loss_box_reg: 0.08142  loss_rpn_cls: 0.0003103  loss_rpn_loc: 0.009637  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:31:06] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 12:31:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 12:31:06] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 12:31:06] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 12:31:06] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 12:31:08] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0014 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:01:04
[04/03 12:31:13] d2.evaluation.evaluator INFO: Inference done 51/548. Dataloading: 0.0010 s/iter. Inference: 0.1255 s/iter. Eval: 0.0002 s/iter. Total: 0.1267 s/iter. ETA=0:01:02
[04/03 12:31:18] d2.evaluation.evaluator INFO: Inference done 92/548. Dataloading: 0.0012 s/iter. Inference: 0.1239 s/iter. Eval: 0.0002 s/iter. Total: 0.1254 s/iter. ETA=0:00:57
[04/03 12:31:23] d2.evaluation.evaluator INFO: Inference done 134/548. Dataloading: 0.0011 s/iter. Inference: 0.1220 s/iter. Eval: 0.0002 s/iter. Total: 0.1234 s/iter. ETA=0:00:51
[04/03 12:31:28] d2.evaluation.evaluator INFO: Inference done 175/548. Dataloading: 0.0011 s/iter. Inference: 0.1218 s/iter. Eval: 0.0002 s/iter. Total: 0.1231 s/iter. ETA=0:00:45
[04/03 12:31:33] d2.evaluation.evaluator INFO: Inference done 216/548. Dataloading: 0.0011 s/iter. Inference: 0.1219 s/iter. Eval: 0.0002 s/iter. Total: 0.1232 s/iter. ETA=0:00:40
[04/03 12:31:38] d2.evaluation.evaluator INFO: Inference done 258/548. Dataloading: 0.0010 s/iter. Inference: 0.1217 s/iter. Eval: 0.0002 s/iter. Total: 0.1229 s/iter. ETA=0:00:35
[04/03 12:31:43] d2.evaluation.evaluator INFO: Inference done 300/548. Dataloading: 0.0010 s/iter. Inference: 0.1214 s/iter. Eval: 0.0002 s/iter. Total: 0.1227 s/iter. ETA=0:00:30
[04/03 12:31:48] d2.evaluation.evaluator INFO: Inference done 342/548. Dataloading: 0.0010 s/iter. Inference: 0.1211 s/iter. Eval: 0.0002 s/iter. Total: 0.1223 s/iter. ETA=0:00:25
[04/03 12:31:53] d2.evaluation.evaluator INFO: Inference done 383/548. Dataloading: 0.0010 s/iter. Inference: 0.1213 s/iter. Eval: 0.0002 s/iter. Total: 0.1225 s/iter. ETA=0:00:20
[04/03 12:31:58] d2.evaluation.evaluator INFO: Inference done 425/548. Dataloading: 0.0010 s/iter. Inference: 0.1211 s/iter. Eval: 0.0002 s/iter. Total: 0.1223 s/iter. ETA=0:00:15
[04/03 12:32:04] d2.evaluation.evaluator INFO: Inference done 467/548. Dataloading: 0.0010 s/iter. Inference: 0.1209 s/iter. Eval: 0.0002 s/iter. Total: 0.1222 s/iter. ETA=0:00:09
[04/03 12:32:09] d2.evaluation.evaluator INFO: Inference done 509/548. Dataloading: 0.0010 s/iter. Inference: 0.1208 s/iter. Eval: 0.0002 s/iter. Total: 0.1220 s/iter. ETA=0:00:04
[04/03 12:32:13] d2.evaluation.evaluator INFO: Total inference time: 0:01:06.389564 (0.122264 s / iter per device, on 1 devices)
[04/03 12:32:13] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.120840 s / iter per device, on 1 devices)
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 12:32:14] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 12:32:14] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.38 seconds.
[04/03 12:32:14] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 12:32:14] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.488 | 11.510 | 6.458  | 2.154 | 13.650 | 13.515 |
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 12:32:14] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.864  | people          | 3.784  | bicycle    | 3.105 |
| car        | 34.349 | van             | 14.004 | truck      | 0.000 |
| tricycle   | 3.133  | awning-tricycle | 0.807  | bus        | 0.000 |
| motor      | 5.318  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 12:32:14] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 12:32:14] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 12:32:14] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 12:32:14] d2.evaluation.testing INFO: copypaste: 6.4877,11.5099,6.4583,2.1544,13.6495,13.5150,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 12:32:14] d2.utils.events INFO:  eta: 0:44:31  iter: 27999  total_loss: 0.1224  loss_cls: 0.02922  loss_box_reg: 0.08019  loss_rpn_cls: 0.0002903  loss_rpn_loc: 0.01206  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:32:32] d2.utils.events INFO:  eta: 0:44:17  iter: 28019  total_loss: 0.1078  loss_cls: 0.02235  loss_box_reg: 0.0733  loss_rpn_cls: 0.0002063  loss_rpn_loc: 0.009977  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:32:50] d2.utils.events INFO:  eta: 0:44:01  iter: 28039  total_loss: 0.1102  loss_cls: 0.02122  loss_box_reg: 0.07943  loss_rpn_cls: 0.0002058  loss_rpn_loc: 0.009638  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:33:08] d2.utils.events INFO:  eta: 0:43:45  iter: 28059  total_loss: 0.09897  loss_cls: 0.02332  loss_box_reg: 0.07333  loss_rpn_cls: 0.0001443  loss_rpn_loc: 0.008859  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:33:25] d2.utils.events INFO:  eta: 0:43:27  iter: 28079  total_loss: 0.1398  loss_cls: 0.02675  loss_box_reg: 0.09715  loss_rpn_cls: 0.0005041  loss_rpn_loc: 0.01569  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:33:42] d2.utils.events INFO:  eta: 0:43:07  iter: 28099  total_loss: 0.105  loss_cls: 0.02276  loss_box_reg: 0.07307  loss_rpn_cls: 9.334e-05  loss_rpn_loc: 0.009316  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:34:00] d2.utils.events INFO:  eta: 0:42:48  iter: 28119  total_loss: 0.1218  loss_cls: 0.02316  loss_box_reg: 0.08261  loss_rpn_cls: 0.0002425  loss_rpn_loc: 0.01085  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:34:17] d2.utils.events INFO:  eta: 0:42:30  iter: 28139  total_loss: 0.1288  loss_cls: 0.02586  loss_box_reg: 0.08672  loss_rpn_cls: 0.000473  loss_rpn_loc: 0.012  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:34:35] d2.utils.events INFO:  eta: 0:42:13  iter: 28159  total_loss: 0.1038  loss_cls: 0.0227  loss_box_reg: 0.07333  loss_rpn_cls: 0.0001246  loss_rpn_loc: 0.01005  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:34:53] d2.utils.events INFO:  eta: 0:41:55  iter: 28179  total_loss: 0.09314  loss_cls: 0.01974  loss_box_reg: 0.06253  loss_rpn_cls: 0.0001782  loss_rpn_loc: 0.007848  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:35:11] d2.utils.events INFO:  eta: 0:41:38  iter: 28199  total_loss: 0.1229  loss_cls: 0.02406  loss_box_reg: 0.08373  loss_rpn_cls: 0.0003715  loss_rpn_loc: 0.01234  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:35:28] d2.utils.events INFO:  eta: 0:41:16  iter: 28219  total_loss: 0.1291  loss_cls: 0.02966  loss_box_reg: 0.08565  loss_rpn_cls: 0.0002212  loss_rpn_loc: 0.01114  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:35:47] d2.utils.events INFO:  eta: 0:40:56  iter: 28239  total_loss: 0.1167  loss_cls: 0.02368  loss_box_reg: 0.08046  loss_rpn_cls: 0.0001683  loss_rpn_loc: 0.01149  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:36:04] d2.utils.events INFO:  eta: 0:40:37  iter: 28259  total_loss: 0.1367  loss_cls: 0.02854  loss_box_reg: 0.1001  loss_rpn_cls: 0.0003569  loss_rpn_loc: 0.01288  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:36:23] d2.utils.events INFO:  eta: 0:40:20  iter: 28279  total_loss: 0.1  loss_cls: 0.01746  loss_box_reg: 0.07386  loss_rpn_cls: 7.141e-05  loss_rpn_loc: 0.007846  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:36:40] d2.utils.events INFO:  eta: 0:40:04  iter: 28299  total_loss: 0.1203  loss_cls: 0.02558  loss_box_reg: 0.08819  loss_rpn_cls: 0.0002525  loss_rpn_loc: 0.01118  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:36:58] d2.utils.events INFO:  eta: 0:39:46  iter: 28319  total_loss: 0.1163  loss_cls: 0.02533  loss_box_reg: 0.07555  loss_rpn_cls: 0.0002391  loss_rpn_loc: 0.01192  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:37:16] d2.utils.events INFO:  eta: 0:39:33  iter: 28339  total_loss: 0.1208  loss_cls: 0.02277  loss_box_reg: 0.07471  loss_rpn_cls: 0.0001959  loss_rpn_loc: 0.01013  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:37:35] d2.utils.events INFO:  eta: 0:39:17  iter: 28359  total_loss: 0.1074  loss_cls: 0.02324  loss_box_reg: 0.08028  loss_rpn_cls: 0.0002013  loss_rpn_loc: 0.01042  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:37:52] d2.utils.events INFO:  eta: 0:38:58  iter: 28379  total_loss: 0.09317  loss_cls: 0.01879  loss_box_reg: 0.07049  loss_rpn_cls: 0.0002482  loss_rpn_loc: 0.008999  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:38:11] d2.utils.events INFO:  eta: 0:38:43  iter: 28399  total_loss: 0.09563  loss_cls: 0.01752  loss_box_reg: 0.06661  loss_rpn_cls: 9.766e-05  loss_rpn_loc: 0.00826  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:38:28] d2.utils.events INFO:  eta: 0:38:25  iter: 28419  total_loss: 0.1137  loss_cls: 0.02211  loss_box_reg: 0.07482  loss_rpn_cls: 0.0001823  loss_rpn_loc: 0.00794  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:38:46] d2.utils.events INFO:  eta: 0:38:06  iter: 28439  total_loss: 0.106  loss_cls: 0.02093  loss_box_reg: 0.07866  loss_rpn_cls: 0.0002097  loss_rpn_loc: 0.007894  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:39:03] d2.utils.events INFO:  eta: 0:37:45  iter: 28459  total_loss: 0.1206  loss_cls: 0.01994  loss_box_reg: 0.08193  loss_rpn_cls: 0.0001668  loss_rpn_loc: 0.01121  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:39:21] d2.utils.events INFO:  eta: 0:37:29  iter: 28479  total_loss: 0.1069  loss_cls: 0.0231  loss_box_reg: 0.07622  loss_rpn_cls: 6.957e-05  loss_rpn_loc: 0.007903  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:39:38] d2.utils.events INFO:  eta: 0:37:10  iter: 28499  total_loss: 0.1133  loss_cls: 0.0234  loss_box_reg: 0.07254  loss_rpn_cls: 0.0001706  loss_rpn_loc: 0.0107  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:39:56] d2.utils.events INFO:  eta: 0:36:54  iter: 28519  total_loss: 0.1065  loss_cls: 0.02483  loss_box_reg: 0.06976  loss_rpn_cls: 0.0001166  loss_rpn_loc: 0.009061  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:40:13] d2.utils.events INFO:  eta: 0:36:36  iter: 28539  total_loss: 0.1641  loss_cls: 0.03356  loss_box_reg: 0.1055  loss_rpn_cls: 0.0005639  loss_rpn_loc: 0.01577  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:40:31] d2.utils.events INFO:  eta: 0:36:19  iter: 28559  total_loss: 0.1331  loss_cls: 0.028  loss_box_reg: 0.08963  loss_rpn_cls: 0.000145  loss_rpn_loc: 0.01473  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:40:50] d2.utils.events INFO:  eta: 0:36:01  iter: 28579  total_loss: 0.1105  loss_cls: 0.02045  loss_box_reg: 0.07914  loss_rpn_cls: 0.0001062  loss_rpn_loc: 0.007571  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:41:07] d2.utils.events INFO:  eta: 0:35:43  iter: 28599  total_loss: 0.1218  loss_cls: 0.02385  loss_box_reg: 0.07814  loss_rpn_cls: 0.0001609  loss_rpn_loc: 0.009511  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:41:25] d2.utils.events INFO:  eta: 0:35:28  iter: 28619  total_loss: 0.09038  loss_cls: 0.01719  loss_box_reg: 0.06759  loss_rpn_cls: 0.0002169  loss_rpn_loc: 0.01001  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:41:42] d2.utils.events INFO:  eta: 0:35:07  iter: 28639  total_loss: 0.133  loss_cls: 0.02696  loss_box_reg: 0.09249  loss_rpn_cls: 0.0002232  loss_rpn_loc: 0.01194  time: 0.8831  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:42:00] d2.utils.events INFO:  eta: 0:34:49  iter: 28659  total_loss: 0.1052  loss_cls: 0.01967  loss_box_reg: 0.0736  loss_rpn_cls: 0.0001535  loss_rpn_loc: 0.009791  time: 0.8831  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:42:17] d2.utils.events INFO:  eta: 0:34:30  iter: 28679  total_loss: 0.1354  loss_cls: 0.0266  loss_box_reg: 0.08949  loss_rpn_cls: 0.0002228  loss_rpn_loc: 0.0104  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:42:35] d2.utils.events INFO:  eta: 0:34:11  iter: 28699  total_loss: 0.0936  loss_cls: 0.01842  loss_box_reg: 0.06877  loss_rpn_cls: 0.0001912  loss_rpn_loc: 0.008291  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:42:53] d2.utils.events INFO:  eta: 0:33:55  iter: 28719  total_loss: 0.1019  loss_cls: 0.021  loss_box_reg: 0.07189  loss_rpn_cls: 0.0001053  loss_rpn_loc: 0.009079  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:43:10] d2.utils.events INFO:  eta: 0:33:38  iter: 28739  total_loss: 0.1177  loss_cls: 0.0259  loss_box_reg: 0.08432  loss_rpn_cls: 0.0002992  loss_rpn_loc: 0.009489  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:43:27] d2.utils.events INFO:  eta: 0:33:19  iter: 28759  total_loss: 0.1102  loss_cls: 0.02451  loss_box_reg: 0.07974  loss_rpn_cls: 0.0002389  loss_rpn_loc: 0.01062  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:43:45] d2.utils.events INFO:  eta: 0:33:01  iter: 28779  total_loss: 0.1155  loss_cls: 0.02008  loss_box_reg: 0.07484  loss_rpn_cls: 0.000213  loss_rpn_loc: 0.01027  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:44:02] d2.utils.events INFO:  eta: 0:32:43  iter: 28799  total_loss: 0.1106  loss_cls: 0.0198  loss_box_reg: 0.07824  loss_rpn_cls: 0.0002508  loss_rpn_loc: 0.01207  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:44:21] d2.utils.events INFO:  eta: 0:32:25  iter: 28819  total_loss: 0.07614  loss_cls: 0.01362  loss_box_reg: 0.04924  loss_rpn_cls: 0.0001637  loss_rpn_loc: 0.006261  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:44:38] d2.utils.events INFO:  eta: 0:32:07  iter: 28839  total_loss: 0.1081  loss_cls: 0.02237  loss_box_reg: 0.07517  loss_rpn_cls: 0.0002353  loss_rpn_loc: 0.01067  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:44:55] d2.utils.events INFO:  eta: 0:31:47  iter: 28859  total_loss: 0.09153  loss_cls: 0.0164  loss_box_reg: 0.07145  loss_rpn_cls: 0.0001589  loss_rpn_loc: 0.008003  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:45:13] d2.utils.events INFO:  eta: 0:31:29  iter: 28879  total_loss: 0.1122  loss_cls: 0.02459  loss_box_reg: 0.07471  loss_rpn_cls: 0.0004069  loss_rpn_loc: 0.01033  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:45:31] d2.utils.events INFO:  eta: 0:31:11  iter: 28899  total_loss: 0.1068  loss_cls: 0.01967  loss_box_reg: 0.08154  loss_rpn_cls: 0.0001813  loss_rpn_loc: 0.009807  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:45:48] d2.utils.events INFO:  eta: 0:30:51  iter: 28919  total_loss: 0.1207  loss_cls: 0.02325  loss_box_reg: 0.08156  loss_rpn_cls: 0.000254  loss_rpn_loc: 0.01089  time: 0.8830  data_time: 0.0022  lr: 2e-05  max_mem: 15391M
[04/03 12:46:06] d2.utils.events INFO:  eta: 0:30:31  iter: 28939  total_loss: 0.1097  loss_cls: 0.01775  loss_box_reg: 0.07944  loss_rpn_cls: 0.0001365  loss_rpn_loc: 0.009121  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:46:23] d2.utils.events INFO:  eta: 0:30:14  iter: 28959  total_loss: 0.1204  loss_cls: 0.02317  loss_box_reg: 0.08426  loss_rpn_cls: 0.0001479  loss_rpn_loc: 0.0117  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:46:39] d2.utils.events INFO:  eta: 0:29:54  iter: 28979  total_loss: 0.09788  loss_cls: 0.01897  loss_box_reg: 0.07064  loss_rpn_cls: 0.0001536  loss_rpn_loc: 0.0101  time: 0.8829  data_time: 0.0022  lr: 2e-05  max_mem: 15391M
[04/03 12:46:58] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 12:46:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 12:46:58] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 12:46:58] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 12:46:58] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 12:47:00] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1174 s/iter. Eval: 0.0006 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/03 12:47:05] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1185 s/iter. Eval: 0.0002 s/iter. Total: 0.1196 s/iter. ETA=0:00:59
[04/03 12:47:10] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:54
[04/03 12:47:15] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:49
[04/03 12:47:20] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:44
[04/03 12:47:25] d2.evaluation.evaluator INFO: Inference done 220/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:39
[04/03 12:47:30] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:34
[04/03 12:47:35] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1189 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:29
[04/03 12:47:40] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:24
[04/03 12:47:45] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1201 s/iter. ETA=0:00:19
[04/03 12:47:50] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1191 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:14
[04/03 12:47:55] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:09
[04/03 12:48:00] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:04
[04/03 12:48:04] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.456909 (0.120547 s / iter per device, on 1 devices)
[04/03 12:48:04] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119223 s / iter per device, on 1 devices)
[04/03 12:48:04] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 12:48:04] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 12:48:04] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 12:48:05] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 12:48:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.38 seconds.
[04/03 12:48:05] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 12:48:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.451 | 11.382 | 6.421  | 2.161 | 13.686 | 13.374 |
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 12:48:05] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.817  | people          | 3.852  | bicycle    | 3.128 |
| car        | 34.279 | van             | 14.054 | truck      | 0.000 |
| tricycle   | 3.092  | awning-tricycle | 0.816  | bus        | 0.000 |
| motor      | 4.928  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 12:48:05] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 12:48:05] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 12:48:05] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 12:48:05] d2.evaluation.testing INFO: copypaste: 6.4515,11.3815,6.4215,2.1608,13.6858,13.3739,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 12:48:05] d2.utils.events INFO:  eta: 0:29:35  iter: 28999  total_loss: 0.0999  loss_cls: 0.02223  loss_box_reg: 0.07385  loss_rpn_cls: 0.0002101  loss_rpn_loc: 0.01026  time: 0.8829  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:48:24] d2.utils.events INFO:  eta: 0:29:20  iter: 29019  total_loss: 0.1059  loss_cls: 0.0203  loss_box_reg: 0.07338  loss_rpn_cls: 0.0001257  loss_rpn_loc: 0.007859  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:48:42] d2.utils.events INFO:  eta: 0:29:03  iter: 29039  total_loss: 0.1071  loss_cls: 0.02404  loss_box_reg: 0.07468  loss_rpn_cls: 0.0001454  loss_rpn_loc: 0.01038  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:49:00] d2.utils.events INFO:  eta: 0:28:44  iter: 29059  total_loss: 0.1174  loss_cls: 0.02702  loss_box_reg: 0.07693  loss_rpn_cls: 0.0002715  loss_rpn_loc: 0.0105  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:49:18] d2.utils.events INFO:  eta: 0:28:29  iter: 29079  total_loss: 0.1275  loss_cls: 0.02966  loss_box_reg: 0.08977  loss_rpn_cls: 0.0002506  loss_rpn_loc: 0.0163  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:49:35] d2.utils.events INFO:  eta: 0:28:12  iter: 29099  total_loss: 0.08804  loss_cls: 0.01852  loss_box_reg: 0.06478  loss_rpn_cls: 0.0001848  loss_rpn_loc: 0.007519  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:49:54] d2.utils.events INFO:  eta: 0:27:55  iter: 29119  total_loss: 0.108  loss_cls: 0.02515  loss_box_reg: 0.07457  loss_rpn_cls: 0.000251  loss_rpn_loc: 0.00962  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:50:11] d2.utils.events INFO:  eta: 0:27:38  iter: 29139  total_loss: 0.1047  loss_cls: 0.0242  loss_box_reg: 0.07362  loss_rpn_cls: 0.0001909  loss_rpn_loc: 0.00952  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:50:29] d2.utils.events INFO:  eta: 0:27:19  iter: 29159  total_loss: 0.08082  loss_cls: 0.01689  loss_box_reg: 0.05531  loss_rpn_cls: 0.0001155  loss_rpn_loc: 0.006504  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:50:46] d2.utils.events INFO:  eta: 0:27:01  iter: 29179  total_loss: 0.1045  loss_cls: 0.01962  loss_box_reg: 0.07104  loss_rpn_cls: 0.0001584  loss_rpn_loc: 0.008878  time: 0.8830  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:51:04] d2.utils.events INFO:  eta: 0:26:44  iter: 29199  total_loss: 0.1212  loss_cls: 0.02526  loss_box_reg: 0.07998  loss_rpn_cls: 0.0001983  loss_rpn_loc: 0.0123  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:51:22] d2.utils.events INFO:  eta: 0:26:28  iter: 29219  total_loss: 0.101  loss_cls: 0.01788  loss_box_reg: 0.07274  loss_rpn_cls: 0.0003181  loss_rpn_loc: 0.01063  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:51:40] d2.utils.events INFO:  eta: 0:26:09  iter: 29239  total_loss: 0.1038  loss_cls: 0.02461  loss_box_reg: 0.07185  loss_rpn_cls: 0.0001981  loss_rpn_loc: 0.009898  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:51:57] d2.utils.events INFO:  eta: 0:25:50  iter: 29259  total_loss: 0.1419  loss_cls: 0.03019  loss_box_reg: 0.09709  loss_rpn_cls: 0.000162  loss_rpn_loc: 0.01371  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:52:15] d2.utils.events INFO:  eta: 0:25:32  iter: 29279  total_loss: 0.1018  loss_cls: 0.02125  loss_box_reg: 0.06905  loss_rpn_cls: 0.0001564  loss_rpn_loc: 0.006839  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:52:32] d2.utils.events INFO:  eta: 0:25:14  iter: 29299  total_loss: 0.1265  loss_cls: 0.02492  loss_box_reg: 0.08184  loss_rpn_cls: 0.0001682  loss_rpn_loc: 0.01149  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:52:49] d2.utils.events INFO:  eta: 0:24:55  iter: 29319  total_loss: 0.1015  loss_cls: 0.01874  loss_box_reg: 0.07474  loss_rpn_cls: 0.0003059  loss_rpn_loc: 0.008113  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:53:07] d2.utils.events INFO:  eta: 0:24:37  iter: 29339  total_loss: 0.1068  loss_cls: 0.02307  loss_box_reg: 0.07191  loss_rpn_cls: 0.000181  loss_rpn_loc: 0.007677  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:53:25] d2.utils.events INFO:  eta: 0:24:18  iter: 29359  total_loss: 0.07877  loss_cls: 0.0175  loss_box_reg: 0.05684  loss_rpn_cls: 8.342e-05  loss_rpn_loc: 0.005071  time: 0.8830  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 12:53:42] d2.utils.events INFO:  eta: 0:23:59  iter: 29379  total_loss: 0.08982  loss_cls: 0.01369  loss_box_reg: 0.06411  loss_rpn_cls: 0.0001935  loss_rpn_loc: 0.006833  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:54:01] d2.utils.events INFO:  eta: 0:23:40  iter: 29399  total_loss: 0.1118  loss_cls: 0.01988  loss_box_reg: 0.07803  loss_rpn_cls: 0.0002073  loss_rpn_loc: 0.01081  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:54:19] d2.utils.events INFO:  eta: 0:23:24  iter: 29419  total_loss: 0.09982  loss_cls: 0.01826  loss_box_reg: 0.07122  loss_rpn_cls: 0.0002579  loss_rpn_loc: 0.008826  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:54:36] d2.utils.events INFO:  eta: 0:23:04  iter: 29439  total_loss: 0.1197  loss_cls: 0.02678  loss_box_reg: 0.07853  loss_rpn_cls: 0.0001496  loss_rpn_loc: 0.01001  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:54:54] d2.utils.events INFO:  eta: 0:22:49  iter: 29459  total_loss: 0.1101  loss_cls: 0.02284  loss_box_reg: 0.07218  loss_rpn_cls: 9.85e-05  loss_rpn_loc: 0.008969  time: 0.8830  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:55:13] d2.utils.events INFO:  eta: 0:22:32  iter: 29479  total_loss: 0.09281  loss_cls: 0.0189  loss_box_reg: 0.0668  loss_rpn_cls: 0.0001913  loss_rpn_loc: 0.008976  time: 0.8830  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:55:31] d2.utils.events INFO:  eta: 0:22:16  iter: 29499  total_loss: 0.1262  loss_cls: 0.02405  loss_box_reg: 0.08882  loss_rpn_cls: 9.385e-05  loss_rpn_loc: 0.01129  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:55:50] d2.utils.events INFO:  eta: 0:21:58  iter: 29519  total_loss: 0.1045  loss_cls: 0.01945  loss_box_reg: 0.07141  loss_rpn_cls: 0.000114  loss_rpn_loc: 0.008466  time: 0.8831  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:56:07] d2.utils.events INFO:  eta: 0:21:40  iter: 29539  total_loss: 0.09905  loss_cls: 0.01941  loss_box_reg: 0.0692  loss_rpn_cls: 0.0002429  loss_rpn_loc: 0.01074  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:56:25] d2.utils.events INFO:  eta: 0:21:22  iter: 29559  total_loss: 0.1197  loss_cls: 0.02696  loss_box_reg: 0.0817  loss_rpn_cls: 0.0001568  loss_rpn_loc: 0.01085  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:56:44] d2.utils.events INFO:  eta: 0:21:05  iter: 29579  total_loss: 0.09098  loss_cls: 0.02011  loss_box_reg: 0.0621  loss_rpn_cls: 0.0001484  loss_rpn_loc: 0.008583  time: 0.8831  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:57:03] d2.utils.events INFO:  eta: 0:20:49  iter: 29599  total_loss: 0.1104  loss_cls: 0.02448  loss_box_reg: 0.07642  loss_rpn_cls: 0.0001608  loss_rpn_loc: 0.008809  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:57:21] d2.utils.events INFO:  eta: 0:20:29  iter: 29619  total_loss: 0.1093  loss_cls: 0.02186  loss_box_reg: 0.07656  loss_rpn_cls: 0.0002399  loss_rpn_loc: 0.01083  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:57:39] d2.utils.events INFO:  eta: 0:20:13  iter: 29639  total_loss: 0.115  loss_cls: 0.0219  loss_box_reg: 0.08346  loss_rpn_cls: 0.0003002  loss_rpn_loc: 0.01062  time: 0.8832  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:57:59] d2.utils.events INFO:  eta: 0:19:56  iter: 29659  total_loss: 0.09744  loss_cls: 0.01675  loss_box_reg: 0.06909  loss_rpn_cls: 8.265e-05  loss_rpn_loc: 0.008889  time: 0.8833  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:58:15] d2.utils.events INFO:  eta: 0:19:38  iter: 29679  total_loss: 0.1162  loss_cls: 0.02299  loss_box_reg: 0.08422  loss_rpn_cls: 0.0002683  loss_rpn_loc: 0.01101  time: 0.8832  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:58:35] d2.utils.events INFO:  eta: 0:19:24  iter: 29699  total_loss: 0.1133  loss_cls: 0.02032  loss_box_reg: 0.08564  loss_rpn_cls: 0.0002591  loss_rpn_loc: 0.008943  time: 0.8833  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:58:53] d2.utils.events INFO:  eta: 0:19:07  iter: 29719  total_loss: 0.08757  loss_cls: 0.0181  loss_box_reg: 0.06335  loss_rpn_cls: 0.0001122  loss_rpn_loc: 0.006486  time: 0.8833  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 12:59:12] d2.utils.events INFO:  eta: 0:18:52  iter: 29739  total_loss: 0.09329  loss_cls: 0.02048  loss_box_reg: 0.06627  loss_rpn_cls: 0.0001477  loss_rpn_loc: 0.007851  time: 0.8833  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 12:59:30] d2.utils.events INFO:  eta: 0:18:36  iter: 29759  total_loss: 0.1108  loss_cls: 0.0227  loss_box_reg: 0.08102  loss_rpn_cls: 0.0001084  loss_rpn_loc: 0.007781  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 12:59:49] d2.utils.events INFO:  eta: 0:18:20  iter: 29779  total_loss: 0.1154  loss_cls: 0.02495  loss_box_reg: 0.07953  loss_rpn_cls: 8.593e-05  loss_rpn_loc: 0.009579  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:00:07] d2.utils.events INFO:  eta: 0:18:03  iter: 29799  total_loss: 0.09704  loss_cls: 0.01688  loss_box_reg: 0.07297  loss_rpn_cls: 0.0001117  loss_rpn_loc: 0.01026  time: 0.8834  data_time: 0.0026  lr: 2e-05  max_mem: 15391M
[04/03 13:00:25] d2.utils.events INFO:  eta: 0:17:44  iter: 29819  total_loss: 0.1126  loss_cls: 0.02257  loss_box_reg: 0.07513  loss_rpn_cls: 0.0002898  loss_rpn_loc: 0.01015  time: 0.8834  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:00:44] d2.utils.events INFO:  eta: 0:17:27  iter: 29839  total_loss: 0.08701  loss_cls: 0.01999  loss_box_reg: 0.0603  loss_rpn_cls: 0.0001511  loss_rpn_loc: 0.008124  time: 0.8835  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 13:01:02] d2.utils.events INFO:  eta: 0:17:12  iter: 29859  total_loss: 0.1522  loss_cls: 0.03185  loss_box_reg: 0.09507  loss_rpn_cls: 0.0002206  loss_rpn_loc: 0.0148  time: 0.8835  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 13:01:21] d2.utils.events INFO:  eta: 0:16:53  iter: 29879  total_loss: 0.1256  loss_cls: 0.02489  loss_box_reg: 0.08872  loss_rpn_cls: 0.0001353  loss_rpn_loc: 0.01154  time: 0.8835  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 13:01:39] d2.utils.events INFO:  eta: 0:16:37  iter: 29899  total_loss: 0.0938  loss_cls: 0.02166  loss_box_reg: 0.07033  loss_rpn_cls: 0.0003371  loss_rpn_loc: 0.00735  time: 0.8835  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:01:59] d2.utils.events INFO:  eta: 0:16:21  iter: 29919  total_loss: 0.1105  loss_cls: 0.01928  loss_box_reg: 0.07842  loss_rpn_cls: 0.0001254  loss_rpn_loc: 0.009041  time: 0.8836  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:02:17] d2.utils.events INFO:  eta: 0:16:05  iter: 29939  total_loss: 0.1033  loss_cls: 0.01886  loss_box_reg: 0.07575  loss_rpn_cls: 0.0001668  loss_rpn_loc: 0.008388  time: 0.8836  data_time: 0.0023  lr: 2e-05  max_mem: 15391M
[04/03 13:02:36] d2.utils.events INFO:  eta: 0:15:48  iter: 29959  total_loss: 0.1169  loss_cls: 0.02522  loss_box_reg: 0.07726  loss_rpn_cls: 0.0002464  loss_rpn_loc: 0.01088  time: 0.8836  data_time: 0.0025  lr: 2e-05  max_mem: 15391M
[04/03 13:02:54] d2.utils.events INFO:  eta: 0:15:31  iter: 29979  total_loss: 0.09501  loss_cls: 0.01761  loss_box_reg: 0.06451  loss_rpn_cls: 0.0001109  loss_rpn_loc: 0.007153  time: 0.8837  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:03:13] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 13:03:13] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 13:03:13] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 13:03:13] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 13:03:14] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 13:03:15] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0008 s/iter. Inference: 0.1292 s/iter. Eval: 0.0002 s/iter. Total: 0.1302 s/iter. ETA=0:01:09
[04/03 13:03:20] d2.evaluation.evaluator INFO: Inference done 50/548. Dataloading: 0.0010 s/iter. Inference: 0.1275 s/iter. Eval: 0.0003 s/iter. Total: 0.1288 s/iter. ETA=0:01:04
[04/03 13:03:25] d2.evaluation.evaluator INFO: Inference done 89/548. Dataloading: 0.0010 s/iter. Inference: 0.1279 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:59
[04/03 13:03:30] d2.evaluation.evaluator INFO: Inference done 128/548. Dataloading: 0.0010 s/iter. Inference: 0.1279 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:54
[04/03 13:03:35] d2.evaluation.evaluator INFO: Inference done 167/548. Dataloading: 0.0010 s/iter. Inference: 0.1281 s/iter. Eval: 0.0002 s/iter. Total: 0.1294 s/iter. ETA=0:00:49
[04/03 13:03:41] d2.evaluation.evaluator INFO: Inference done 207/548. Dataloading: 0.0010 s/iter. Inference: 0.1279 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:44
[04/03 13:03:46] d2.evaluation.evaluator INFO: Inference done 247/548. Dataloading: 0.0010 s/iter. Inference: 0.1279 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:38
[04/03 13:03:51] d2.evaluation.evaluator INFO: Inference done 286/548. Dataloading: 0.0010 s/iter. Inference: 0.1278 s/iter. Eval: 0.0002 s/iter. Total: 0.1291 s/iter. ETA=0:00:33
[04/03 13:03:56] d2.evaluation.evaluator INFO: Inference done 325/548. Dataloading: 0.0010 s/iter. Inference: 0.1280 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:28
[04/03 13:04:01] d2.evaluation.evaluator INFO: Inference done 364/548. Dataloading: 0.0010 s/iter. Inference: 0.1280 s/iter. Eval: 0.0002 s/iter. Total: 0.1292 s/iter. ETA=0:00:23
[04/03 13:04:06] d2.evaluation.evaluator INFO: Inference done 403/548. Dataloading: 0.0010 s/iter. Inference: 0.1281 s/iter. Eval: 0.0002 s/iter. Total: 0.1294 s/iter. ETA=0:00:18
[04/03 13:04:11] d2.evaluation.evaluator INFO: Inference done 442/548. Dataloading: 0.0010 s/iter. Inference: 0.1281 s/iter. Eval: 0.0002 s/iter. Total: 0.1293 s/iter. ETA=0:00:13
[04/03 13:04:16] d2.evaluation.evaluator INFO: Inference done 481/548. Dataloading: 0.0010 s/iter. Inference: 0.1282 s/iter. Eval: 0.0002 s/iter. Total: 0.1294 s/iter. ETA=0:00:08
[04/03 13:04:21] d2.evaluation.evaluator INFO: Inference done 520/548. Dataloading: 0.0010 s/iter. Inference: 0.1282 s/iter. Eval: 0.0002 s/iter. Total: 0.1294 s/iter. ETA=0:00:03
[04/03 13:04:25] d2.evaluation.evaluator INFO: Total inference time: 0:01:10.371495 (0.129598 s / iter per device, on 1 devices)
[04/03 13:04:25] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:09 (0.128202 s / iter per device, on 1 devices)
[04/03 13:04:25] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 13:04:25] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 13:04:25] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 13:04:25] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 13:04:26] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.50 seconds.
[04/03 13:04:26] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 13:04:26] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.496 | 11.471 | 6.389  | 2.240 | 13.548 | 13.608 |
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 13:04:26] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.591  | people          | 3.557  | bicycle    | 2.989 |
| car        | 34.500 | van             | 14.156 | truck      | 0.000 |
| tricycle   | 3.417  | awning-tricycle | 0.992  | bus        | 0.000 |
| motor      | 5.254  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 13:04:26] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 13:04:26] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 13:04:26] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 13:04:26] d2.evaluation.testing INFO: copypaste: 6.4961,11.4712,6.3891,2.2396,13.5479,13.6075,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/03 13:04:26] d2.utils.events INFO:  eta: 0:15:14  iter: 29999  total_loss: 0.09848  loss_cls: 0.02157  loss_box_reg: 0.07335  loss_rpn_cls: 0.0001588  loss_rpn_loc: 0.009198  time: 0.8837  data_time: 0.0024  lr: 2e-05  max_mem: 15391M
[04/03 13:04:45] d2.utils.events INFO:  eta: 0:14:56  iter: 30019  total_loss: 0.1258  loss_cls: 0.02896  loss_box_reg: 0.08015  loss_rpn_cls: 9.467e-05  loss_rpn_loc: 0.01109  time: 0.8837  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:05:03] d2.utils.events INFO:  eta: 0:14:38  iter: 30039  total_loss: 0.09398  loss_cls: 0.01858  loss_box_reg: 0.07113  loss_rpn_cls: 0.0001779  loss_rpn_loc: 0.009258  time: 0.8838  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:05:22] d2.utils.events INFO:  eta: 0:14:20  iter: 30059  total_loss: 0.1028  loss_cls: 0.01653  loss_box_reg: 0.06892  loss_rpn_cls: 0.0001383  loss_rpn_loc: 0.0104  time: 0.8838  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:05:41] d2.utils.events INFO:  eta: 0:14:03  iter: 30079  total_loss: 0.1423  loss_cls: 0.02946  loss_box_reg: 0.08839  loss_rpn_cls: 0.0004069  loss_rpn_loc: 0.01322  time: 0.8838  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:05:59] d2.utils.events INFO:  eta: 0:13:45  iter: 30099  total_loss: 0.1047  loss_cls: 0.02039  loss_box_reg: 0.07056  loss_rpn_cls: 0.0001625  loss_rpn_loc: 0.008855  time: 0.8839  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:06:18] d2.utils.events INFO:  eta: 0:13:27  iter: 30119  total_loss: 0.1249  loss_cls: 0.02288  loss_box_reg: 0.09053  loss_rpn_cls: 0.0001442  loss_rpn_loc: 0.009525  time: 0.8839  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:06:37] d2.utils.events INFO:  eta: 0:13:09  iter: 30139  total_loss: 0.108  loss_cls: 0.02277  loss_box_reg: 0.06801  loss_rpn_cls: 9.214e-05  loss_rpn_loc: 0.009071  time: 0.8839  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:06:55] d2.utils.events INFO:  eta: 0:12:51  iter: 30159  total_loss: 0.07641  loss_cls: 0.01597  loss_box_reg: 0.06129  loss_rpn_cls: 7.57e-05  loss_rpn_loc: 0.007567  time: 0.8840  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:07:14] d2.utils.events INFO:  eta: 0:12:34  iter: 30179  total_loss: 0.106  loss_cls: 0.02418  loss_box_reg: 0.07362  loss_rpn_cls: 0.0003028  loss_rpn_loc: 0.01188  time: 0.8840  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:07:32] d2.utils.events INFO:  eta: 0:12:15  iter: 30199  total_loss: 0.1011  loss_cls: 0.02046  loss_box_reg: 0.07233  loss_rpn_cls: 0.0001942  loss_rpn_loc: 0.009226  time: 0.8840  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:07:51] d2.utils.events INFO:  eta: 0:11:58  iter: 30219  total_loss: 0.09647  loss_cls: 0.01969  loss_box_reg: 0.0693  loss_rpn_cls: 0.0002535  loss_rpn_loc: 0.006958  time: 0.8840  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:08:09] d2.utils.events INFO:  eta: 0:11:40  iter: 30239  total_loss: 0.1006  loss_cls: 0.02183  loss_box_reg: 0.07167  loss_rpn_cls: 0.0002944  loss_rpn_loc: 0.00864  time: 0.8841  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:08:28] d2.utils.events INFO:  eta: 0:11:22  iter: 30259  total_loss: 0.1076  loss_cls: 0.02109  loss_box_reg: 0.06775  loss_rpn_cls: 9.21e-05  loss_rpn_loc: 0.009943  time: 0.8841  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:08:46] d2.utils.events INFO:  eta: 0:11:04  iter: 30279  total_loss: 0.1231  loss_cls: 0.02511  loss_box_reg: 0.08655  loss_rpn_cls: 0.0002654  loss_rpn_loc: 0.01073  time: 0.8841  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:09:05] d2.utils.events INFO:  eta: 0:10:46  iter: 30299  total_loss: 0.1053  loss_cls: 0.02265  loss_box_reg: 0.07657  loss_rpn_cls: 0.0001525  loss_rpn_loc: 0.009675  time: 0.8841  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:09:24] d2.utils.events INFO:  eta: 0:10:29  iter: 30319  total_loss: 0.118  loss_cls: 0.026  loss_box_reg: 0.08282  loss_rpn_cls: 0.0001381  loss_rpn_loc: 0.01004  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:09:43] d2.utils.events INFO:  eta: 0:10:11  iter: 30339  total_loss: 0.1088  loss_cls: 0.0224  loss_box_reg: 0.08192  loss_rpn_cls: 0.0002363  loss_rpn_loc: 0.01149  time: 0.8842  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:10:02] d2.utils.events INFO:  eta: 0:09:53  iter: 30359  total_loss: 0.08282  loss_cls: 0.01729  loss_box_reg: 0.05748  loss_rpn_cls: 6.755e-05  loss_rpn_loc: 0.007945  time: 0.8843  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:10:20] d2.utils.events INFO:  eta: 0:09:35  iter: 30379  total_loss: 0.1033  loss_cls: 0.02068  loss_box_reg: 0.06763  loss_rpn_cls: 0.0001591  loss_rpn_loc: 0.009537  time: 0.8843  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:10:39] d2.utils.events INFO:  eta: 0:09:17  iter: 30399  total_loss: 0.1074  loss_cls: 0.01961  loss_box_reg: 0.07219  loss_rpn_cls: 0.0002721  loss_rpn_loc: 0.01136  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:10:56] d2.utils.events INFO:  eta: 0:08:58  iter: 30419  total_loss: 0.1147  loss_cls: 0.02122  loss_box_reg: 0.07327  loss_rpn_cls: 0.0001592  loss_rpn_loc: 0.01121  time: 0.8843  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:11:15] d2.utils.events INFO:  eta: 0:08:40  iter: 30439  total_loss: 0.1061  loss_cls: 0.02256  loss_box_reg: 0.07617  loss_rpn_cls: 0.0002732  loss_rpn_loc: 0.01054  time: 0.8843  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:11:34] d2.utils.events INFO:  eta: 0:08:22  iter: 30459  total_loss: 0.1296  loss_cls: 0.02562  loss_box_reg: 0.08296  loss_rpn_cls: 0.0002663  loss_rpn_loc: 0.01168  time: 0.8844  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:11:51] d2.utils.events INFO:  eta: 0:08:03  iter: 30479  total_loss: 0.1094  loss_cls: 0.02678  loss_box_reg: 0.07377  loss_rpn_cls: 0.0002002  loss_rpn_loc: 0.0104  time: 0.8844  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:12:08] d2.utils.events INFO:  eta: 0:07:44  iter: 30499  total_loss: 0.09383  loss_cls: 0.02133  loss_box_reg: 0.07054  loss_rpn_cls: 0.0001485  loss_rpn_loc: 0.00985  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:12:26] d2.utils.events INFO:  eta: 0:07:25  iter: 30519  total_loss: 0.09111  loss_cls: 0.01872  loss_box_reg: 0.06507  loss_rpn_cls: 0.000137  loss_rpn_loc: 0.008701  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:12:43] d2.utils.events INFO:  eta: 0:07:06  iter: 30539  total_loss: 0.1018  loss_cls: 0.01898  loss_box_reg: 0.07252  loss_rpn_cls: 0.0001376  loss_rpn_loc: 0.008227  time: 0.8843  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:13:01] d2.utils.events INFO:  eta: 0:06:48  iter: 30559  total_loss: 0.09969  loss_cls: 0.02031  loss_box_reg: 0.06391  loss_rpn_cls: 0.0001928  loss_rpn_loc: 0.007811  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:13:19] d2.utils.events INFO:  eta: 0:06:28  iter: 30579  total_loss: 0.09865  loss_cls: 0.02203  loss_box_reg: 0.06987  loss_rpn_cls: 0.0001557  loss_rpn_loc: 0.009625  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:13:37] d2.utils.events INFO:  eta: 0:06:10  iter: 30599  total_loss: 0.09432  loss_cls: 0.01822  loss_box_reg: 0.0724  loss_rpn_cls: 0.000215  loss_rpn_loc: 0.008311  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:13:54] d2.utils.events INFO:  eta: 0:05:51  iter: 30619  total_loss: 0.1152  loss_cls: 0.02194  loss_box_reg: 0.07753  loss_rpn_cls: 0.0001612  loss_rpn_loc: 0.008517  time: 0.8843  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:14:11] d2.utils.events INFO:  eta: 0:05:32  iter: 30639  total_loss: 0.126  loss_cls: 0.0247  loss_box_reg: 0.08644  loss_rpn_cls: 0.0002141  loss_rpn_loc: 0.009705  time: 0.8843  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:14:29] d2.utils.events INFO:  eta: 0:05:13  iter: 30659  total_loss: 0.1072  loss_cls: 0.02385  loss_box_reg: 0.07585  loss_rpn_cls: 0.0002223  loss_rpn_loc: 0.007942  time: 0.8843  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:14:46] d2.utils.events INFO:  eta: 0:04:55  iter: 30679  total_loss: 0.1177  loss_cls: 0.02462  loss_box_reg: 0.07997  loss_rpn_cls: 0.0001627  loss_rpn_loc: 0.01025  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:15:03] d2.utils.events INFO:  eta: 0:04:36  iter: 30699  total_loss: 0.1132  loss_cls: 0.02785  loss_box_reg: 0.08239  loss_rpn_cls: 0.0002943  loss_rpn_loc: 0.01227  time: 0.8843  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:15:21] d2.utils.events INFO:  eta: 0:04:17  iter: 30719  total_loss: 0.1166  loss_cls: 0.02687  loss_box_reg: 0.07603  loss_rpn_cls: 0.0002417  loss_rpn_loc: 0.009896  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:15:39] d2.utils.events INFO:  eta: 0:03:59  iter: 30739  total_loss: 0.09823  loss_cls: 0.0211  loss_box_reg: 0.07021  loss_rpn_cls: 0.0001852  loss_rpn_loc: 0.009  time: 0.8843  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:15:56] d2.utils.events INFO:  eta: 0:03:40  iter: 30759  total_loss: 0.09549  loss_cls: 0.02015  loss_box_reg: 0.0646  loss_rpn_cls: 0.0001849  loss_rpn_loc: 0.008643  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:16:14] d2.utils.events INFO:  eta: 0:03:21  iter: 30779  total_loss: 0.1028  loss_cls: 0.02082  loss_box_reg: 0.07306  loss_rpn_cls: 8.33e-05  loss_rpn_loc: 0.009144  time: 0.8843  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:16:32] d2.utils.events INFO:  eta: 0:03:03  iter: 30799  total_loss: 0.09555  loss_cls: 0.01895  loss_box_reg: 0.06969  loss_rpn_cls: 0.0001008  loss_rpn_loc: 0.006504  time: 0.8843  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:16:50] d2.utils.events INFO:  eta: 0:02:45  iter: 30819  total_loss: 0.1153  loss_cls: 0.02712  loss_box_reg: 0.07338  loss_rpn_cls: 0.000216  loss_rpn_loc: 0.01051  time: 0.8843  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:17:07] d2.utils.events INFO:  eta: 0:02:26  iter: 30839  total_loss: 0.1223  loss_cls: 0.02286  loss_box_reg: 0.08825  loss_rpn_cls: 0.0001755  loss_rpn_loc: 0.01088  time: 0.8842  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:17:24] d2.utils.events INFO:  eta: 0:02:08  iter: 30859  total_loss: 0.1083  loss_cls: 0.02123  loss_box_reg: 0.07639  loss_rpn_cls: 0.0001448  loss_rpn_loc: 0.011  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:17:42] d2.utils.events INFO:  eta: 0:01:49  iter: 30879  total_loss: 0.1325  loss_cls: 0.02851  loss_box_reg: 0.08955  loss_rpn_cls: 0.0001655  loss_rpn_loc: 0.01269  time: 0.8842  data_time: 0.0024  lr: 2e-06  max_mem: 15391M
[04/03 13:17:59] d2.utils.events INFO:  eta: 0:01:31  iter: 30899  total_loss: 0.1102  loss_cls: 0.02508  loss_box_reg: 0.07709  loss_rpn_cls: 0.0003561  loss_rpn_loc: 0.01125  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:18:17] d2.utils.events INFO:  eta: 0:01:12  iter: 30919  total_loss: 0.09175  loss_cls: 0.01588  loss_box_reg: 0.06104  loss_rpn_cls: 0.0001014  loss_rpn_loc: 0.006617  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:18:34] d2.utils.events INFO:  eta: 0:00:54  iter: 30939  total_loss: 0.1081  loss_cls: 0.02299  loss_box_reg: 0.07167  loss_rpn_cls: 0.0001223  loss_rpn_loc: 0.009617  time: 0.8842  data_time: 0.0023  lr: 2e-06  max_mem: 15391M
[04/03 13:18:52] d2.utils.events INFO:  eta: 0:00:36  iter: 30959  total_loss: 0.1155  loss_cls: 0.02429  loss_box_reg: 0.08491  loss_rpn_cls: 0.0001345  loss_rpn_loc: 0.009246  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:19:10] d2.utils.events INFO:  eta: 0:00:18  iter: 30979  total_loss: 0.09897  loss_cls: 0.01601  loss_box_reg: 0.06702  loss_rpn_cls: 0.0001169  loss_rpn_loc: 0.0081  time: 0.8842  data_time: 0.0026  lr: 2e-06  max_mem: 15391M
[04/03 13:19:27] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0030999.pth
[04/03 13:19:27] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[04/03 13:19:28] d2.utils.events INFO:  eta: 0:00:00  iter: 30999  total_loss: 0.09259  loss_cls: 0.01982  loss_box_reg: 0.06789  loss_rpn_cls: 0.0001212  loss_rpn_loc: 0.008677  time: 0.8842  data_time: 0.0025  lr: 2e-06  max_mem: 15391M
[04/03 13:19:28] d2.engine.hooks INFO: Overall training speed: 30998 iterations in 7:36:48 (0.8842 s / it)
[04/03 13:19:28] d2.engine.hooks INFO: Total training time: 8:11:49 (0:35:00 on hooks)
[04/03 13:19:28] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/new_annotations/instances-val-visdrone.json
[04/03 13:19:28] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/03 13:19:28] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/03 13:19:28] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/03 13:19:29] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/03 13:19:30] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1244 s/iter. Eval: 0.0002 s/iter. Total: 0.1252 s/iter. ETA=0:01:07
[04/03 13:19:35] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:59
[04/03 13:19:40] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1190 s/iter. Eval: 0.0002 s/iter. Total: 0.1202 s/iter. ETA=0:00:54
[04/03 13:19:45] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0002 s/iter. Total: 0.1200 s/iter. ETA=0:00:49
[04/03 13:19:50] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:44
[04/03 13:19:55] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1199 s/iter. ETA=0:00:39
[04/03 13:20:00] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:34
[04/03 13:20:05] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0002 s/iter. Total: 0.1198 s/iter. ETA=0:00:29
[04/03 13:20:10] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0007 s/iter. Total: 0.1203 s/iter. ETA=0:00:24
[04/03 13:20:16] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0006 s/iter. Total: 0.1203 s/iter. ETA=0:00:19
[04/03 13:20:21] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0006 s/iter. Total: 0.1202 s/iter. ETA=0:00:14
[04/03 13:20:26] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0005 s/iter. Total: 0.1201 s/iter. ETA=0:00:09
[04/03 13:20:31] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0005 s/iter. Total: 0.1201 s/iter. ETA=0:00:04
[04/03 13:20:35] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.299403 (0.120257 s / iter per device, on 1 devices)
[04/03 13:20:35] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118606 s / iter per device, on 1 devices)
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/03 13:20:35] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/03 13:20:35] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.38 seconds.
[04/03 13:20:35] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/03 13:20:35] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.06 seconds.
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.487 | 11.536 | 6.407  | 2.206 | 13.610 | 13.653 |
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/03 13:20:35] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP     | category        | AP     | category   | AP    |
|:-----------|:-------|:----------------|:-------|:-----------|:------|
| pedestrian | 6.729  | people          | 3.635  | bicycle    | 2.990 |
| car        | 34.429 | van             | 13.994 | truck      | 0.000 |
| tricycle   | 3.381  | awning-tricycle | 1.023  | bus        | 0.000 |
| motor      | 5.179  | others          | 0.000  | rickshaw   | nan   |
| leguna     | nan    | cng             | nan    | manual-van | nan   |
[04/03 13:20:35] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/03 13:20:35] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/03 13:20:35] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/03 13:20:35] d2.evaluation.testing INFO: copypaste: 6.4872,11.5362,6.4072,2.2061,13.6095,13.6531,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/07 06:51:01] detectron2 INFO: Rank of current process: 0. World size: 1
[04/07 06:51:02] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/07 06:51:02] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/07 06:51:02] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(25000,[39m[38;5;141m [39m[38;5;141m30000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/07 06:51:02] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/07 06:51:02] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/07 06:51:02] d2.utils.env INFO: Using a generated random seed 2939264
[04/07 06:51:04] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/07 07:01:12] detectron2 INFO: Rank of current process: 0. World size: 1
[04/07 07:01:13] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/07 07:01:13] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/07 07:01:13] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(25000,[39m[38;5;141m [39m[38;5;141m30000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/07 07:01:13] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/07 07:01:13] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/07 07:01:13] d2.utils.env INFO: Using a generated random seed 13907697
[04/07 07:01:15] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/09 03:51:13] detectron2 INFO: Rank of current process: 0. World size: 1
[04/09 03:51:13] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/09 03:51:13] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/09 03:51:13] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(25000,[39m[38;5;141m [39m[38;5;141m30000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/09 03:51:13] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/09 03:51:13] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/09 03:51:13] d2.utils.env INFO: Using a generated random seed 14411506
[04/09 03:51:40] detectron2 INFO: Rank of current process: 0. World size: 1
[04/09 03:51:40] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/09 03:51:40] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/09 03:51:40] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,[39m[38;5;141m [39m[38;5;141m300)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m310[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/09 03:51:40] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m310[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m300[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/09 03:51:40] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/09 03:51:40] d2.utils.env INFO: Using a generated random seed 41612886
[04/09 03:51:43] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/09 03:51:43] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[04/09 03:51:43] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/09 03:51:43] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/09 03:51:43] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/09 03:51:43] d2.data.build INFO: Using training sampler TrainingSampler
[04/09 03:51:43] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/09 03:51:43] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/09 03:51:43] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/09 03:51:44] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/09 03:51:44] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/09 03:51:44] d2.engine.train_loop INFO: Starting training from iteration 0
[04/09 03:52:03] d2.utils.events INFO:  eta: 0:04:14  iter: 19  total_loss: 5.238  loss_cls: 4.408  loss_box_reg: 0.05015  loss_rpn_cls: 0.6922  loss_rpn_loc: 0.03778  time: 0.8769  data_time: 0.0129  lr: 3.1032e-07  max_mem: 15018M
[04/09 03:52:20] d2.utils.events INFO:  eta: 0:03:57  iter: 39  total_loss: 5.327  loss_cls: 4.416  loss_box_reg: 0.1261  loss_rpn_cls: 0.6918  loss_rpn_loc: 0.07735  time: 0.8678  data_time: 0.0024  lr: 4.2645e-07  max_mem: 15388M
[04/09 03:52:37] d2.utils.events INFO:  eta: 0:03:37  iter: 59  total_loss: 5.266  loss_cls: 4.397  loss_box_reg: 0.1297  loss_rpn_cls: 0.6923  loss_rpn_loc: 0.06206  time: 0.8540  data_time: 0.0023  lr: 5.4258e-07  max_mem: 15388M
[04/09 03:52:53] d2.utils.events INFO:  eta: 0:03:15  iter: 79  total_loss: 5.262  loss_cls: 4.313  loss_box_reg: 0.1781  loss_rpn_cls: 0.6913  loss_rpn_loc: 0.08406  time: 0.8435  data_time: 0.0022  lr: 6.5871e-07  max_mem: 15388M
[04/09 03:53:10] d2.utils.events INFO:  eta: 0:02:59  iter: 99  total_loss: 5.177  loss_cls: 4.293  loss_box_reg: 0.08987  loss_rpn_cls: 0.6917  loss_rpn_loc: 0.0721  time: 0.8482  data_time: 0.0023  lr: 7.7484e-07  max_mem: 15388M
[04/09 03:53:26] d2.utils.events INFO:  eta: 0:02:40  iter: 119  total_loss: 5.16  loss_cls: 4.219  loss_box_reg: 0.1562  loss_rpn_cls: 0.6912  loss_rpn_loc: 0.06591  time: 0.8395  data_time: 0.0022  lr: 8.9097e-07  max_mem: 15388M
[04/09 03:53:43] d2.utils.events INFO:  eta: 0:02:24  iter: 139  total_loss: 5.071  loss_cls: 4.15  loss_box_reg: 0.1373  loss_rpn_cls: 0.6907  loss_rpn_loc: 0.07659  time: 0.8429  data_time: 0.0022  lr: 1.0071e-06  max_mem: 15388M
[04/09 03:54:00] d2.utils.events INFO:  eta: 0:02:07  iter: 159  total_loss: 4.904  loss_cls: 4.053  loss_box_reg: 0.1303  loss_rpn_cls: 0.6904  loss_rpn_loc: 0.08019  time: 0.8428  data_time: 0.0023  lr: 1.1232e-06  max_mem: 15388M
[04/09 03:54:16] d2.utils.events INFO:  eta: 0:01:50  iter: 179  total_loss: 4.886  loss_cls: 3.929  loss_box_reg: 0.1598  loss_rpn_cls: 0.6897  loss_rpn_loc: 0.06735  time: 0.8371  data_time: 0.0022  lr: 1.2394e-06  max_mem: 15388M
[04/09 03:54:34] d2.utils.events INFO:  eta: 0:01:33  iter: 199  total_loss: 4.682  loss_cls: 3.79  loss_box_reg: 0.1403  loss_rpn_cls: 0.6891  loss_rpn_loc: 0.06074  time: 0.8394  data_time: 0.0023  lr: 1.3555e-06  max_mem: 15388M
[04/09 03:54:50] d2.utils.events INFO:  eta: 0:01:16  iter: 219  total_loss: 4.494  loss_cls: 3.564  loss_box_reg: 0.1237  loss_rpn_cls: 0.6887  loss_rpn_loc: 0.05353  time: 0.8391  data_time: 0.0022  lr: 1.4716e-06  max_mem: 15388M
[04/09 03:55:07] d2.utils.events INFO:  eta: 0:00:59  iter: 239  total_loss: 4.241  loss_cls: 3.304  loss_box_reg: 0.1298  loss_rpn_cls: 0.6881  loss_rpn_loc: 0.05716  time: 0.8369  data_time: 0.0023  lr: 1.5877e-06  max_mem: 15388M
[04/09 03:55:23] d2.utils.events INFO:  eta: 0:00:42  iter: 259  total_loss: 3.895  loss_cls: 2.911  loss_box_reg: 0.1625  loss_rpn_cls: 0.6879  loss_rpn_loc: 0.05731  time: 0.8353  data_time: 0.0023  lr: 1.7039e-06  max_mem: 15388M
[04/09 03:55:40] d2.utils.events INFO:  eta: 0:00:25  iter: 279  total_loss: 3.369  loss_cls: 2.383  loss_box_reg: 0.1435  loss_rpn_cls: 0.6878  loss_rpn_loc: 0.08369  time: 0.8359  data_time: 0.0024  lr: 1.82e-06  max_mem: 15388M
[04/09 03:55:57] d2.utils.events INFO:  eta: 0:00:08  iter: 299  total_loss: 2.724  loss_cls: 1.848  loss_box_reg: 0.1052  loss_rpn_cls: 0.6877  loss_rpn_loc: 0.0707  time: 0.8370  data_time: 0.0023  lr: 1.9361e-06  max_mem: 15388M
[04/09 03:56:06] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[04/09 03:56:06] d2.utils.events INFO:  eta: 0:00:00  iter: 309  total_loss: 2.273  loss_cls: 1.494  loss_box_reg: 0.07483  loss_rpn_cls: 0.6877  loss_rpn_loc: 0.05847  time: 0.8376  data_time: 0.0023  lr: 1.9942e-06  max_mem: 15388M
[04/09 03:56:06] d2.engine.hooks INFO: Overall training speed: 308 iterations in 0:04:17 (0.8376 s / it)
[04/09 03:56:06] d2.engine.hooks INFO: Total training time: 0:04:19 (0:00:01 on hooks)
[04/09 03:56:07] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/annotations/instances-val-visdrone.json
[04/09 03:56:07] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |
[04/09 03:56:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/09 03:56:07] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/09 03:56:07] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/09 03:56:07] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/09 03:56:08] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1180 s/iter. Eval: 0.0000 s/iter. Total: 0.1187 s/iter. ETA=0:01:03
[04/09 03:56:13] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0009 s/iter. Inference: 0.1184 s/iter. Eval: 0.0000 s/iter. Total: 0.1194 s/iter. ETA=0:00:59
[04/09 03:56:19] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0000 s/iter. Total: 0.1195 s/iter. ETA=0:00:54
[04/09 03:56:24] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0000 s/iter. Total: 0.1196 s/iter. ETA=0:00:49
[04/09 03:56:29] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0000 s/iter. Total: 0.1195 s/iter. ETA=0:00:44
[04/09 03:56:34] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0000 s/iter. Total: 0.1196 s/iter. ETA=0:00:39
[04/09 03:56:39] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1186 s/iter. Eval: 0.0000 s/iter. Total: 0.1196 s/iter. ETA=0:00:34
[04/09 03:56:44] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0000 s/iter. Total: 0.1197 s/iter. ETA=0:00:29
[04/09 03:56:49] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0000 s/iter. Total: 0.1197 s/iter. ETA=0:00:24
[04/09 03:56:54] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0000 s/iter. Total: 0.1197 s/iter. ETA=0:00:19
[04/09 03:56:59] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0000 s/iter. Total: 0.1197 s/iter. ETA=0:00:14
[04/09 03:57:04] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1188 s/iter. Eval: 0.0000 s/iter. Total: 0.1198 s/iter. ETA=0:00:08
[04/09 03:57:09] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1187 s/iter. Eval: 0.0000 s/iter. Total: 0.1197 s/iter. ETA=0:00:03
[04/09 03:57:13] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.095953 (0.119882 s / iter per device, on 1 devices)
[04/09 03:57:13] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.118740 s / iter per device, on 1 devices)
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/09 03:57:13] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/09 03:57:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.32 seconds.
[04/09 03:57:13] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/09 03:57:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.03 seconds.
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.000  | 0.000  | 0.000 | 0.000 | 0.000 |
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/09 03:57:13] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.000 | people          | 0.000 | bicycle    | 0.000 |
| car        | 0.000 | van             | 0.000 | truck      | 0.000 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[04/09 03:57:13] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/09 03:57:13] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/09 03:57:13] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/09 03:57:13] d2.evaluation.testing INFO: copypaste: 0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/10 03:20:37] detectron2 INFO: Rank of current process: 0. World size: 1
[04/10 03:20:37] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/10 03:20:37] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/10 03:20:37] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,[39m[38;5;141m [39m[38;5;141m300)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m310[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(640,[39m[38;5;141m [39m[38;5;141m672,[39m[38;5;141m [39m[38;5;141m704,[39m[38;5;141m [39m[38;5;141m736,[39m[38;5;141m [39m[38;5;141m768,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/10 03:20:37] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m704[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m736[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m310[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m300[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/10 03:20:37] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/10 03:20:37] d2.utils.env INFO: Using a generated random seed 37867616
[04/10 03:20:40] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/10 03:20:40] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[04/10 03:20:40] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/10 03:20:40] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/10 03:20:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/10 03:20:40] d2.data.build INFO: Using training sampler TrainingSampler
[04/10 03:20:40] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/10 03:20:40] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/10 03:20:40] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/10 03:20:41] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/10 03:20:41] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/10 03:20:41] d2.engine.train_loop INFO: Starting training from iteration 0
[04/10 03:20:56] d2.engine.hooks INFO: Overall training speed: 14 iterations in 0:00:11 (0.8515 s / it)
[04/10 03:20:56] d2.engine.hooks INFO: Total training time: 0:00:11 (0:00:00 on hooks)
[04/10 03:20:56] d2.utils.events INFO:  eta: 0:04:04  iter: 16  total_loss: 5.29  loss_cls: 4.406  loss_box_reg: 0.137  loss_rpn_cls: 0.6905  loss_rpn_loc: 0.03846  time: 0.7899  data_time: 0.0135  lr: 2.871e-07  max_mem: 14989M
[04/10 03:25:14] detectron2 INFO: Rank of current process: 0. World size: 1
[04/10 03:25:14] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/10 03:25:14] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/10 03:25:14] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(25000,[39m[38;5;141m [39m[38;5;141m30000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/10 03:25:14] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/10 03:25:14] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/10 03:25:14] d2.utils.env INFO: Using a generated random seed 14918048
[04/10 03:25:17] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/10 03:25:17] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[04/10 03:25:17] d2.data.build INFO: Removed 6041 images with no usable annotations. 430 images left.
[04/10 03:25:17] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1499         |    people     | 337          |  bicycle   | 239          |
|    car     | 4467         |      van      | 708          |   truck    | 0            |
|  tricycle  | 78           | awning-tric.. | 49           |    bus     | 0            |
|   motor    | 429          |    others     | 26           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 7832         |               |              |            |              |
[04/10 03:25:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/10 03:25:17] d2.data.build INFO: Using training sampler TrainingSampler
[04/10 03:25:17] d2.data.common INFO: Serializing 430 elements to byte tensors and concatenating them all ...
[04/10 03:25:17] d2.data.common INFO: Serialized dataset takes 0.39 MiB
[04/10 03:25:17] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/10 03:25:17] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/10 03:25:17] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/10 03:25:17] d2.engine.train_loop INFO: Starting training from iteration 0
[04/10 03:25:31] d2.utils.events INFO:  eta: 7:06:23  iter: 19  total_loss: 5.402  loss_cls: 4.411  loss_box_reg: 0.05623  loss_rpn_cls: 0.6937  loss_rpn_loc: 0.2327  time: 0.6869  data_time: 0.0110  lr: 3.9962e-06  max_mem: 15385M
[04/10 03:25:47] d2.utils.events INFO:  eta: 7:12:44  iter: 39  total_loss: 5.14  loss_cls: 4.109  loss_box_reg: 0.09721  loss_rpn_cls: 0.693  loss_rpn_loc: 0.1549  time: 0.7239  data_time: 0.0020  lr: 7.9922e-06  max_mem: 15385M
[04/10 03:25:50] d2.engine.hooks INFO: Overall training speed: 41 iterations in 0:00:30 (0.7558 s / it)
[04/10 03:25:50] d2.engine.hooks INFO: Total training time: 0:00:31 (0:00:00 on hooks)
[04/10 03:25:50] d2.utils.events INFO:  eta: 7:15:32  iter: 43  total_loss: 4.992  loss_cls: 4.043  loss_box_reg: 0.09059  loss_rpn_cls: 0.6928  loss_rpn_loc: 0.1239  time: 0.7315  data_time: 0.0020  lr: 8.5916e-06  max_mem: 15385M
[04/10 03:39:37] detectron2 INFO: Rank of current process: 0. World size: 1
[04/10 03:39:37] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/10 03:39:37] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/10 03:39:37] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(2500,[39m[38;5;141m [39m[38;5;141m3000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/10 03:39:37] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m31000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/10 03:39:37] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/10 03:39:37] d2.utils.env INFO: Using a generated random seed 37828872
[04/10 03:39:40] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/10 03:39:40] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[04/10 03:39:40] d2.data.build INFO: Removed 5853 images with no usable annotations. 618 images left.
[04/10 03:39:40] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1621         |    people     | 351          |  bicycle   | 258          |
|    car     | 0            |      van      | 1061         |   truck    | 734          |
|  tricycle  | 101          | awning-tric.. | 54           |    bus     | 270          |
|   motor    | 0            |    others     | 40           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 4490         |               |              |            |              |
[04/10 03:39:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/10 03:39:40] d2.data.build INFO: Using training sampler TrainingSampler
[04/10 03:39:40] d2.data.common INFO: Serializing 618 elements to byte tensors and concatenating them all ...
[04/10 03:39:40] d2.data.common INFO: Serialized dataset takes 0.31 MiB
[04/10 03:39:40] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/10 03:39:40] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/10 03:39:40] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/10 03:39:40] d2.engine.train_loop INFO: Starting training from iteration 0
[04/10 03:39:56] d2.utils.events INFO:  eta: 7:13:17  iter: 19  total_loss: 5.242  loss_cls: 4.373  loss_box_reg: 0.02665  loss_rpn_cls: 0.6931  loss_rpn_loc: 0.1225  time: 0.7618  data_time: 0.0110  lr: 3.9962e-06  max_mem: 15384M
[04/10 03:40:12] d2.utils.events INFO:  eta: 7:13:00  iter: 39  total_loss: 4.881  loss_cls: 4.094  loss_box_reg: 0.008491  loss_rpn_cls: 0.6915  loss_rpn_loc: 0.03926  time: 0.7749  data_time: 0.0021  lr: 7.9922e-06  max_mem: 15384M
[04/10 03:40:26] d2.engine.hooks INFO: Overall training speed: 55 iterations in 0:00:43 (0.7859 s / it)
[04/10 03:40:26] d2.engine.hooks INFO: Total training time: 0:00:43 (0:00:00 on hooks)
[04/10 03:40:26] d2.utils.events INFO:  eta: 7:04:16  iter: 57  total_loss: 4.297  loss_cls: 3.464  loss_box_reg: 0.02457  loss_rpn_cls: 0.6896  loss_rpn_loc: 0.06061  time: 0.7780  data_time: 0.0020  lr: 1.1389e-05  max_mem: 15384M
[04/10 03:40:54] detectron2 INFO: Rank of current process: 0. World size: 1
[04/10 03:40:55] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/10 03:40:55] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml', dist_url='auto', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/10 03:40:55] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_val",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(2500,[39m[38;5;141m [39m[38;5;141m3000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[04/10 03:40:55] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_val[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/10 03:40:55] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[04/10 03:40:55] d2.utils.env INFO: Using a generated random seed 55415132
[04/10 03:40:57] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[04/10 03:40:58] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[04/10 03:40:58] d2.data.build INFO: Removed 5853 images with no usable annotations. 618 images left.
[04/10 03:40:58] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1621         |    people     | 351          |  bicycle   | 258          |
|    car     | 0            |      van      | 1061         |   truck    | 734          |
|  tricycle  | 101          | awning-tric.. | 54           |    bus     | 270          |
|   motor    | 0            |    others     | 40           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 4490         |               |              |            |              |
[04/10 03:40:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/10 03:40:58] d2.data.build INFO: Using training sampler TrainingSampler
[04/10 03:40:58] d2.data.common INFO: Serializing 618 elements to byte tensors and concatenating them all ...
[04/10 03:40:58] d2.data.common INFO: Serialized dataset takes 0.31 MiB
[04/10 03:40:58] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[04/10 03:40:58] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
proposal_generator.rpn_head.anchor_deltas.{bias, weight}
proposal_generator.rpn_head.conv.{bias, weight}
proposal_generator.rpn_head.objectness_logits.{bias, weight}
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
[04/10 03:40:58] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  head.{bias, weight}
[04/10 03:40:58] d2.engine.train_loop INFO: Starting training from iteration 0
[04/10 03:41:15] d2.utils.events INFO:  eta: 0:43:11  iter: 19  total_loss: 5.188  loss_cls: 4.379  loss_box_reg: 0.01463  loss_rpn_cls: 0.6923  loss_rpn_loc: 0.0895  time: 0.8090  data_time: 0.0125  lr: 3.9962e-06  max_mem: 15381M
[04/10 03:41:29] d2.utils.events INFO:  eta: 0:42:54  iter: 39  total_loss: 4.861  loss_cls: 4.112  loss_box_reg: 0.01035  loss_rpn_cls: 0.6907  loss_rpn_loc: 0.08986  time: 0.7544  data_time: 0.0021  lr: 7.9922e-06  max_mem: 15381M
[04/10 03:41:45] d2.utils.events INFO:  eta: 0:42:37  iter: 59  total_loss: 4.133  loss_cls: 3.343  loss_box_reg: 0.01546  loss_rpn_cls: 0.6879  loss_rpn_loc: 0.07636  time: 0.7612  data_time: 0.0021  lr: 1.1988e-05  max_mem: 15381M
[04/10 03:41:59] d2.utils.events INFO:  eta: 0:42:06  iter: 79  total_loss: 2.381  loss_cls: 1.388  loss_box_reg: 0.01201  loss_rpn_cls: 0.6845  loss_rpn_loc: 0.09868  time: 0.7455  data_time: 0.0020  lr: 1.5984e-05  max_mem: 15381M
[04/10 03:42:13] d2.utils.events INFO:  eta: 0:41:49  iter: 99  total_loss: 1.151  loss_cls: 0.3179  loss_box_reg: 0.004485  loss_rpn_cls: 0.6804  loss_rpn_loc: 0.1088  time: 0.7373  data_time: 0.0020  lr: 1.998e-05  max_mem: 15381M
[04/10 03:42:29] d2.utils.events INFO:  eta: 0:41:33  iter: 119  total_loss: 0.9503  loss_cls: 0.1995  loss_box_reg: 0.006528  loss_rpn_cls: 0.6681  loss_rpn_loc: 0.06174  time: 0.7489  data_time: 0.0022  lr: 2.3976e-05  max_mem: 15381M
[04/10 03:42:43] d2.utils.events INFO:  eta: 0:40:55  iter: 139  total_loss: 0.8462  loss_cls: 0.132  loss_box_reg: 0.003271  loss_rpn_cls: 0.6306  loss_rpn_loc: 0.07172  time: 0.7401  data_time: 0.0021  lr: 2.7972e-05  max_mem: 15381M
[04/10 03:42:56] d2.utils.events INFO:  eta: 0:40:18  iter: 159  total_loss: 0.7233  loss_cls: 0.1403  loss_box_reg: 0.003952  loss_rpn_cls: 0.4573  loss_rpn_loc: 0.06477  time: 0.7325  data_time: 0.0021  lr: 3.1968e-05  max_mem: 15381M
[04/10 03:43:12] d2.utils.events INFO:  eta: 0:40:09  iter: 179  total_loss: 0.4329  loss_cls: 0.11  loss_box_reg: 0.005304  loss_rpn_cls: 0.2033  loss_rpn_loc: 0.067  time: 0.7398  data_time: 0.0020  lr: 3.5964e-05  max_mem: 15381M
[04/10 03:43:28] d2.utils.events INFO:  eta: 0:39:53  iter: 199  total_loss: 0.3413  loss_cls: 0.1133  loss_box_reg: 0.004501  loss_rpn_cls: 0.1587  loss_rpn_loc: 0.07066  time: 0.7452  data_time: 0.0020  lr: 3.996e-05  max_mem: 15381M
[04/10 03:43:44] d2.utils.events INFO:  eta: 0:39:39  iter: 219  total_loss: 0.1979  loss_cls: 0.06908  loss_box_reg: 0.001159  loss_rpn_cls: 0.09674  loss_rpn_loc: 0.02991  time: 0.7503  data_time: 0.0022  lr: 4.3956e-05  max_mem: 15381M
[04/10 03:44:00] d2.utils.events INFO:  eta: 0:39:45  iter: 239  total_loss: 0.2991  loss_cls: 0.0963  loss_box_reg: 0.001476  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.04963  time: 0.7547  data_time: 0.0021  lr: 4.7952e-05  max_mem: 15381M
[04/10 03:44:14] d2.utils.events INFO:  eta: 0:39:23  iter: 259  total_loss: 0.3279  loss_cls: 0.1025  loss_box_reg: 0.006528  loss_rpn_cls: 0.1548  loss_rpn_loc: 0.05586  time: 0.7499  data_time: 0.0020  lr: 5.1948e-05  max_mem: 15381M
[04/10 03:44:30] d2.utils.events INFO:  eta: 0:39:06  iter: 279  total_loss: 0.3287  loss_cls: 0.1284  loss_box_reg: 0.002529  loss_rpn_cls: 0.1177  loss_rpn_loc: 0.0759  time: 0.7523  data_time: 0.0023  lr: 5.5944e-05  max_mem: 15381M
[04/10 03:44:46] d2.utils.events INFO:  eta: 0:39:02  iter: 299  total_loss: 0.1894  loss_cls: 0.07187  loss_box_reg: 0.00468  loss_rpn_cls: 0.06114  loss_rpn_loc: 0.03114  time: 0.7540  data_time: 0.0020  lr: 5.994e-05  max_mem: 15381M
[04/10 03:45:03] d2.utils.events INFO:  eta: 0:38:52  iter: 319  total_loss: 0.3012  loss_cls: 0.1208  loss_box_reg: 0.0146  loss_rpn_cls: 0.1207  loss_rpn_loc: 0.0472  time: 0.7599  data_time: 0.0022  lr: 6.3936e-05  max_mem: 15381M
[04/10 03:45:19] d2.utils.events INFO:  eta: 0:38:33  iter: 339  total_loss: 0.2156  loss_cls: 0.08486  loss_box_reg: 0.02153  loss_rpn_cls: 0.07859  loss_rpn_loc: 0.03014  time: 0.7618  data_time: 0.0021  lr: 6.7932e-05  max_mem: 15381M
[04/10 03:45:35] d2.utils.events INFO:  eta: 0:38:18  iter: 359  total_loss: 0.3088  loss_cls: 0.1249  loss_box_reg: 0.03373  loss_rpn_cls: 0.1171  loss_rpn_loc: 0.03242  time: 0.7635  data_time: 0.0021  lr: 7.1928e-05  max_mem: 15381M
[04/10 03:45:49] d2.utils.events INFO:  eta: 0:38:04  iter: 379  total_loss: 0.2642  loss_cls: 0.09993  loss_box_reg: 0.01412  loss_rpn_cls: 0.08205  loss_rpn_loc: 0.04685  time: 0.7600  data_time: 0.0021  lr: 7.5924e-05  max_mem: 15381M
[04/10 03:46:06] d2.utils.events INFO:  eta: 0:37:53  iter: 399  total_loss: 0.3304  loss_cls: 0.1384  loss_box_reg: 0.03901  loss_rpn_cls: 0.1135  loss_rpn_loc: 0.04942  time: 0.7657  data_time: 0.0022  lr: 7.992e-05  max_mem: 15381M
[04/10 03:46:22] d2.utils.events INFO:  eta: 0:37:31  iter: 419  total_loss: 0.4043  loss_cls: 0.1585  loss_box_reg: 0.02978  loss_rpn_cls: 0.09949  loss_rpn_loc: 0.0721  time: 0.7654  data_time: 0.0021  lr: 8.3916e-05  max_mem: 15381M
[04/10 03:46:40] d2.utils.events INFO:  eta: 0:37:20  iter: 439  total_loss: 0.2908  loss_cls: 0.1234  loss_box_reg: 0.04619  loss_rpn_cls: 0.06078  loss_rpn_loc: 0.06534  time: 0.7709  data_time: 0.0023  lr: 8.7912e-05  max_mem: 15381M
[04/10 03:46:56] d2.utils.events INFO:  eta: 0:37:04  iter: 459  total_loss: 0.3191  loss_cls: 0.131  loss_box_reg: 0.02064  loss_rpn_cls: 0.09591  loss_rpn_loc: 0.04991  time: 0.7724  data_time: 0.0020  lr: 9.1908e-05  max_mem: 15381M
[04/10 03:47:10] d2.utils.events INFO:  eta: 0:36:47  iter: 479  total_loss: 0.3583  loss_cls: 0.1462  loss_box_reg: 0.03654  loss_rpn_cls: 0.1109  loss_rpn_loc: 0.05363  time: 0.7696  data_time: 0.0021  lr: 9.5904e-05  max_mem: 15381M
[04/10 03:47:25] d2.utils.events INFO:  eta: 0:36:30  iter: 499  total_loss: 0.3187  loss_cls: 0.1427  loss_box_reg: 0.03981  loss_rpn_cls: 0.06827  loss_rpn_loc: 0.04837  time: 0.7680  data_time: 0.0021  lr: 9.99e-05  max_mem: 15381M
[04/10 03:47:40] d2.utils.events INFO:  eta: 0:36:16  iter: 519  total_loss: 0.5652  loss_cls: 0.2102  loss_box_reg: 0.09063  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.06646  time: 0.7686  data_time: 0.0021  lr: 0.0001039  max_mem: 15381M
[04/10 03:47:59] d2.utils.events INFO:  eta: 0:36:08  iter: 539  total_loss: 0.4825  loss_cls: 0.2372  loss_box_reg: 0.1238  loss_rpn_cls: 0.08292  loss_rpn_loc: 0.03819  time: 0.7747  data_time: 0.0022  lr: 0.00010789  max_mem: 15381M
[04/10 03:48:15] d2.utils.events INFO:  eta: 0:35:51  iter: 559  total_loss: 0.3023  loss_cls: 0.1286  loss_box_reg: 0.05377  loss_rpn_cls: 0.0641  loss_rpn_loc: 0.05148  time: 0.7745  data_time: 0.0021  lr: 0.00011189  max_mem: 15381M
[04/10 03:48:30] d2.utils.events INFO:  eta: 0:35:36  iter: 579  total_loss: 0.479  loss_cls: 0.2164  loss_box_reg: 0.07537  loss_rpn_cls: 0.1067  loss_rpn_loc: 0.05524  time: 0.7750  data_time: 0.0021  lr: 0.00011588  max_mem: 15381M
[04/10 03:48:44] d2.utils.events INFO:  eta: 0:35:17  iter: 599  total_loss: 0.2976  loss_cls: 0.1362  loss_box_reg: 0.02834  loss_rpn_cls: 0.07203  loss_rpn_loc: 0.03858  time: 0.7718  data_time: 0.0019  lr: 0.00011988  max_mem: 15381M
[04/10 03:49:01] d2.utils.events INFO:  eta: 0:35:00  iter: 619  total_loss: 0.4248  loss_cls: 0.1698  loss_box_reg: 0.07723  loss_rpn_cls: 0.05164  loss_rpn_loc: 0.04721  time: 0.7747  data_time: 0.0021  lr: 0.00012388  max_mem: 15381M
[04/10 03:49:17] d2.utils.events INFO:  eta: 0:34:44  iter: 639  total_loss: 0.3816  loss_cls: 0.164  loss_box_reg: 0.1105  loss_rpn_cls: 0.06557  loss_rpn_loc: 0.05006  time: 0.7756  data_time: 0.0021  lr: 0.00012787  max_mem: 15381M
[04/10 03:49:34] d2.utils.events INFO:  eta: 0:34:27  iter: 659  total_loss: 0.3813  loss_cls: 0.1691  loss_box_reg: 0.1217  loss_rpn_cls: 0.07008  loss_rpn_loc: 0.04364  time: 0.7774  data_time: 0.0021  lr: 0.00013187  max_mem: 15381M
[04/10 03:49:50] d2.utils.events INFO:  eta: 0:34:12  iter: 679  total_loss: 0.3041  loss_cls: 0.1237  loss_box_reg: 0.09278  loss_rpn_cls: 0.05782  loss_rpn_loc: 0.02731  time: 0.7785  data_time: 0.0022  lr: 0.00013586  max_mem: 15381M
[04/10 03:50:08] d2.utils.events INFO:  eta: 0:33:58  iter: 699  total_loss: 0.4051  loss_cls: 0.1813  loss_box_reg: 0.1357  loss_rpn_cls: 0.07278  loss_rpn_loc: 0.04938  time: 0.7807  data_time: 0.0021  lr: 0.00013986  max_mem: 15381M
[04/10 03:50:24] d2.utils.events INFO:  eta: 0:33:42  iter: 719  total_loss: 0.2958  loss_cls: 0.1522  loss_box_reg: 0.0803  loss_rpn_cls: 0.04805  loss_rpn_loc: 0.05049  time: 0.7813  data_time: 0.0020  lr: 0.00014386  max_mem: 15381M
[04/10 03:50:38] d2.utils.events INFO:  eta: 0:33:21  iter: 739  total_loss: 0.3432  loss_cls: 0.1585  loss_box_reg: 0.06519  loss_rpn_cls: 0.0748  loss_rpn_loc: 0.05225  time: 0.7801  data_time: 0.0020  lr: 0.00014785  max_mem: 15381M
[04/10 03:50:53] d2.utils.events INFO:  eta: 0:33:03  iter: 759  total_loss: 0.3092  loss_cls: 0.1327  loss_box_reg: 0.05585  loss_rpn_cls: 0.0671  loss_rpn_loc: 0.05542  time: 0.7787  data_time: 0.0022  lr: 0.00015185  max_mem: 15381M
[04/10 03:51:07] d2.utils.events INFO:  eta: 0:32:45  iter: 779  total_loss: 0.4414  loss_cls: 0.1808  loss_box_reg: 0.1008  loss_rpn_cls: 0.06824  loss_rpn_loc: 0.06454  time: 0.7768  data_time: 0.0019  lr: 0.00015584  max_mem: 15381M
[04/10 03:51:24] d2.utils.events INFO:  eta: 0:32:30  iter: 799  total_loss: 0.3578  loss_cls: 0.1493  loss_box_reg: 0.1116  loss_rpn_cls: 0.0515  loss_rpn_loc: 0.02816  time: 0.7784  data_time: 0.0021  lr: 0.00015984  max_mem: 15381M
[04/10 03:51:37] d2.utils.events INFO:  eta: 0:32:11  iter: 819  total_loss: 0.3752  loss_cls: 0.1461  loss_box_reg: 0.04002  loss_rpn_cls: 0.07769  loss_rpn_loc: 0.05531  time: 0.7753  data_time: 0.0017  lr: 0.00016384  max_mem: 15381M
[04/10 03:51:53] d2.utils.events INFO:  eta: 0:31:54  iter: 839  total_loss: 0.3155  loss_cls: 0.1416  loss_box_reg: 0.06185  loss_rpn_cls: 0.0655  loss_rpn_loc: 0.04343  time: 0.7754  data_time: 0.0020  lr: 0.00016783  max_mem: 15381M
[04/10 03:52:09] d2.utils.events INFO:  eta: 0:31:38  iter: 859  total_loss: 0.3902  loss_cls: 0.1681  loss_box_reg: 0.07516  loss_rpn_cls: 0.07179  loss_rpn_loc: 0.03957  time: 0.7761  data_time: 0.0020  lr: 0.00017183  max_mem: 15381M
[04/10 03:52:25] d2.utils.events INFO:  eta: 0:31:21  iter: 879  total_loss: 0.3653  loss_cls: 0.1532  loss_box_reg: 0.08279  loss_rpn_cls: 0.05088  loss_rpn_loc: 0.043  time: 0.7770  data_time: 0.0020  lr: 0.00017582  max_mem: 15381M
[04/10 03:52:42] d2.utils.events INFO:  eta: 0:31:05  iter: 899  total_loss: 0.3132  loss_cls: 0.1305  loss_box_reg: 0.05422  loss_rpn_cls: 0.07226  loss_rpn_loc: 0.05737  time: 0.7779  data_time: 0.0020  lr: 0.00017982  max_mem: 15381M
[04/10 03:52:59] d2.utils.events INFO:  eta: 0:30:51  iter: 919  total_loss: 0.412  loss_cls: 0.2142  loss_box_reg: 0.09732  loss_rpn_cls: 0.06168  loss_rpn_loc: 0.04371  time: 0.7799  data_time: 0.0021  lr: 0.00018382  max_mem: 15381M
[04/10 03:53:15] d2.utils.events INFO:  eta: 0:30:34  iter: 939  total_loss: 0.4123  loss_cls: 0.187  loss_box_reg: 0.1058  loss_rpn_cls: 0.09048  loss_rpn_loc: 0.04438  time: 0.7798  data_time: 0.0020  lr: 0.00018781  max_mem: 15381M
[04/10 03:53:32] d2.utils.events INFO:  eta: 0:30:17  iter: 959  total_loss: 0.4195  loss_cls: 0.1726  loss_box_reg: 0.1231  loss_rpn_cls: 0.08677  loss_rpn_loc: 0.05584  time: 0.7813  data_time: 0.0020  lr: 0.00019181  max_mem: 15381M
[04/10 03:53:50] d2.utils.events INFO:  eta: 0:30:04  iter: 979  total_loss: 0.3255  loss_cls: 0.1334  loss_box_reg: 0.1317  loss_rpn_cls: 0.05013  loss_rpn_loc: 0.03284  time: 0.7838  data_time: 0.0022  lr: 0.0001958  max_mem: 15381M
[04/10 03:54:05] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/annotations/instances-val-visdrone.json
[04/10 03:54:05] d2.data.build INFO: Distribution of instances among all 15 categories:
|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 8844         |    people     | 5125         |  bicycle   | 1287         |
|    car     | 14064        |      van      | 1975         |   truck    | 750          |
|  tricycle  | 1045         | awning-tric.. | 532          |    bus     | 251          |
|   motor    | 4886         |    others     | 32           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 38791        |               |              |            |              |
[04/10 03:54:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/10 03:54:05] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/10 03:54:05] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/10 03:54:06] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/10 03:54:07] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1188 s/iter. Eval: 0.0007 s/iter. Total: 0.1202 s/iter. ETA=0:01:04
[04/10 03:54:12] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0008 s/iter. Inference: 0.1195 s/iter. Eval: 0.0003 s/iter. Total: 0.1206 s/iter. ETA=0:00:59
[04/10 03:54:17] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0008 s/iter. Inference: 0.1195 s/iter. Eval: 0.0002 s/iter. Total: 0.1206 s/iter. ETA=0:00:54
[04/10 03:54:22] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0008 s/iter. Inference: 0.1195 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:00:49
[04/10 03:54:27] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0008 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:44
[04/10 03:54:32] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0008 s/iter. Inference: 0.1192 s/iter. Eval: 0.0002 s/iter. Total: 0.1203 s/iter. ETA=0:00:39
[04/10 03:54:37] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0008 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:34
[04/10 03:54:43] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0002 s/iter. Total: 0.1204 s/iter. ETA=0:00:29
[04/10 03:54:48] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0007 s/iter. Total: 0.1208 s/iter. ETA=0:00:24
[04/10 03:54:53] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0006 s/iter. Total: 0.1208 s/iter. ETA=0:00:19
[04/10 03:54:58] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1193 s/iter. Eval: 0.0006 s/iter. Total: 0.1208 s/iter. ETA=0:00:14
[04/10 03:55:03] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0005 s/iter. Total: 0.1208 s/iter. ETA=0:00:09
[04/10 03:55:08] d2.evaluation.evaluator INFO: Inference done 514/548. Dataloading: 0.0009 s/iter. Inference: 0.1194 s/iter. Eval: 0.0005 s/iter. Total: 0.1208 s/iter. ETA=0:00:04
[04/10 03:55:12] d2.evaluation.evaluator INFO: Total inference time: 0:01:05.676302 (0.120951 s / iter per device, on 1 devices)
[04/10 03:55:12] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.119407 s / iter per device, on 1 devices)
[04/10 03:55:12] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/10 03:55:12] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/10 03:55:12] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/10 03:55:13] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/10 03:55:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.47 seconds.
[04/10 03:55:13] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/10 03:55:13] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.07 seconds.
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.217 | 0.658  | 0.150  | 0.073 | 0.661 | 0.366 |
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/10 03:55:13] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.745 | people          | 0.752 | bicycle    | 0.005 |
| car        | 0.000 | van             | 0.547 | truck      | 0.342 |
| tricycle   | 0.000 | awning-tricycle | 0.000 | bus        | 0.000 |
| motor      | 0.000 | others          | 0.000 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[04/10 03:55:13] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/10 03:55:13] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/10 03:55:13] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/10 03:55:13] d2.evaluation.testing INFO: copypaste: 0.2173,0.6578,0.1501,0.0728,0.6613,0.3659,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/10 03:55:13] d2.utils.events INFO:  eta: 0:29:45  iter: 999  total_loss: 0.4011  loss_cls: 0.1559  loss_box_reg: 0.1384  loss_rpn_cls: 0.08213  loss_rpn_loc: 0.05058  time: 0.7835  data_time: 0.0020  lr: 0.0001998  max_mem: 15381M
[04/10 03:55:29] d2.utils.events INFO:  eta: 0:29:27  iter: 1019  total_loss: 0.4653  loss_cls: 0.1988  loss_box_reg: 0.1219  loss_rpn_cls: 0.067  loss_rpn_loc: 0.04968  time: 0.7835  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 03:55:44] d2.utils.events INFO:  eta: 0:29:10  iter: 1039  total_loss: 0.3685  loss_cls: 0.1547  loss_box_reg: 0.1205  loss_rpn_cls: 0.06403  loss_rpn_loc: 0.04683  time: 0.7826  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:56:00] d2.utils.events INFO:  eta: 0:28:54  iter: 1059  total_loss: 0.3081  loss_cls: 0.1225  loss_box_reg: 0.1128  loss_rpn_cls: 0.05482  loss_rpn_loc: 0.03973  time: 0.7835  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 03:56:15] d2.utils.events INFO:  eta: 0:28:38  iter: 1079  total_loss: 0.279  loss_cls: 0.122  loss_box_reg: 0.04112  loss_rpn_cls: 0.05208  loss_rpn_loc: 0.04211  time: 0.7824  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 03:56:32] d2.utils.events INFO:  eta: 0:28:24  iter: 1099  total_loss: 0.2918  loss_cls: 0.1267  loss_box_reg: 0.04617  loss_rpn_cls: 0.03813  loss_rpn_loc: 0.0446  time: 0.7840  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:56:48] d2.utils.events INFO:  eta: 0:28:06  iter: 1119  total_loss: 0.3377  loss_cls: 0.1271  loss_box_reg: 0.09296  loss_rpn_cls: 0.05183  loss_rpn_loc: 0.04333  time: 0.7837  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:57:04] d2.utils.events INFO:  eta: 0:27:55  iter: 1139  total_loss: 0.3255  loss_cls: 0.1275  loss_box_reg: 0.08945  loss_rpn_cls: 0.05477  loss_rpn_loc: 0.05056  time: 0.7846  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:57:21] d2.utils.events INFO:  eta: 0:27:45  iter: 1159  total_loss: 0.6267  loss_cls: 0.2336  loss_box_reg: 0.2072  loss_rpn_cls: 0.05295  loss_rpn_loc: 0.05296  time: 0.7851  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:57:36] d2.utils.events INFO:  eta: 0:27:29  iter: 1179  total_loss: 0.3685  loss_cls: 0.1499  loss_box_reg: 0.09531  loss_rpn_cls: 0.04631  loss_rpn_loc: 0.05029  time: 0.7844  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:57:51] d2.utils.events INFO:  eta: 0:27:12  iter: 1199  total_loss: 0.4431  loss_cls: 0.2103  loss_box_reg: 0.1061  loss_rpn_cls: 0.03945  loss_rpn_loc: 0.03698  time: 0.7845  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 03:58:07] d2.utils.events INFO:  eta: 0:26:54  iter: 1219  total_loss: 0.3043  loss_cls: 0.126  loss_box_reg: 0.07499  loss_rpn_cls: 0.03589  loss_rpn_loc: 0.03018  time: 0.7841  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:58:24] d2.utils.events INFO:  eta: 0:26:38  iter: 1239  total_loss: 0.3644  loss_cls: 0.1561  loss_box_reg: 0.1243  loss_rpn_cls: 0.04604  loss_rpn_loc: 0.0403  time: 0.7850  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:58:40] d2.utils.events INFO:  eta: 0:26:26  iter: 1259  total_loss: 0.3444  loss_cls: 0.1451  loss_box_reg: 0.1182  loss_rpn_cls: 0.05294  loss_rpn_loc: 0.03498  time: 0.7856  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:58:57] d2.utils.events INFO:  eta: 0:26:11  iter: 1279  total_loss: 0.4214  loss_cls: 0.165  loss_box_reg: 0.1592  loss_rpn_cls: 0.04819  loss_rpn_loc: 0.04278  time: 0.7866  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 03:59:11] d2.utils.events INFO:  eta: 0:25:52  iter: 1299  total_loss: 0.2459  loss_cls: 0.113  loss_box_reg: 0.08225  loss_rpn_cls: 0.05743  loss_rpn_loc: 0.03865  time: 0.7851  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 03:59:29] d2.utils.events INFO:  eta: 0:25:33  iter: 1319  total_loss: 0.3349  loss_cls: 0.1474  loss_box_reg: 0.1388  loss_rpn_cls: 0.0278  loss_rpn_loc: 0.02244  time: 0.7870  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 03:59:45] d2.utils.events INFO:  eta: 0:25:14  iter: 1339  total_loss: 0.2945  loss_cls: 0.1114  loss_box_reg: 0.08336  loss_rpn_cls: 0.04442  loss_rpn_loc: 0.03385  time: 0.7871  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:00:02] d2.utils.events INFO:  eta: 0:24:57  iter: 1359  total_loss: 0.534  loss_cls: 0.2313  loss_box_reg: 0.2486  loss_rpn_cls: 0.03834  loss_rpn_loc: 0.0284  time: 0.7878  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:00:18] d2.utils.events INFO:  eta: 0:24:43  iter: 1379  total_loss: 0.3923  loss_cls: 0.1963  loss_box_reg: 0.1861  loss_rpn_cls: 0.04442  loss_rpn_loc: 0.03204  time: 0.7881  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:00:33] d2.utils.events INFO:  eta: 0:24:22  iter: 1399  total_loss: 0.3761  loss_cls: 0.1848  loss_box_reg: 0.1158  loss_rpn_cls: 0.05514  loss_rpn_loc: 0.0507  time: 0.7878  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:00:51] d2.utils.events INFO:  eta: 0:24:20  iter: 1419  total_loss: 0.5723  loss_cls: 0.2182  loss_box_reg: 0.2392  loss_rpn_cls: 0.06599  loss_rpn_loc: 0.03836  time: 0.7894  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:01:08] d2.utils.events INFO:  eta: 0:24:02  iter: 1439  total_loss: 0.3938  loss_cls: 0.1533  loss_box_reg: 0.1458  loss_rpn_cls: 0.0412  loss_rpn_loc: 0.03426  time: 0.7902  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:01:24] d2.utils.events INFO:  eta: 0:23:39  iter: 1459  total_loss: 0.3619  loss_cls: 0.1431  loss_box_reg: 0.1266  loss_rpn_cls: 0.05463  loss_rpn_loc: 0.06387  time: 0.7899  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:01:39] d2.utils.events INFO:  eta: 0:23:22  iter: 1479  total_loss: 0.4256  loss_cls: 0.1783  loss_box_reg: 0.1194  loss_rpn_cls: 0.0521  loss_rpn_loc: 0.04857  time: 0.7892  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:01:55] d2.utils.events INFO:  eta: 0:23:01  iter: 1499  total_loss: 0.301  loss_cls: 0.1591  loss_box_reg: 0.07245  loss_rpn_cls: 0.02476  loss_rpn_loc: 0.0418  time: 0.7897  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:02:09] d2.utils.events INFO:  eta: 0:22:41  iter: 1519  total_loss: 0.3237  loss_cls: 0.1336  loss_box_reg: 0.07206  loss_rpn_cls: 0.04401  loss_rpn_loc: 0.03615  time: 0.7884  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:02:26] d2.utils.events INFO:  eta: 0:22:22  iter: 1539  total_loss: 0.4486  loss_cls: 0.1669  loss_box_reg: 0.1107  loss_rpn_cls: 0.02559  loss_rpn_loc: 0.02479  time: 0.7894  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:02:43] d2.utils.events INFO:  eta: 0:22:05  iter: 1559  total_loss: 0.3151  loss_cls: 0.1409  loss_box_reg: 0.07759  loss_rpn_cls: 0.04545  loss_rpn_loc: 0.03773  time: 0.7896  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:02:59] d2.utils.events INFO:  eta: 0:21:46  iter: 1579  total_loss: 0.4186  loss_cls: 0.1859  loss_box_reg: 0.1506  loss_rpn_cls: 0.04552  loss_rpn_loc: 0.04295  time: 0.7899  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:03:15] d2.utils.events INFO:  eta: 0:21:31  iter: 1599  total_loss: 0.2737  loss_cls: 0.1048  loss_box_reg: 0.088  loss_rpn_cls: 0.02611  loss_rpn_loc: 0.0287  time: 0.7900  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:03:31] d2.utils.events INFO:  eta: 0:21:14  iter: 1619  total_loss: 0.3493  loss_cls: 0.1422  loss_box_reg: 0.1005  loss_rpn_cls: 0.0293  loss_rpn_loc: 0.02303  time: 0.7903  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:03:48] d2.utils.events INFO:  eta: 0:20:59  iter: 1639  total_loss: 0.4854  loss_cls: 0.1598  loss_box_reg: 0.1678  loss_rpn_cls: 0.03431  loss_rpn_loc: 0.03443  time: 0.7911  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:04:04] d2.utils.events INFO:  eta: 0:20:40  iter: 1659  total_loss: 0.3286  loss_cls: 0.1567  loss_box_reg: 0.09283  loss_rpn_cls: 0.02355  loss_rpn_loc: 0.01965  time: 0.7907  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:04:19] d2.utils.events INFO:  eta: 0:20:21  iter: 1679  total_loss: 0.46  loss_cls: 0.1772  loss_box_reg: 0.09742  loss_rpn_cls: 0.05921  loss_rpn_loc: 0.0592  time: 0.7907  data_time: 0.0019  lr: 0.0002  max_mem: 15381M
[04/10 04:04:35] d2.utils.events INFO:  eta: 0:20:03  iter: 1699  total_loss: 0.3528  loss_cls: 0.168  loss_box_reg: 0.1144  loss_rpn_cls: 0.03416  loss_rpn_loc: 0.03444  time: 0.7904  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:04:52] d2.utils.events INFO:  eta: 0:19:46  iter: 1719  total_loss: 0.552  loss_cls: 0.248  loss_box_reg: 0.1605  loss_rpn_cls: 0.03547  loss_rpn_loc: 0.02991  time: 0.7910  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:05:07] d2.utils.events INFO:  eta: 0:19:30  iter: 1739  total_loss: 0.3701  loss_cls: 0.1401  loss_box_reg: 0.09234  loss_rpn_cls: 0.05734  loss_rpn_loc: 0.03775  time: 0.7908  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:05:23] d2.utils.events INFO:  eta: 0:19:13  iter: 1759  total_loss: 0.2175  loss_cls: 0.09076  loss_box_reg: 0.03994  loss_rpn_cls: 0.04832  loss_rpn_loc: 0.04003  time: 0.7908  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:05:40] d2.utils.events INFO:  eta: 0:18:59  iter: 1779  total_loss: 0.2999  loss_cls: 0.1185  loss_box_reg: 0.08722  loss_rpn_cls: 0.03829  loss_rpn_loc: 0.04348  time: 0.7912  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:05:56] d2.utils.events INFO:  eta: 0:18:38  iter: 1799  total_loss: 0.3986  loss_cls: 0.1687  loss_box_reg: 0.161  loss_rpn_cls: 0.04429  loss_rpn_loc: 0.03882  time: 0.7917  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:06:12] d2.utils.events INFO:  eta: 0:18:21  iter: 1819  total_loss: 0.3321  loss_cls: 0.1372  loss_box_reg: 0.09543  loss_rpn_cls: 0.03551  loss_rpn_loc: 0.03508  time: 0.7916  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:06:28] d2.utils.events INFO:  eta: 0:18:03  iter: 1839  total_loss: 0.4472  loss_cls: 0.1826  loss_box_reg: 0.09733  loss_rpn_cls: 0.04591  loss_rpn_loc: 0.03344  time: 0.7916  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:06:45] d2.utils.events INFO:  eta: 0:17:46  iter: 1859  total_loss: 0.4945  loss_cls: 0.1985  loss_box_reg: 0.2067  loss_rpn_cls: 0.02594  loss_rpn_loc: 0.04164  time: 0.7924  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:07:01] d2.utils.events INFO:  eta: 0:17:29  iter: 1879  total_loss: 0.3472  loss_cls: 0.1288  loss_box_reg: 0.11  loss_rpn_cls: 0.0322  loss_rpn_loc: 0.03988  time: 0.7923  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:07:17] d2.utils.events INFO:  eta: 0:17:11  iter: 1899  total_loss: 0.3193  loss_cls: 0.1209  loss_box_reg: 0.08744  loss_rpn_cls: 0.03846  loss_rpn_loc: 0.03764  time: 0.7922  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:07:33] d2.utils.events INFO:  eta: 0:16:53  iter: 1919  total_loss: 0.2731  loss_cls: 0.1158  loss_box_reg: 0.0664  loss_rpn_cls: 0.05064  loss_rpn_loc: 0.03539  time: 0.7924  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:07:48] d2.utils.events INFO:  eta: 0:16:36  iter: 1939  total_loss: 0.5933  loss_cls: 0.2356  loss_box_reg: 0.1591  loss_rpn_cls: 0.03795  loss_rpn_loc: 0.06079  time: 0.7920  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:08:03] d2.utils.events INFO:  eta: 0:16:17  iter: 1959  total_loss: 0.4119  loss_cls: 0.1599  loss_box_reg: 0.1549  loss_rpn_cls: 0.03616  loss_rpn_loc: 0.04398  time: 0.7915  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:08:19] d2.utils.events INFO:  eta: 0:15:59  iter: 1979  total_loss: 0.4013  loss_cls: 0.1644  loss_box_reg: 0.08304  loss_rpn_cls: 0.06151  loss_rpn_loc: 0.04419  time: 0.7916  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:08:32] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/annotations/instances-val-visdrone.json
[04/10 04:08:32] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/10 04:08:32] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/10 04:08:32] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/10 04:08:32] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/10 04:08:33] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0006 s/iter. Inference: 0.1196 s/iter. Eval: 0.0009 s/iter. Total: 0.1211 s/iter. ETA=0:01:05
[04/10 04:08:38] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0008 s/iter. Inference: 0.1196 s/iter. Eval: 0.0003 s/iter. Total: 0.1208 s/iter. ETA=0:00:59
[04/10 04:08:44] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0008 s/iter. Inference: 0.1196 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:54
[04/10 04:08:49] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0008 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:49
[04/10 04:08:54] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1198 s/iter. Eval: 0.0002 s/iter. Total: 0.1209 s/iter. ETA=0:00:44
[04/10 04:08:59] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:39
[04/10 04:09:04] d2.evaluation.evaluator INFO: Inference done 262/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:34
[04/10 04:09:09] d2.evaluation.evaluator INFO: Inference done 304/548. Dataloading: 0.0009 s/iter. Inference: 0.1202 s/iter. Eval: 0.0002 s/iter. Total: 0.1213 s/iter. ETA=0:00:29
[04/10 04:09:14] d2.evaluation.evaluator INFO: Inference done 346/548. Dataloading: 0.0009 s/iter. Inference: 0.1201 s/iter. Eval: 0.0002 s/iter. Total: 0.1213 s/iter. ETA=0:00:24
[04/10 04:09:19] d2.evaluation.evaluator INFO: Inference done 388/548. Dataloading: 0.0009 s/iter. Inference: 0.1201 s/iter. Eval: 0.0002 s/iter. Total: 0.1212 s/iter. ETA=0:00:19
[04/10 04:09:24] d2.evaluation.evaluator INFO: Inference done 430/548. Dataloading: 0.0009 s/iter. Inference: 0.1201 s/iter. Eval: 0.0002 s/iter. Total: 0.1213 s/iter. ETA=0:00:14
[04/10 04:09:29] d2.evaluation.evaluator INFO: Inference done 472/548. Dataloading: 0.0009 s/iter. Inference: 0.1202 s/iter. Eval: 0.0002 s/iter. Total: 0.1213 s/iter. ETA=0:00:09
[04/10 04:09:34] d2.evaluation.evaluator INFO: Inference done 513/548. Dataloading: 0.0009 s/iter. Inference: 0.1202 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:04
[04/10 04:09:39] d2.evaluation.evaluator INFO: Total inference time: 0:01:06.027813 (0.121598 s / iter per device, on 1 devices)
[04/10 04:09:39] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.120338 s / iter per device, on 1 devices)
[04/10 04:09:39] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/10 04:09:39] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/10 04:09:39] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/10 04:09:39] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/10 04:09:40] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.44 seconds.
[04/10 04:09:40] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/10 04:09:40] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 1.299 | 3.383  | 0.747  | 0.441 | 2.308 | 5.237 |
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/10 04:09:40] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP    | category   | AP    |
|:-----------|:------|:----------------|:------|:-----------|:------|
| pedestrian | 0.655 | people          | 1.108 | bicycle    | 0.656 |
| car        | 0.000 | van             | 6.521 | truck      | 1.696 |
| tricycle   | 1.651 | awning-tricycle | 0.116 | bus        | 1.872 |
| motor      | 0.000 | others          | 0.015 | rickshaw   | nan   |
| leguna     | nan   | cng             | nan   | manual-van | nan   |
[04/10 04:09:40] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/10 04:09:40] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/10 04:09:40] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/10 04:09:40] d2.evaluation.testing INFO: copypaste: 1.2992,3.3833,0.7474,0.4412,2.3076,5.2374,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/10 04:09:40] d2.utils.events INFO:  eta: 0:15:42  iter: 1999  total_loss: 0.3251  loss_cls: 0.127  loss_box_reg: 0.04997  loss_rpn_cls: 0.05548  loss_rpn_loc: 0.0548  time: 0.7899  data_time: 0.0019  lr: 0.0002  max_mem: 15381M
[04/10 04:09:54] d2.utils.events INFO:  eta: 0:15:25  iter: 2019  total_loss: 0.3883  loss_cls: 0.1884  loss_box_reg: 0.09355  loss_rpn_cls: 0.04061  loss_rpn_loc: 0.04463  time: 0.7893  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:10:10] d2.utils.events INFO:  eta: 0:15:08  iter: 2039  total_loss: 0.2722  loss_cls: 0.1092  loss_box_reg: 0.05817  loss_rpn_cls: 0.03824  loss_rpn_loc: 0.03536  time: 0.7894  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:10:25] d2.utils.events INFO:  eta: 0:14:50  iter: 2059  total_loss: 0.2471  loss_cls: 0.1091  loss_box_reg: 0.08036  loss_rpn_cls: 0.03294  loss_rpn_loc: 0.02743  time: 0.7890  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:10:42] d2.utils.events INFO:  eta: 0:14:33  iter: 2079  total_loss: 0.2399  loss_cls: 0.109  loss_box_reg: 0.08723  loss_rpn_cls: 0.0153  loss_rpn_loc: 0.03096  time: 0.7892  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:10:59] d2.utils.events INFO:  eta: 0:14:14  iter: 2099  total_loss: 0.2851  loss_cls: 0.1356  loss_box_reg: 0.09882  loss_rpn_cls: 0.02737  loss_rpn_loc: 0.01408  time: 0.7898  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:11:16] d2.utils.events INFO:  eta: 0:13:58  iter: 2119  total_loss: 0.3133  loss_cls: 0.1403  loss_box_reg: 0.1172  loss_rpn_cls: 0.02393  loss_rpn_loc: 0.01867  time: 0.7904  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:11:32] d2.utils.events INFO:  eta: 0:13:40  iter: 2139  total_loss: 0.355  loss_cls: 0.1333  loss_box_reg: 0.09804  loss_rpn_cls: 0.02806  loss_rpn_loc: 0.03326  time: 0.7905  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:11:49] d2.utils.events INFO:  eta: 0:13:23  iter: 2159  total_loss: 0.3159  loss_cls: 0.1358  loss_box_reg: 0.1033  loss_rpn_cls: 0.02971  loss_rpn_loc: 0.01782  time: 0.7910  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:12:03] d2.utils.events INFO:  eta: 0:13:05  iter: 2179  total_loss: 0.2212  loss_cls: 0.09516  loss_box_reg: 0.05966  loss_rpn_cls: 0.02806  loss_rpn_loc: 0.03414  time: 0.7902  data_time: 0.0019  lr: 0.0002  max_mem: 15381M
[04/10 04:12:20] d2.utils.events INFO:  eta: 0:12:48  iter: 2199  total_loss: 0.3538  loss_cls: 0.1313  loss_box_reg: 0.1272  loss_rpn_cls: 0.03834  loss_rpn_loc: 0.03741  time: 0.7906  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:12:36] d2.utils.events INFO:  eta: 0:12:31  iter: 2219  total_loss: 0.3162  loss_cls: 0.1352  loss_box_reg: 0.103  loss_rpn_cls: 0.03445  loss_rpn_loc: 0.02821  time: 0.7909  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:12:53] d2.utils.events INFO:  eta: 0:12:14  iter: 2239  total_loss: 0.2931  loss_cls: 0.125  loss_box_reg: 0.09313  loss_rpn_cls: 0.03536  loss_rpn_loc: 0.03958  time: 0.7914  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:13:09] d2.utils.events INFO:  eta: 0:11:56  iter: 2259  total_loss: 0.3532  loss_cls: 0.169  loss_box_reg: 0.1319  loss_rpn_cls: 0.02685  loss_rpn_loc: 0.02627  time: 0.7916  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:13:26] d2.utils.events INFO:  eta: 0:11:39  iter: 2279  total_loss: 0.374  loss_cls: 0.1552  loss_box_reg: 0.144  loss_rpn_cls: 0.02623  loss_rpn_loc: 0.02993  time: 0.7920  data_time: 0.0022  lr: 0.0002  max_mem: 15381M
[04/10 04:13:43] d2.utils.events INFO:  eta: 0:11:22  iter: 2299  total_loss: 0.4251  loss_cls: 0.1723  loss_box_reg: 0.142  loss_rpn_cls: 0.01801  loss_rpn_loc: 0.036  time: 0.7925  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:13:59] d2.utils.events INFO:  eta: 0:11:04  iter: 2319  total_loss: 0.3136  loss_cls: 0.1488  loss_box_reg: 0.04692  loss_rpn_cls: 0.0315  loss_rpn_loc: 0.04759  time: 0.7923  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:14:14] d2.utils.events INFO:  eta: 0:10:46  iter: 2339  total_loss: 0.344  loss_cls: 0.1177  loss_box_reg: 0.1173  loss_rpn_cls: 0.03616  loss_rpn_loc: 0.02697  time: 0.7921  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:14:30] d2.utils.events INFO:  eta: 0:10:29  iter: 2359  total_loss: 0.2983  loss_cls: 0.1081  loss_box_reg: 0.07525  loss_rpn_cls: 0.05089  loss_rpn_loc: 0.04417  time: 0.7919  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:14:46] d2.utils.events INFO:  eta: 0:10:12  iter: 2379  total_loss: 0.4178  loss_cls: 0.1628  loss_box_reg: 0.1119  loss_rpn_cls: 0.03183  loss_rpn_loc: 0.04977  time: 0.7921  data_time: 0.0021  lr: 0.0002  max_mem: 15381M
[04/10 04:15:01] d2.utils.events INFO:  eta: 0:09:55  iter: 2399  total_loss: 0.3509  loss_cls: 0.1231  loss_box_reg: 0.07348  loss_rpn_cls: 0.05776  loss_rpn_loc: 0.05338  time: 0.7917  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:15:17] d2.utils.events INFO:  eta: 0:09:38  iter: 2419  total_loss: 0.3531  loss_cls: 0.1471  loss_box_reg: 0.099  loss_rpn_cls: 0.03148  loss_rpn_loc: 0.03967  time: 0.7917  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:15:31] d2.utils.events INFO:  eta: 0:09:19  iter: 2439  total_loss: 0.2594  loss_cls: 0.09915  loss_box_reg: 0.0701  loss_rpn_cls: 0.03787  loss_rpn_loc: 0.02781  time: 0.7912  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:15:46] d2.utils.events INFO:  eta: 0:09:03  iter: 2459  total_loss: 0.2949  loss_cls: 0.1008  loss_box_reg: 0.07662  loss_rpn_cls: 0.03214  loss_rpn_loc: 0.03464  time: 0.7907  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:16:02] d2.utils.events INFO:  eta: 0:08:46  iter: 2479  total_loss: 0.2465  loss_cls: 0.08409  loss_box_reg: 0.08426  loss_rpn_cls: 0.02445  loss_rpn_loc: 0.03588  time: 0.7906  data_time: 0.0020  lr: 0.0002  max_mem: 15381M
[04/10 04:16:17] d2.utils.events INFO:  eta: 0:08:29  iter: 2499  total_loss: 0.2367  loss_cls: 0.1003  loss_box_reg: 0.08649  loss_rpn_cls: 0.0257  loss_rpn_loc: 0.02679  time: 0.7905  data_time: 0.0019  lr: 0.0002  max_mem: 15381M
[04/10 04:16:31] d2.utils.events INFO:  eta: 0:08:12  iter: 2519  total_loss: 0.2849  loss_cls: 0.1028  loss_box_reg: 0.03361  loss_rpn_cls: 0.03468  loss_rpn_loc: 0.03765  time: 0.7898  data_time: 0.0019  lr: 2e-05  max_mem: 15381M
[04/10 04:16:46] d2.utils.events INFO:  eta: 0:07:54  iter: 2539  total_loss: 0.2769  loss_cls: 0.09735  loss_box_reg: 0.04257  loss_rpn_cls: 0.0554  loss_rpn_loc: 0.04809  time: 0.7891  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:17:02] d2.utils.events INFO:  eta: 0:07:37  iter: 2559  total_loss: 0.2929  loss_cls: 0.122  loss_box_reg: 0.07213  loss_rpn_cls: 0.02198  loss_rpn_loc: 0.0512  time: 0.7895  data_time: 0.0022  lr: 2e-05  max_mem: 15381M
[04/10 04:17:19] d2.utils.events INFO:  eta: 0:07:20  iter: 2579  total_loss: 0.3546  loss_cls: 0.1421  loss_box_reg: 0.1566  loss_rpn_cls: 0.02639  loss_rpn_loc: 0.03424  time: 0.7899  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:17:32] d2.utils.events INFO:  eta: 0:07:03  iter: 2599  total_loss: 0.215  loss_cls: 0.08621  loss_box_reg: 0.03096  loss_rpn_cls: 0.05029  loss_rpn_loc: 0.03156  time: 0.7889  data_time: 0.0019  lr: 2e-05  max_mem: 15381M
[04/10 04:17:48] d2.utils.events INFO:  eta: 0:06:45  iter: 2619  total_loss: 0.2749  loss_cls: 0.1155  loss_box_reg: 0.06425  loss_rpn_cls: 0.01671  loss_rpn_loc: 0.03055  time: 0.7890  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:18:05] d2.utils.events INFO:  eta: 0:06:28  iter: 2639  total_loss: 0.2362  loss_cls: 0.1083  loss_box_reg: 0.09485  loss_rpn_cls: 0.02729  loss_rpn_loc: 0.03218  time: 0.7891  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:18:21] d2.utils.events INFO:  eta: 0:06:11  iter: 2659  total_loss: 0.2703  loss_cls: 0.126  loss_box_reg: 0.08231  loss_rpn_cls: 0.02288  loss_rpn_loc: 0.03404  time: 0.7893  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:18:36] d2.utils.events INFO:  eta: 0:05:54  iter: 2679  total_loss: 0.2994  loss_cls: 0.09849  loss_box_reg: 0.07142  loss_rpn_cls: 0.02161  loss_rpn_loc: 0.02739  time: 0.7890  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:18:53] d2.utils.events INFO:  eta: 0:05:38  iter: 2699  total_loss: 0.271  loss_cls: 0.1085  loss_box_reg: 0.05939  loss_rpn_cls: 0.01608  loss_rpn_loc: 0.03622  time: 0.7896  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:19:11] d2.utils.events INFO:  eta: 0:05:21  iter: 2719  total_loss: 0.3292  loss_cls: 0.1148  loss_box_reg: 0.1092  loss_rpn_cls: 0.01682  loss_rpn_loc: 0.01898  time: 0.7901  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:19:29] d2.utils.events INFO:  eta: 0:05:05  iter: 2739  total_loss: 0.2677  loss_cls: 0.1082  loss_box_reg: 0.07818  loss_rpn_cls: 0.01528  loss_rpn_loc: 0.03393  time: 0.7910  data_time: 0.0023  lr: 2e-05  max_mem: 15381M
[04/10 04:19:45] d2.utils.events INFO:  eta: 0:04:48  iter: 2759  total_loss: 0.2844  loss_cls: 0.1123  loss_box_reg: 0.07473  loss_rpn_cls: 0.01428  loss_rpn_loc: 0.03199  time: 0.7910  data_time: 0.0022  lr: 2e-05  max_mem: 15381M
[04/10 04:20:03] d2.utils.events INFO:  eta: 0:04:32  iter: 2779  total_loss: 0.3512  loss_cls: 0.1125  loss_box_reg: 0.1288  loss_rpn_cls: 0.02005  loss_rpn_loc: 0.03364  time: 0.7918  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:20:18] d2.utils.events INFO:  eta: 0:04:15  iter: 2799  total_loss: 0.2917  loss_cls: 0.113  loss_box_reg: 0.1041  loss_rpn_cls: 0.02958  loss_rpn_loc: 0.02686  time: 0.7916  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:20:35] d2.utils.events INFO:  eta: 0:03:58  iter: 2819  total_loss: 0.3147  loss_cls: 0.1253  loss_box_reg: 0.06591  loss_rpn_cls: 0.0181  loss_rpn_loc: 0.02737  time: 0.7919  data_time: 0.0022  lr: 2e-05  max_mem: 15381M
[04/10 04:20:52] d2.utils.events INFO:  eta: 0:03:41  iter: 2839  total_loss: 0.2854  loss_cls: 0.1252  loss_box_reg: 0.08309  loss_rpn_cls: 0.0138  loss_rpn_loc: 0.03374  time: 0.7922  data_time: 0.0022  lr: 2e-05  max_mem: 15381M
[04/10 04:21:07] d2.utils.events INFO:  eta: 0:03:24  iter: 2859  total_loss: 0.2406  loss_cls: 0.0852  loss_box_reg: 0.06953  loss_rpn_cls: 0.02377  loss_rpn_loc: 0.02714  time: 0.7919  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:21:20] d2.utils.events INFO:  eta: 0:03:07  iter: 2879  total_loss: 0.2891  loss_cls: 0.1127  loss_box_reg: 0.09809  loss_rpn_cls: 0.0164  loss_rpn_loc: 0.0452  time: 0.7912  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:21:38] d2.utils.events INFO:  eta: 0:02:50  iter: 2899  total_loss: 0.4427  loss_cls: 0.1515  loss_box_reg: 0.2389  loss_rpn_cls: 0.02053  loss_rpn_loc: 0.02217  time: 0.7916  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:21:52] d2.utils.events INFO:  eta: 0:02:33  iter: 2919  total_loss: 0.1985  loss_cls: 0.07517  loss_box_reg: 0.05125  loss_rpn_cls: 0.0187  loss_rpn_loc: 0.02362  time: 0.7910  data_time: 0.0020  lr: 2e-05  max_mem: 15381M
[04/10 04:22:09] d2.utils.events INFO:  eta: 0:02:16  iter: 2939  total_loss: 0.3265  loss_cls: 0.126  loss_box_reg: 0.1122  loss_rpn_cls: 0.01452  loss_rpn_loc: 0.02885  time: 0.7914  data_time: 0.0022  lr: 2e-05  max_mem: 15381M
[04/10 04:22:25] d2.utils.events INFO:  eta: 0:01:59  iter: 2959  total_loss: 0.3712  loss_cls: 0.1437  loss_box_reg: 0.1572  loss_rpn_cls: 0.0189  loss_rpn_loc: 0.03604  time: 0.7914  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:22:41] d2.utils.events INFO:  eta: 0:01:42  iter: 2979  total_loss: 0.2136  loss_cls: 0.09101  loss_box_reg: 0.05581  loss_rpn_cls: 0.0151  loss_rpn_loc: 0.03341  time: 0.7917  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:22:57] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/annotations/instances-val-visdrone.json
[04/10 04:22:57] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/10 04:22:57] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/10 04:22:57] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/10 04:22:57] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/10 04:22:59] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0006 s/iter. Inference: 0.1193 s/iter. Eval: 0.0006 s/iter. Total: 0.1206 s/iter. ETA=0:01:04
[04/10 04:23:04] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0008 s/iter. Inference: 0.1197 s/iter. Eval: 0.0002 s/iter. Total: 0.1208 s/iter. ETA=0:00:59
[04/10 04:23:09] d2.evaluation.evaluator INFO: Inference done 93/548. Dataloading: 0.0008 s/iter. Inference: 0.1216 s/iter. Eval: 0.0002 s/iter. Total: 0.1227 s/iter. ETA=0:00:55
[04/10 04:23:14] d2.evaluation.evaluator INFO: Inference done 135/548. Dataloading: 0.0009 s/iter. Inference: 0.1209 s/iter. Eval: 0.0002 s/iter. Total: 0.1221 s/iter. ETA=0:00:50
[04/10 04:23:19] d2.evaluation.evaluator INFO: Inference done 177/548. Dataloading: 0.0009 s/iter. Inference: 0.1207 s/iter. Eval: 0.0002 s/iter. Total: 0.1218 s/iter. ETA=0:00:45
[04/10 04:23:24] d2.evaluation.evaluator INFO: Inference done 219/548. Dataloading: 0.0009 s/iter. Inference: 0.1205 s/iter. Eval: 0.0002 s/iter. Total: 0.1216 s/iter. ETA=0:00:40
[04/10 04:23:29] d2.evaluation.evaluator INFO: Inference done 261/548. Dataloading: 0.0009 s/iter. Inference: 0.1204 s/iter. Eval: 0.0002 s/iter. Total: 0.1215 s/iter. ETA=0:00:34
[04/10 04:23:34] d2.evaluation.evaluator INFO: Inference done 303/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1215 s/iter. ETA=0:00:29
[04/10 04:23:39] d2.evaluation.evaluator INFO: Inference done 345/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:24
[04/10 04:23:44] d2.evaluation.evaluator INFO: Inference done 387/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:19
[04/10 04:23:49] d2.evaluation.evaluator INFO: Inference done 429/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:14
[04/10 04:23:55] d2.evaluation.evaluator INFO: Inference done 471/548. Dataloading: 0.0009 s/iter. Inference: 0.1202 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:09
[04/10 04:24:00] d2.evaluation.evaluator INFO: Inference done 513/548. Dataloading: 0.0009 s/iter. Inference: 0.1203 s/iter. Eval: 0.0002 s/iter. Total: 0.1214 s/iter. ETA=0:00:04
[04/10 04:24:04] d2.evaluation.evaluator INFO: Total inference time: 0:01:06.039118 (0.121619 s / iter per device, on 1 devices)
[04/10 04:24:04] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.120278 s / iter per device, on 1 devices)
[04/10 04:24:04] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/10 04:24:04] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/10 04:24:04] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/10 04:24:05] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/10 04:24:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.47 seconds.
[04/10 04:24:05] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/10 04:24:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.08 seconds.
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 4.225 | 8.624  | 3.852  | 1.127 | 7.358 | 14.357 |
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/10 04:24:05] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP     | category   | AP    |
|:-----------|:------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.439 | people          | 3.045  | bicycle    | 0.884 |
| car        | 0.000 | van             | 13.152 | truck      | 9.657 |
| tricycle   | 3.466 | awning-tricycle | 1.143  | bus        | 9.654 |
| motor      | 0.000 | others          | 0.032  | rickshaw   | nan   |
| leguna     | nan   | cng             | nan    | manual-van | nan   |
[04/10 04:24:05] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/10 04:24:05] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/10 04:24:05] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/10 04:24:05] d2.evaluation.testing INFO: copypaste: 4.2247,8.6240,3.8522,1.1270,7.3583,14.3574,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[04/10 04:24:05] d2.utils.events INFO:  eta: 0:01:25  iter: 2999  total_loss: 0.2641  loss_cls: 0.1085  loss_box_reg: 0.08155  loss_rpn_cls: 0.02669  loss_rpn_loc: 0.03605  time: 0.7916  data_time: 0.0021  lr: 2e-05  max_mem: 15381M
[04/10 04:24:18] d2.utils.events INFO:  eta: 0:01:08  iter: 3019  total_loss: 0.2052  loss_cls: 0.08506  loss_box_reg: 0.05756  loss_rpn_cls: 0.03305  loss_rpn_loc: 0.0279  time: 0.7906  data_time: 0.0020  lr: 2e-06  max_mem: 15381M
[04/10 04:24:35] d2.utils.events INFO:  eta: 0:00:51  iter: 3039  total_loss: 0.1675  loss_cls: 0.07556  loss_box_reg: 0.05334  loss_rpn_cls: 0.01032  loss_rpn_loc: 0.02334  time: 0.7909  data_time: 0.0022  lr: 2e-06  max_mem: 15381M
[04/10 04:24:54] d2.utils.events INFO:  eta: 0:00:34  iter: 3059  total_loss: 0.3495  loss_cls: 0.1324  loss_box_reg: 0.1562  loss_rpn_cls: 0.0136  loss_rpn_loc: 0.02161  time: 0.7921  data_time: 0.0023  lr: 2e-06  max_mem: 15381M
[04/10 04:25:12] d2.utils.events INFO:  eta: 0:00:17  iter: 3079  total_loss: 0.321  loss_cls: 0.1353  loss_box_reg: 0.1315  loss_rpn_cls: 0.01499  loss_rpn_loc: 0.02352  time: 0.7929  data_time: 0.0023  lr: 2e-06  max_mem: 15381M
[04/10 04:25:30] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_0003099.pth
[04/10 04:25:30] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/model_final.pth
[04/10 04:25:31] d2.utils.events INFO:  eta: 0:00:00  iter: 3099  total_loss: 0.5092  loss_cls: 0.1676  loss_box_reg: 0.2813  loss_rpn_cls: 0.02358  loss_rpn_loc: 0.03033  time: 0.7934  data_time: 0.0021  lr: 2e-06  max_mem: 15381M
[04/10 04:25:31] d2.engine.hooks INFO: Overall training speed: 3098 iterations in 0:40:58 (0.7934 s / it)
[04/10 04:25:31] d2.engine.hooks INFO: Total training time: 0:44:30 (0:03:32 on hooks)
[04/10 04:25:31] d2.data.datasets.coco INFO: Loaded 548 images in COCO format from datasets/visdrone/annotations/instances-val-visdrone.json
[04/10 04:25:31] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/10 04:25:31] d2.data.common INFO: Serializing 548 elements to byte tensors and concatenating them all ...
[04/10 04:25:31] d2.data.common INFO: Serialized dataset takes 1.47 MiB
[04/10 04:25:31] d2.evaluation.evaluator INFO: Start inference on 548 batches
[04/10 04:25:33] d2.evaluation.evaluator INFO: Inference done 11/548. Dataloading: 0.0007 s/iter. Inference: 0.1196 s/iter. Eval: 0.0002 s/iter. Total: 0.1205 s/iter. ETA=0:01:04
[04/10 04:25:38] d2.evaluation.evaluator INFO: Inference done 53/548. Dataloading: 0.0008 s/iter. Inference: 0.1200 s/iter. Eval: 0.0003 s/iter. Total: 0.1212 s/iter. ETA=0:00:59
[04/10 04:25:43] d2.evaluation.evaluator INFO: Inference done 95/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1212 s/iter. ETA=0:00:54
[04/10 04:25:48] d2.evaluation.evaluator INFO: Inference done 137/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:49
[04/10 04:25:53] d2.evaluation.evaluator INFO: Inference done 179/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:44
[04/10 04:25:58] d2.evaluation.evaluator INFO: Inference done 221/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0002 s/iter. Total: 0.1210 s/iter. ETA=0:00:39
[04/10 04:26:04] d2.evaluation.evaluator INFO: Inference done 263/548. Dataloading: 0.0009 s/iter. Inference: 0.1199 s/iter. Eval: 0.0002 s/iter. Total: 0.1210 s/iter. ETA=0:00:34
[04/10 04:26:09] d2.evaluation.evaluator INFO: Inference done 305/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:29
[04/10 04:26:14] d2.evaluation.evaluator INFO: Inference done 347/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:24
[04/10 04:26:19] d2.evaluation.evaluator INFO: Inference done 389/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:19
[04/10 04:26:24] d2.evaluation.evaluator INFO: Inference done 431/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1211 s/iter. ETA=0:00:14
[04/10 04:26:29] d2.evaluation.evaluator INFO: Inference done 473/548. Dataloading: 0.0009 s/iter. Inference: 0.1200 s/iter. Eval: 0.0002 s/iter. Total: 0.1212 s/iter. ETA=0:00:09
[04/10 04:26:34] d2.evaluation.evaluator INFO: Inference done 515/548. Dataloading: 0.0009 s/iter. Inference: 0.1201 s/iter. Eval: 0.0002 s/iter. Total: 0.1212 s/iter. ETA=0:00:03
[04/10 04:26:38] d2.evaluation.evaluator INFO: Total inference time: 0:01:06.063391 (0.121664 s / iter per device, on 1 devices)
[04/10 04:26:38] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:05 (0.120432 s / iter per device, on 1 devices)
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Preparing results for COCO format ...
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Saving results to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/inference/visdrone_instances_results.json
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluating predictions ...
[04/10 04:26:39] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/10 04:26:39] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.47 seconds.
[04/10 04:26:39] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/10 04:26:39] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.09 seconds.
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:-----:|:------:|:------:|:-----:|:-----:|:------:|
| 4.214 | 8.667  | 3.693  | 1.140 | 7.410 | 14.317 |
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP  : 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP50: 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> AP75: 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APs : 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APm : 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for VOC 20 categories =======> APl : 0.00
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP  : nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP50: nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> AP75: nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APs : nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APm : nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Evaluation results for Non VOC 60 categories =======> APl : nan
[04/10 04:26:39] FCT.evaluation.visdrone_evaluation INFO: Per-category bbox AP: 
| category   | AP    | category        | AP     | category   | AP    |
|:-----------|:------|:----------------|:-------|:-----------|:------|
| pedestrian | 5.441 | people          | 3.071  | bicycle    | 0.882 |
| car        | 0.000 | van             | 13.254 | truck      | 9.582 |
| tricycle   | 3.594 | awning-tricycle | 1.212  | bus        | 9.282 |
| motor      | 0.000 | others          | 0.034  | rickshaw   | nan   |
| leguna     | nan   | cng             | nan    | manual-van | nan   |
[04/10 04:26:39] d2.engine.defaults INFO: Evaluation results for visdrone_val in csv format:
[04/10 04:26:39] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/10 04:26:39] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl,nAP,nAP50,nAP75,nAPs,nAPm,nAPl,bAP,bAP50,bAP75,bAPs,bAPm,bAPl
[04/10 04:26:39] d2.evaluation.testing INFO: copypaste: 4.2140,8.6671,3.6928,1.1400,7.4103,14.3168,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,nan,nan,nan,nan,nan,nan
[05/19 19:54:50] detectron2 INFO: Rank of current process: 0. World size: 1
[05/19 19:54:50] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
numpy                   1.21.5
detectron2              0.6 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          510.108.03
CUDA_HOME               /usr/local/cuda - invalid!
Pillow                  7.1.2
torchvision             0.11.0 @/home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/rmedu/miniconda3/envs/fct2/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  ---------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[05/19 19:54:50] detectron2 INFO: Command line arguments: Namespace(config_file='configs/fsod/single_branch_pretraining_vbtv_pvt_v2_b2_li.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[05/19 19:54:50] detectron2 INFO: Contents of args.config_file=configs/fsod/single_branch_pretraining_vbtv_pvt_v2_b2_li.yaml:
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m103.530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m116.280[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m123.675[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m57.375[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m57.120[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m58.395[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pvt_v2_b2_li_C4.pth[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_PVT_backbone[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mpvt_v2_b2_li[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGeneralizedRCNN[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPVTROIHeads[39m[38;5;186m"[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("visdrone_train_nonvoc",)[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("vbtv",)[39m[38;5;15m [39m
[38;5;15m  [39m[38;5;242m#("visdrone_val",) [39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(2500,[39m[38;5;141m [39m[38;5;141m3000)[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(100,[39m[38;5;141m [39m[38;5;141m800)[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# MIN_SIZE_TRAIN: (100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)[39m
[38;5;242m# MAX_SIZE_TRAIN: 200[39m
[38;5;242m# MIN_SIZE_TEST: 600[39m
[38;5;242m# MAX_SIZE_TEST: 1000[39m
[38;5;242m# MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)[39m
[38;5;242m# MAX_SIZE_TRAIN: 1333[39m
[38;5;242m# MIN_SIZE_TEST: 800[39m
[38;5;242m# MAX_SIZE_TEST: 1333[39m
[38;5;242m#(750, 999)[39m

[05/19 19:54:50] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mSEEDS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvbtv[39m
[38;5;15m  [39m[38;5;197mTEST_KEEPCLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mTEST_SHOTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvisdrone_train_nonvoc[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mFS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFEW_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_EXCLUDE_QUERY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSUPPORT_SHOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;197mSUPPORT_WAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_PVT_backbone[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_BRANCH_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpvt_v2_b2_li[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mFREEZE_ROI_FEATURE_EXTRACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPVTROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mONLY_TRAIN_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mFREEZE_RPN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./pvt_v2_b2_li_C4.pth[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0002[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mHEAD_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3100[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSOLVER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141madamw[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/19 19:54:50] detectron2 INFO: Full config saved to ./output/fsod/single_branch_pretraining_visdrone_pvt_v2_b2_li/config.yaml
[05/19 19:54:50] d2.utils.env INFO: Using a generated random seed 52367102
[05/19 19:55:09] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): pvt_v2_b2_li(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=1024, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(320, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(320, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): PVTROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (pool): AdaptiveAvgPool2d(output_size=7)
          (sr): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (act): GELU()
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=512, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=512, out_features=320, bias=True)
    )
  )
)
[05/19 19:55:10] d2.data.datasets.coco INFO: Loaded 6471 images in COCO format from datasets/visdrone/new_annotations/final_split_non_voc_instances_visdrone.json
[05/19 19:55:10] d2.data.build INFO: Removed 5853 images with no usable annotations. 618 images left.
[05/19 19:55:10] d2.data.build INFO: Distribution of instances among all 15 categories:
[36m|  category  | #instances   |   category    | #instances   |  category  | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:----------:|:-------------|
| pedestrian | 1621         |    people     | 351          |  bicycle   | 258          |
|    car     | 0            |      van      | 1061         |   truck    | 734          |
|  tricycle  | 101          | awning-tric.. | 54           |    bus     | 270          |
|   motor    | 0            |    others     | 40           |  rickshaw  | 0            |
|   leguna   | 0            |      cng      | 0            | manual-van | 0            |
|            |              |               |              |            |              |
|   total    | 4490         |               |              |            |              |[0m
[05/19 19:55:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(100, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[05/19 19:55:10] d2.data.build INFO: Using training sampler TrainingSampler
[05/19 19:55:10] d2.data.common INFO: Serializing 618 elements to byte tensors and concatenating them all ...
[05/19 19:55:10] d2.data.common INFO: Serialized dataset takes 0.31 MiB
[05/19 19:55:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./pvt_v2_b2_li_C4.pth ...
[05/19 19:55:11] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[05/19 19:55:11] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mhead.{bias, weight}[0m
[05/19 19:55:11] d2.engine.train_loop INFO: Starting training from iteration 0
[05/19 19:55:32] d2.utils.events INFO:  eta: 0:39:19  iter: 19  total_loss: 5.227  loss_cls: 4.408  loss_box_reg: 0.008634  loss_rpn_cls: 0.6934  loss_rpn_loc: 0.1022  time: 0.7261  data_time: 0.0195  lr: 3.9962e-06  max_mem: 15393M
[05/19 19:55:45] d2.engine.hooks INFO: Overall training speed: 34 iterations in 0:00:25 (0.7610 s / it)
[05/19 19:55:45] d2.engine.hooks INFO: Total training time: 0:00:25 (0:00:00 on hooks)
[05/19 19:55:45] d2.utils.events INFO:  eta: 0:41:30  iter: 36  total_loss: 4.994  loss_cls: 4.2  loss_box_reg: 0.01437  loss_rpn_cls: 0.6922  loss_rpn_loc: 0.06174  time: 0.7375  data_time: 0.0022  lr: 7.193e-06  max_mem: 15393M
